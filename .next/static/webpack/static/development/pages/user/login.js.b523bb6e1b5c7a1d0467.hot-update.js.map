{"version":3,"file":"static/webpack/static/development/pages/user/login.js.b523bb6e1b5c7a1d0467.hot-update.js","sources":["webpack:///./pages/user/login.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\nimport Layout from '../../components/layout.js'\nimport { Router, Link } from '../../routes';\nimport validate from '../../localmodules/token_validate';\nimport post from '../../localmodules/express_post';\n\nclass LoginForm extends Component {\n\n    state = {\n        email : '',\n        password : '',\n        res : '',\n        errorMessage : ''\n    }\n\n    callAPI = async () => {\n        this.setState({errorMessage : '', res : ''});\n        const data = {\n            email : this.state.email,\n            password : this.state.password\n        };\n\n        const headers = { 'Content-Type':'application/json' };\n\n        try {\n            const { text, status } = await post('/user/login', headers, data);\n            if(status === 400){\n                this.setState({ errorMessage : text, email : '', password : '' });\n            }\n            else if(status === 200) {\n                this.setState({ res : text });\n                Router.pushRoute(`/${validate(this.state.res).headerToken}`);\n            }\n\n        } catch (e) {\n            console.log(e);\n        }\n\n    }\n\n    onSubmit = async (event) => {\n        event.preventDefault();\n        this.callAPI();\n    }\n\n\n    showError = () => {\n        if(this.state.errorMessage === ''){\n            return null;\n        }\n        return <Message error header={this.state.errorMessage}></Message>;\n    }\n\n    render(){\n        return (\n            <Layout>\n                <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n                    <Grid.Column style={{ maxWidth: 450 }}>\n                    <Header as='h2' color='blue' textAlign='center'>\n                         Log-in to your account\n                    </Header>\n                    <Form size='large' onSubmit={this.onSubmit}>\n                        <Segment stacked>\n                        <Form.Input \n                            value = {this.state.email}\n                            onChange = { event => {this.setState({email : event.target.value})}} \n                            type = 'email'\n                            fluid \n                            icon='user' \n                            iconPosition='left' \n                            placeholder='E-mail address' />\n                        <Form.Input\n                            value = {this.state.password}\n                            onChange = { event => {this.setState({password : event.target.value})}} \n                            fluid\n                            icon='lock'\n                            iconPosition='left'\n                            placeholder='Password'\n                            type='password'\n                        />\n                        <Button color='blue' fluid size='large'>\n                            Login\n                        </Button>\n                        </Segment>\n                    </Form>\n                    <Message>\n                        New to us? <Link route='/user/register'><a>Sign Up</a></Link>\n                    </Message>   \n                    {this.showError()}\n                    </Grid.Column>\n                </Grid>\n            </Layout>\n        );\n    }\n\n}\n\nexport default LoginForm"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AAPA;AAAA;AAAA;AACA;AADA;AAAA;AAUA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAlBA;AAAA;AACA;AADA;AAAA;AAAA;AAoBA;AACA;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAwBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AAAA;AAMA;AAAA;AAOA;;;;AAvFA;AACA;AA0FA;;;;A","sourceRoot":""}