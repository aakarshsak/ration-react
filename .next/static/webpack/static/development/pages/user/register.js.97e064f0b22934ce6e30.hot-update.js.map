{"version":3,"file":"static/webpack/static/development/pages/user/register.js.97e064f0b22934ce6e30.hot-update.js","sources":["webpack:///./pages/user/register.js"],"sourcesContent":["import React, {Component} from 'react';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Input, GridColumn, Select } from 'semantic-ui-react';\nimport Layout from '../../components/layout.js'\nimport { Link, Router } from '../../routes';\nimport post from '../../localmodules/express_post'; \nimport { getBlocksList, getCountryList, getStateList, matchCity, matchCountry, matchState, getCityList }  from '../../localmodules/location/location_dropdown';\n\n\nclass RegisterForm extends Component {\n    state = {\n            pin :'',\n            house:'',\n            area:'',\n            district:'',\n            state:'',\n            phone:'',\n            country: '',\n\n            first : '',\n            middle : '',\n            last : '',\n\n\n        password : '',\n        confirm_pass:'',\n        email : '',\n        aadhar : '',\n    };\n\n    onSubmit = async (event) => {\n        event.preventDefault();\n        const {password, confirm_pass, email, pin, house, area, district, state, phone, first, middle, last, aadhar, country} = this.state;\n\n        const data = {\n            name : { first, middle, last }, \n            password, \n            confirm_pass, \n            email, \n            address : { house, area, district, state, pin, phone, country }, \n            aadhar\n        };\n\n        if(this.state.middle === '')\n            delete data.name.middle;\n        const headers = { 'Content-Type':'application/json' };\n        console.log(data);\n        const { text, status } = await post('/user/register', headers, data);\n        console.log(\"Status\", status);\n        console.log(text);\n        if(status === 200){\n            console.log('Successfully posted...');\n            Router.pushRoute('/user/success');\n        }\n    }\n\n\n    render() {\n        return (\n            <Layout>\n                <Grid verticalAlign='middle' >\n                    <Grid.Column width={2}></Grid.Column>\n                    <Grid.Column width={12}>\n                        <Header as='h2' color='blue' textAlign='center' style={{margin : '35px 35px'}}>\n                            {this.state.res}\n                        </Header>\n                        <Form onSubmit={this.onSubmit}>\n                            <Form.Group widths='equal'>\n                                <Form.Field>\n                                    <label>First Name</label>\n                                    <Input\n                                        type='text'\n                                        placeholder = 'First Name'\n                                        value={this.state.first}\n                                        onChange={event => this.setState({ first : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Middle Name</label>\n                                    <Input\n                                        type='text'\n                                        placeholder = 'Middle Name'\n                                        value={this.state.middle}\n                                        onChange={event => this.setState({middle: event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Last Name</label>\n                                    <Input\n                                        placeholder = 'Last Name'\n                                        type='text'\n                                        value={this.state.last}\n                                        onChange={event => this.setState({last: event.target.value })}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n                            <Form.Group widths='equal'>\n                                <Form.Field>\n                                    <label>House</label>\n                                    <Input\n                                        placeholder = 'House'\n                                        type='text'\n                                        value={this.state.house}\n                                        onChange={event => this.setState({house : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Area</label>\n                                    <Select\n                                        placeholder='Area'\n                                        options={getBlocksList()}\n                                        defaultValue={this.state.area}\n                                        onChange={(event, data) => this.setState({ area : data.value })}\n                                    />\n\n                                </Form.Field>\n                                \n                            </Form.Group>\n\n                            <Form.Group>\n                                <Form.Field width={6}>\n                                    <label>District</label>\n                                    <Select\n                                        placeholder = 'State'\n                                        options = {getCityList(matchState(this.state.state, matchCountry('India').id.toString()).id)}\n                                        defaultValue={this.state.district}\n                                        onChange={(event, data) => this.setState({district : data.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field width={6}>\n                                    <label>Country</label>\n                                    <Select\n                                        placeholder = 'Country'\n                                        options = {getCountryList()}\n                                        defaultValue={this.state.country}\n                                        onChange={(event, data) => this.setState({country : data.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field width={6}>\n                                    <label>State</label>\n                                    <Select\n                                        placeholder = 'State'\n                                        options = {getStateList(matchCountry(this.state.country).id.toString())}\n                                        defaultValue={this.state.state}\n                                        onChange={(event, data) => this.setState({state : data.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field width={4}>\n                                    <label>Pin</label>\n                                    <Input\n                                        placeholder = 'Pin'\n                                        value={this.state.pin}\n                                        onChange={event => this.setState({ pin : event.target.value })}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n\n                            {/* <Form.Group>\n                                <Form.Field width={8}>\n                                    <label>House</label>\n                                    <Input\n                                        placeholder = 'House'\n                                        value={this.state.address.house}\n                                        onChange={event => this.setState({ address : { house : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                <Form.Field width={8}>\n                                    <label>Area</label>\n                                    <Input\n                                        placeholder = 'Area'\n                                        value={this.state.address.area}\n                                        onChange={event => this.setState({ address : { area : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                \n                            </Form.Group> */}\n\n                            <Form.Group widths='equal'>\n                                <Form.Field >\n                                    <label>Email</label>\n                                    <Input\n                                        placeholder = 'Email'\n                                        type = 'email'\n                                        value={this.state.email}\n                                        onChange={event => this.setState({ email : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Aadhar</label>\n                                    <Input\n                                        placeholder = 'Aadhar'\n                                        value={this.state.aadhar}\n                                        onChange={event => this.setState({ aadhar : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Phone</label>\n                                    <Input\n                                        placeholder = 'Phone'\n                                        value={this.state.phone}\n                                        onChange={event => this.setState({phone : event.target.value })}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n                            <Form.Group widths='equal'>\n                                <Form.Field >\n                                    <label>Password</label>\n                                    <Input\n                                        placeholder = 'Password'\n                                        type = 'password'\n                                        value={this.state.password}\n                                        onChange={event => this.setState({ password : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Confirm Password</label>\n                                    <Input\n                                        placeholder = 'Confirm Password'\n                                        type = 'password'\n                                        value={this.state.confirm_pass}\n                                        onChange={event => this.setState({ confirm_pass : event.target.value })}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n                            <Button primary>Submit</Button>\n                            \n                        </Form>\n                    </Grid.Column>\n                    <Grid.Column width={2}></Grid.Column>\n                </Grid>\n            </Layout>\n        );\n    }\n}\n\nexport default RegisterForm;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAjBA;AACA;AAmBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AASA;AAEA;AAAA;AAAA;AACA;AAhBA;AAAA;AACA;AADA;AAAA;AAiBA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AA0BA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAQA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAYA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AA4BA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAOA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAQA;AAAA;AAIA;AAAA;AAIA;;;;AA/NA;AACA;AAiOA;;;;A","sourceRoot":""}