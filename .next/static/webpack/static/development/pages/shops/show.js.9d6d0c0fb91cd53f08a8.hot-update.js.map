{"version":3,"file":"static/webpack/static/development/pages/shops/show.js.9d6d0c0fb91cd53f08a8.hot-update.js","sources":["webpack:///./pages/shops/show.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../../components/layout';\nimport Shop from '../../ethereum/shop';\nimport { Card, Table, Grid, Button } from 'semantic-ui-react';\nimport {  Link, Router } from '../../routes';\nimport validate from '../../localmodules/token_validate';\n\n\nclass ShopShow extends Component {\n\n    static async getInitialProps(props) {\n        const { headerToken, loggedIn } = validate(props.query.headerToken);\n        const address = props.query.address;\n        const s = Shop(address);\n        const details = await s.methods.getDetails().call();\n        const blockName = await s.methods.blockName().call();\n        return { \n            managerName : details[0],\n            items : [{quantity : details[1], name : 'Rice'},\n                    {quantity: details[2], name : 'Wheat'},\n                    {quantity : details[3], name : 'Arhad'},\n                    {quantity : details[4], name : 'Kerosene'}],\n            fpdName : details[5],\n            shopName : details[6],\n            manager : details[7],\n            addr : details[8],\n            currentAddress : address,\n            headerToken,\n            loggedIn,\n            blockName\n        };\n    }\n\n    renderTable() {\n        const tableRows = this.props.items.map(item => {\n            return (\n                <Table.Row>\n                    <Table.Cell>{item.name}</Table.Cell>\n                    <Table.Cell>{item.quantity}</Table.Cell>\n                    <Table.Cell>{10}</Table.Cell>\n                </Table.Row>\n            );\n        });\n        return (\n            <div>\n                <h3><strong>STOCK STATEMENT</strong></h3>\n                <Table>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Item Name</Table.HeaderCell>\n                            <Table.HeaderCell>Stock</Table.HeaderCell>\n                            <Table.HeaderCell>Price(per KG)</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {tableRows}\n                    </Table.Body>\n                </Table>\n            </div>\n        );\n    }\n\n    renderCard() {\n        const items = [\n            {\n                header : this.props.shopName,\n                description : 'SHOP NAME',\n                meta : 'This is the name of the shop.'\n            },\n            {\n                header : this.props.fpdName,\n                description : 'FDP NUMBER',\n                meta : 'This is the name of the shop.'\n            },\n            {\n                header : this.props.managerName,\n                description : 'MANAGER NAME',\n                meta : 'This is the name of the shop.'\n            },\n        ];\n        const desc = [\n            {       \n                header : this.props.blockName,\n                description : 'BLOCK NAME',\n                meta : 'This is the name of the block.',\n            },\n            {       \n                header : this.props.addr,\n                description : 'SHOP ADDRESS',\n                meta : 'This is the name of the shop.',\n                fluid : true\n            },\n        ];\n\n        return (\n            <div>\n                <Card.Group items = {items} itemsPerRow = {3}/>\n                <Card.Group items = {desc}/>\n            </div>\n        );\n    }\n\n    renderButton(){\n        return (\n            <Link route={`/shops/${this.props.currentAddress}/payment`}>\n                <a>\n                    <Button color='blue'>\n                     Make Payment\n                    </Button>\n                </a>\n            </Link>\n        );\n    }\n\n\n    render() {\n        return (\n            <Layout headerToken={this.props.headerToken} loggedIn={this.props.loggedIn}>\n                <Grid style={{color:'#2185D0'}} columns={1}>\n                    <Grid.Row>\n                        <Grid.Column>\n                            {this.renderCard()}\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row textAlign='center'>\n                        <Grid.Column>\n                            {this.renderTable()}\n                        </Grid.Column>  \n                    </Grid.Row>\n                    <Grid.Row textAlign='center'>\n                        <Grid.Column>\n                            {this.renderButton()}\n                        </Grid.Column>  \n                    </Grid.Row>\n                </Grid>\n            </Layout>\n        );\n    }\n}\n\n\nexport default ShopShow;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;AAyBA;AACA;AACA;AAOA;AACA;AAiBA;;;AAEA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAQA;AAEA;AAAA;AAAA;AACA;AAAA;AAGA;;;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAMA;;;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAKA;AAAA;AAQA;;;AA/HA;;;;;;;AACA;AACA;AACA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AACA;;;;;;;;;;;AATA;AACA;AAoIA;;;;A","sourceRoot":""}