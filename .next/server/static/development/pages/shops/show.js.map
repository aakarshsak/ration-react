{"version":3,"file":"static/development/pages/shops/show.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/layout.js","webpack:///./components/navbar.js","webpack:///./ethereum/shop.js","webpack:///./ethereum/web3.js","webpack:///./localmodules/custom_error.js","webpack:///./localmodules/express_get.js","webpack:///./localmodules/express_post.js","webpack:///./localmodules/token_validate.js","webpack:///./pages/shops/show.js","webpack:///./routes.js","webpack:///external \"cross-fetch\"","webpack:///external \"next-routes\"","webpack:///external \"next/head\"","webpack:///external \"react\"","webpack:///external \"semantic-ui-react\"","webpack:///external \"web3\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","import React from 'react';\nimport Navbar from './navbar.js';\nimport Head from 'next/head';\nimport { Container } from 'semantic-ui-react';\n\nexport default (props) => {\n    return (\n        <div>  \n            <Head>\n                <link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\" />\n            </Head>\n            <Navbar loggedIn={props.loggedIn} headerToken={props.headerToken}/>\n            <Container >{props.children}</Container>\n        </div>\n    );\n}","import React, { Component } from 'react';\nimport { Menu, Container, Segment, Dropdown } from 'semantic-ui-react';\nimport {Link, Router} from '../routes';\nimport validate from '../localmodules/token_validate';\nimport get from '../localmodules/express_get';\n\nexport default class Navbar extends Component {\n\n    state = {\n        loggedIn : this.props.loggedIn,\n        user : {\n            name : {first :'', middle:'', last : ''},\n            address: {pin : '', state : '', house : '', phone : '', area:'', district:''},\n            _id : '',\n            email : '',\n            aadhar : ''\n        }\n    }\n\n    static getInitialProps(props) {\n        return validate(props.headerToken);\n    }\n\n    componentDidMount = () => {  \n        this.getUserDetails(this.props.headerToken);\n    }\n\n\n    logOut = (event) => {\n        this.setState({ loggedIn : false });\n        Router.pushRoute('/user/logout');\n    }\n\n    onProfileClick = () => {\n        Router.pushRoute(`/user/details/${validate(this.props.headerToken).headerToken}`)\n    }\n    \n\n\n    logInStatusRender = () => {\n\n        if(this.state.loggedIn){\n            return (\n                <Menu.Menu position='right'>\n                    <Menu.Item\n                        name={this.state.user.name.first +\" \"+ this.state.user.name.last}\n                        onClick={this.onProfileClick}                  \n                    />\n\n                    <Menu.Item \n                        name='Logout'\n                        onClick={this.logOut}    \n                    />\n                </Menu.Menu>\n\n            );\n        }\n\n\n        return (\n            <Menu.Menu position=\"right\">\n\n                <Link route='/user/register'>\n                    <a className='item'>Register</a>\n                </Link>\n\n                <Link route='/user/login'>\n                    <a className='item'>Login</a>\n                </Link>\n\n            </Menu.Menu>\n        );\n    }\n\n    getUserDetails = async (token) => {\n        const headers = { 'Content-Type':'application/json', 'x-auth-token' : token};\n        if(this.state.loggedIn){\n            const {data, status} = await get('/user/login/me', headers);\n            this.setState({user : data});\n        }\n\n    }\n\n\n\n\n    render() {\n\n        const { activeItem  } = this.state;\n        let defaultToken;\n        if(this.props.headerToken === '')\n            defaultToken = `/`;\n        else{\n            defaultToken = `/${validate(this.props.headerToken).headerToken}`;\n        }\n        console.log(defaultToken);\n        return (\n            <Menu size='massive' inverted color='blue'>\n                \n                <Container>\n                    <Link route={defaultToken}>\n                        <a className='item'>eR</a>\n                    </Link>\n                \n                {this.logInStatusRender()}\n                </Container>\n            </Menu>\n        );\n    }\n}","import web3 from './web3';\nimport Shop from './build/Shop.json';\n\nexport default address => {\n  return new web3.eth.Contract(JSON.parse(Shop.interface), address);\n};","const Web3 = require('web3');\n\nconst func = () => {\n  let web3;\n  if (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n    // We are in the browser and metamask is running.\n    console.log(' We are in the browser and metamask is running.');\n    web3 = new Web3(ethereum);\n    ethereum.enable()\n    .then(() => console.log('Enabled Successfully...'))\n    \n  } else {\n    // We are on the server *OR* the user is not running metamask\n    console.log('We are on the server *OR* the user is not running metamask')\n    const provider = new Web3.providers.HttpProvider(\n      'https://rinkeby.infura.io/v3/42d235c7d6304509a63bec8b043c9bc2'\n    );\n    web3 = new Web3(provider);\n  }\n  return web3;\n}\n\n\nmodule.exports = func();","class CustomError extends Error {  \n    constructor (message) {\n        super(message)\n\n        this.name = this.constructor.name\n        // this.status = 404\n    }\n\n    // statusCode() {\n    //     return this.status\n    //     }\n    // }\n}\nmodule.exports = CustomError;","import fetch from 'cross-fetch';\n\nconst get = async (url, headers) => {\n\n    const options = {\n        method : 'get',\n        headers\n    }\n\n    const newUrl = 'http://localhost:7800' + url; \n    const res = await fetch(newUrl, options);\n    const data = await res.json();\n    const status = await res.status;\n\n    return {\n        data,\n        status\n    }\n}\n\n\n\nmodule.exports = get;","const fetch = require('cross-fetch');\n\nconst post = async (url, headers, data) => {\n\n    const options = {\n        method : 'post',\n        headers,\n        body : JSON.stringify(data)\n    }\n\n    const newUrl = 'http://localhost:7800' + url; \n    const res = await fetch(newUrl, options);\n    const text = await res.text();\n    const status = await res.status;\n\n    return {\n        text,\n        status\n    }\n}\n\nmodule.exports = post;","const validate = (token) => {\n    if(token !== undefined ){  \n        if(token.length === 148){\n            return { loggedIn : true, headerToken : token};\n        }\n    }\n    return { loggedIn : false, headerToken : '' };\n}\n\nmodule.exports = validate;","import React, { Component } from 'react';\nimport Layout from '../../components/layout';\nimport Shop from '../../ethereum/shop';\nimport { Card, Table, Grid, Button, Input, Message } from 'semantic-ui-react';\nimport {  Link, Router } from '../../routes';\nimport validate from '../../localmodules/token_validate';\nimport get from '../../localmodules/express_get';\nimport web3 from '../../ethereum/web3';\nimport CustomError from '../../localmodules/custom_error';\nimport post from '../../localmodules/express_post';\n\n\nclass ShopShow extends Component {\n\n    state = { \n        rice : '',\n        wheat : '',\n        arhad : '',\n        kerosene : '',\n        tableError : '',\n        status : ''\n    };\n\n    static async getInitialProps(props) {\n        const { headerToken, loggedIn } = validate(props.query.headerToken);\n        const headers = { 'Content-Type':'application/json', 'x-auth-token' : headerToken};\n        const {data, status} = await get('/user/login/me/blockName', headers);\n        const address = props.query.address;\n\n        const s = Shop(address);\n        const details = await s.methods.getDetails().call();\n        return { \n            managerName : details[0],\n            items : [{quantity : details[1], name : 'Rice', price : '2'},\n                    {quantity: details[2], name : 'Wheat', price : '4'},\n                    {quantity : details[3], name : 'Arhad', price : '3'},\n                    {quantity : details[4], name : 'Kerosene', price : '5'}],\n            fpdName : details[5],\n            shopName : details[6],\n            manager : details[7],\n            addr : details[8],\n            currentAddress : address,\n            headerToken,\n            loggedIn,\n            blockName : data.area,\n            address\n        };\n    }\n\n    renderTable() {\n        const items = this.props.items;\n        const tableRows = (\n            <Table.Body>\n                <Table.Row>\n                    <Table.Cell>{items[0].name}</Table.Cell>\n                    <Table.Cell>{items[0].quantity}</Table.Cell>\n                    <Table.Cell>{items[0].price}</Table.Cell>\n                    <Table.Cell>5 Kg</Table.Cell>\n                    <Table.Cell>\n                        <Input\n                            type='number'\n                            placeholder = 'Quantity'\n                            value={this.state.rice}\n                            onChange={event => this.setState({ rice : event.target.value })}\n                        />\n                    </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                <Table.Cell>{items[1].name}</Table.Cell>\n                    <Table.Cell>{items[1].quantity}</Table.Cell>\n                    <Table.Cell>{items[1].price}</Table.Cell>\n                    <Table.Cell>5 Kg</Table.Cell>\n                    <Table.Cell>\n                        <Input\n                            type='number'\n                            placeholder = 'Quantity'\n                            value={this.state.wheat}\n                            onChange={event => this.setState({ wheat : event.target.value })}\n                        />\n                    </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                <Table.Cell>{items[2].name}</Table.Cell>\n                    <Table.Cell>{items[2].quantity}</Table.Cell>\n                    <Table.Cell>{items[2].price}</Table.Cell>\n                    <Table.Cell>5 Kg</Table.Cell>\n                    <Table.Cell>\n                        <Input\n                            type='number'\n                            placeholder = 'Quantity'\n                            value={this.state.arhad}\n                            onChange={event => this.setState({ arhad : event.target.value })}\n                        />\n                    </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                <Table.Cell>{items[3].name}</Table.Cell>\n                    <Table.Cell>{items[3].quantity}</Table.Cell>\n                    <Table.Cell>{items[3].price}</Table.Cell>\n                    <Table.Cell>5 ltr</Table.Cell>\n                    <Table.Cell>\n                        <Input\n                            type='number'\n                            placeholder = 'Quantity'\n                            value={this.state.kerosene}\n                            onChange={event => this.setState({ kerosene : event.target.value })}\n                        />\n                    </Table.Cell>\n                </Table.Row>\n            </Table.Body>\n        );\n        \n        return (\n            <div>\n                <h3><strong>STOCK STATEMENT</strong></h3>\n                <Table>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Item Name</Table.HeaderCell>\n                            <Table.HeaderCell>Stock</Table.HeaderCell>\n                            <Table.HeaderCell>Price(per KG)</Table.HeaderCell>\n                            <Table.HeaderCell>Maximum Quantity Per Month</Table.HeaderCell>\n                            <Table.HeaderCell>Buying Quantity</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    {tableRows}\n                \n                </Table>\n                {this.renderTableError()}\n            </div>\n        );\n    }\n\n    renderCard() {\n        const items = [\n            {\n                header : this.props.shopName,\n                description : 'SHOP NAME',\n                meta : 'This is the name of the shop.'\n            },\n            {\n                header : this.props.fpdName,\n                description : 'FDP NUMBER',\n                meta : 'This is the name of the shop.'\n            },\n            {\n                header : this.props.managerName,\n                description : 'MANAGER NAME',\n                meta : 'This is the name of the shop.'\n            },\n        ];\n\n        return (\n            <div>\n                <Card.Group items = {items} itemsPerRow = {3}/>\n                    \n                <Card.Group itemsPerRow={2}>\n                    <Card>\n                        <Card.Content>\n                            <Card.Header>{this.props.addr}</Card.Header>\n                            <Card.Meta>This is the name of the shop.</Card.Meta>\n                            <Card.Description>SHOP ADDRESS</Card.Description>\n                        </Card.Content>\n                    </Card>\n                    <Card>\n                        <Card.Content>\n                            <Card.Header>{this.props.blockName}</Card.Header>\n                            <Card.Meta>This is the name of the block.</Card.Meta>\n                            <Card.Description>BLOCK NAME</Card.Description>\n                        </Card.Content>\n                    </Card>\n                </Card.Group>\n            </div>\n        );\n    }\n\n    renderRecordButton() {\n        return (\n\n            <Link route={`/${this.props.headerToken}/shops/record/${this.props.currentAddress}`}>\n                <a>\n                    <Button color='blue'>\n                    View Previous Record Details\n                    </Button>\n                </a>\n            </Link>\n\n        );\n    }\n\n    getRation = async () => {\n        const headers = { 'Content-Type':'application/json', 'x-auth-token' : this.props.headerToken};\n        const {data, status} = await get('/user/login/me', headers);\n        return data.ration;\n    }\n\n    verifyCurrent = () => {\n        const qty = this.state;\n        let msg = '';\n        let count = 0;\n        if(qty.rice > 5){\n            msg = msg+\"Rice\";\n            count++;\n        }\n        if(qty.wheat > 5){\n            msg = msg+\", Wheat\";\n            if(count ===0)\n                msg = 'Wheat'\n            count++;\n        }\n        if(qty.arhad > 5){\n            msg = msg+\", Arhad\";\n            if(count === 0)\n                msg = 'Arhad'\n            count++;\n        }\n        if(qty.kerosene > 5){\n            msg = msg+\", Kerosene\";\n            if(count === 0)\n                msg = 'Kerosene'\n            count++;\n        }\n        if( count > 0){\n            throw new CustomError(`Quantity of ${msg} exceeds the maximum quantity allowed per month.`);\n        }\n    }\n    renderTableError(){\n        if(this.state.tableError === '')\n            return null;\n        else if(this.state.tableError === 'Success')\n            return <Message color='green'>{'Payment Successful.'}</Message>;\n        return <Message color='red'>{this.state.tableError}</Message>;\n    }\n\n    verifyPrevious = async () => {\n        const dateIns = new Date;\n        const date = dateIns.toLocaleDateString() + '(' +dateIns.getHours() +':'+ dateIns.getMinutes() + ')';\n        const threeDigit = 'OD20M05' + this.props.blockName.substring(0,3) + Math.floor(Math.random() * Math.floor(1000));\n        const ration = await this.getRation();\n        const data = {\n            rice : this.state.rice,\n            wheat : this.state.wheat,\n            arhad : this.state.arhad,\n            kerosene : this.state.kerosene,\n            ration : ration,\n            date : date,\n            orderid : threeDigit,\n            fpdName : this.props.fpdName\n        };\n\n        const headers = { 'Content-Type':'application/json' };\n        const {text, status} = await post('/record/verify', headers, data);\n        console.log(status, \"Func\");\n        if(status === 400){\n            this.setState({status});\n            throw new CustomError(text);\n        }\n        \n    }\n\n    saveToMongo = async() => {\n        const dateIns = new Date;\n        const date = dateIns.toLocaleDateString() + '(' +dateIns.getHours() +':'+ dateIns.getMinutes() + ')';\n        const threeDigit = 'OD20M05' + this.props.blockName.substring(0,3) + Math.floor(Math.random() * Math.floor(1000));\n        const ration = await this.getRation();\n        const data = {\n            rice : this.state.rice,\n            wheat : this.state.wheat,\n            arhad : this.state.arhad,\n            kerosene : this.state.kerosene,\n            ration : ration,\n            date : date,\n            orderid : threeDigit,\n            fpdName : this.props.fpdName\n        };\n        const headers = { 'Content-Type':'application/json' };\n        const {text, status} = await post('/record', headers, data);\n        if(status !== 400){\n            this.setState({ tableError : 'Success' });\n        }\n    }\n\n    onClick = async () => {\n        try {\n            this.setState({tableError : ''});\n            this.verifyCurrent();\n            await this.verifyPrevious();\n            console.log(this.state.status);\n            if(!(this.state.status === 400)){\n                const dateIns = new Date;\n                const date = dateIns.toLocaleDateString() + '(' +dateIns.getHours() +':'+ dateIns.getMinutes() + ')';\n                const threeDigit = 'OD20M05' + this.props.blockName.substring(0,3) + Math.floor(Math.random() * Math.floor(1000));\n                const ration = await this.getRation();\n                const accounts = await web3.eth.getAccounts();\n                const s = Shop(this.props.address);\n                await s.methods\n                .purchase(ration, threeDigit, date, this.state.kerosene, this.state.rice, this.state.wheat, this.state.arhad)\n                .send({\n                    from : accounts[0],\n                    value: web3.utils.toWei('72', 'wei')\n                });\n                this.saveToMongo();\n            }\n            \n        } catch(e) {\n            this.setState({tableError : e.message});\n        }\n    }\n\n    renderButton(){\n        return (\n            <Button color='blue' onClick={this.onClick}>\n            Make Payment\n            </Button>\n    \n        );\n    }\n\n\n    render() {\n        return (\n            <Layout headerToken={this.props.headerToken} loggedIn={this.props.loggedIn}>\n                <Grid style={{color:'#2185D0'}} columns={1}>\n                    <Grid.Row textAlign='center'>\n                        <Grid.Column>\n                            {this.renderTable()}\n                        </Grid.Column>  \n                    </Grid.Row>\n                    <Grid.Row textAlign='center'>\n                        <Grid.Column>\n                            {this.renderButton()}\n                        </Grid.Column>  \n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            {this.renderCard()}\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row textAlign='center'>\n                        <Grid.Column>\n                            {this.renderRecordButton()}\n                        </Grid.Column>  \n                    </Grid.Row>\n                    \n                </Grid>\n            </Layout>\n        );\n    }\n}\n\n\nexport default ShopShow;","const routes = require('next-routes')();\n\nroutes\n//.add('/update', '/update')\n.add('/user/details/:headerToken', '/user/details')\n.add('/:headerToken', '/')\n.add('/:headerToken/shops/:address', '/shops/show')\n.add('/:headerToken/shops/record/:address', '/shops/record')\n// .add('/:headerToken/shops/:address/payment', '/shops/payment')\n\n\nmodule.exports = routes;","module.exports = require(\"cross-fetch\");","module.exports = require(\"next-routes\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"semantic-ui-react\");","module.exports = require(\"web3\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AAEA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAFA;AACA;AAHA;AAkBA;AACA;AACA;AApBA;AAuBA;AAAA;AAAA;AACA;AACA;AACA;AA1BA;AA4BA;AACA;AACA;AA9BA;AAmCA;AACA;AACA;AAAA;AAEA;AACA;AAFA;AAMA;AACA;AAFA;AAOA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAKA;AACA;AAnEA;AAqEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AA3EA;AACA;AAYA;AACA;AACA;AACA;AAgEA;AAEA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAOA;AACA;AAvGA;;;;;;;;;;;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AAAA,eAOA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAEA;;;;;;;;;;;ACvBA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAbA;AACA;AAYA;;;;;;;;;;;;;;ACbA;AACA;;;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AAGA;;;;;;;;;;;ACtBA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAHA;AAmLA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAvLA;AAyLA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAtNA;AA+NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAvPA;AAyPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA7QA;AA+QA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAvSA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AACA;AACA;AACA;AACA;AAAA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAeA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAeA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAeA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AACA;AAUA;AAmBA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAOA;AAEA;AAAA;AAAA;AAEA;AAAA;AAkBA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAOA;AACA;AAqCA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AA4EA;AACA;AACA;AAAA;AAAA;AAKA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAKA;AAAA;AAUA;AAAA;AASA;AACA;AAhVA;AACA;AAkVA;;;;;;;;;;;AC/VA;AACA;AACA;AAAA;AACA;AAQA;;;;;;;;;;;;;;;;;;;;;;;ACXA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}