{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Input, GridColumn } from 'semantic-ui-react';\nimport Layout from '../../components/layout.js';\nimport { Link, Router, Select } from '../../routes';\nimport post from '../../localmodules/express_post';\nimport { getBlocksList } from '../../localmodules/location/location_dropdown';\n\nvar RegisterForm = /*#__PURE__*/function (_Component) {\n  _inherits(RegisterForm, _Component);\n\n  function RegisterForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegisterForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegisterForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      pin: '',\n      house: '',\n      area: '',\n      district: '',\n      state: '',\n      phone: '',\n      first: '',\n      middle: '',\n      last: '',\n      password: '',\n      confirm_pass: '',\n      email: '',\n      aadhar: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee(event) {\n      var _this$state, password, confirm_pass, email, pin, house, area, district, state, phone, first, middle, last, aadhar, data, headers, _ref, text, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              _this$state = _this.state, password = _this$state.password, confirm_pass = _this$state.confirm_pass, email = _this$state.email, pin = _this$state.pin, house = _this$state.house, area = _this$state.area, district = _this$state.district, state = _this$state.state, phone = _this$state.phone, first = _this$state.first, middle = _this$state.middle, last = _this$state.last, aadhar = _this$state.aadhar;\n              data = {\n                name: {\n                  first: first,\n                  middle: middle,\n                  last: last\n                },\n                password: password,\n                confirm_pass: confirm_pass,\n                email: email,\n                address: {\n                  house: house,\n                  area: area,\n                  district: district,\n                  state: state,\n                  pin: pin,\n                  phone: phone\n                },\n                aadhar: aadhar\n              };\n              if (_this.state.middle === '') delete data.name.middle;\n              headers = {\n                'Content-Type': 'application/json'\n              };\n              console.log(data);\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(post('/user/register', headers, data));\n\n            case 8:\n              _ref = _context.sent;\n              text = _ref.text;\n              status = _ref.status;\n              console.log(\"Status\", status);\n              console.log(text);\n\n              if (status === 200) {\n                console.log('Successfully posted...');\n                Router.pushRoute('/user/success');\n              }\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(RegisterForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(Grid, {\n        verticalAlign: \"middle\"\n      }, __jsx(Grid.Column, {\n        width: 2\n      }), __jsx(Grid.Column, {\n        width: 12\n      }, __jsx(Header, {\n        as: \"h2\",\n        color: \"blue\",\n        textAlign: \"center\",\n        style: {\n          margin: '35px 35px'\n        }\n      }, this.state.res), __jsx(Form, {\n        onSubmit: this.onSubmit\n      }, __jsx(Form.Group, {\n        widths: \"equal\"\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"First Name\"), __jsx(Input, {\n        type: \"text\",\n        placeholder: \"First Name\",\n        value: this.state.first,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            first: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Middle Name\"), __jsx(Input, {\n        type: \"text\",\n        placeholder: \"Middle Name\",\n        value: this.state.middle,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            middle: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Last Name\"), __jsx(Input, {\n        placeholder: \"Last Name\",\n        type: \"text\",\n        value: this.state.last,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            last: event.target.value\n          });\n        }\n      }))), __jsx(Form.Group, null, __jsx(Form.Field, {\n        width: 8\n      }, __jsx(\"label\", null, \"House\"), __jsx(Input, {\n        placeholder: \"House\",\n        type: \"text\",\n        value: this.state.house,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            house: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, {\n        control: Select,\n        width: 8,\n        label: \"Area\",\n        options: this.props.blockList,\n        placeholder: \"Area\",\n        value: this.state.area,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            area: event.target.value\n          });\n        }\n      })), __jsx(Form.Group, null, __jsx(Form.Field, {\n        width: 6\n      }, __jsx(\"label\", null, \"District\"), __jsx(Input, {\n        placeholder: \"District\",\n        type: \"text\",\n        value: this.state.district,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            district: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, {\n        width: 6\n      }, __jsx(\"label\", null, \"State\"), __jsx(Input, {\n        placeholder: \"State\",\n        type: \"text\",\n        value: this.state.state,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            state: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, {\n        width: 4\n      }, __jsx(\"label\", null, \"Pin\"), __jsx(Input, {\n        placeholder: \"Pin\",\n        value: this.state.pin,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            pin: event.target.value\n          });\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\"\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Email\"), __jsx(Input, {\n        placeholder: \"Email\",\n        type: \"email\",\n        value: this.state.email,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            email: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Aadhar\"), __jsx(Input, {\n        placeholder: \"Aadhar\",\n        value: this.state.aadhar,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            aadhar: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Phone\"), __jsx(Input, {\n        placeholder: \"Phone\",\n        value: this.state.phone,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            phone: event.target.value\n          });\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\"\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Password\"), __jsx(Input, {\n        placeholder: \"Password\",\n        type: \"password\",\n        value: this.state.password,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            password: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Confirm Password\"), __jsx(Input, {\n        placeholder: \"Confirm Password\",\n        type: \"password\",\n        value: this.state.confirm_pass,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            confirm_pass: event.target.value\n          });\n        }\n      }))), __jsx(Button, {\n        primary: true\n      }, \"Submit\"))), __jsx(Grid.Column, {\n        width: 2\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      var blockList = getBlocksList();\n      console.log(blockList);\n      return {\n        blockList: blockList\n      };\n    }\n  }]);\n\n  return RegisterForm;\n}(Component);\n\nexport default RegisterForm;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/pages/user/register.js"],"names":["React","Component","Button","Form","Grid","Header","Image","Message","Segment","Input","GridColumn","Layout","Link","Router","Select","post","getBlocksList","RegisterForm","pin","house","area","district","state","phone","first","middle","last","password","confirm_pass","email","aadhar","event","preventDefault","data","name","address","headers","console","log","text","status","pushRoute","margin","res","onSubmit","setState","target","value","props","blockList"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Input, GridColumn } from 'semantic-ui-react';\nimport Layout from '../../components/layout.js'\nimport { Link, Router, Select } from '../../routes';\nimport post from '../../localmodules/express_post'; \nimport { getBlocksList }  from '../../localmodules/location/location_dropdown';\n\n\nclass RegisterForm extends Component {\n    state = {\n            pin :'',\n            house:'',\n            area:'',\n            district:'',\n            state:'',\n            phone:'',\n\n            first : '',\n            middle : '',\n            last : '',\n\n\n        password : '',\n        confirm_pass:'',\n        email : '',\n        aadhar : '',\n    };\n\n    static getInitialProps() {\n        const blockList = getBlocksList();\n        console.log(blockList);\n        return { blockList };\n    }\n\n    onSubmit = async (event) => {\n        event.preventDefault();\n        const {password, confirm_pass, email, pin, house, area, district, state, phone, first, middle, last, aadhar} = this.state;\n\n        const data = {\n            name : { first, middle, last }, \n            password, \n            confirm_pass, \n            email, \n            address : { house, area, district, state, pin, phone }, \n            aadhar\n        };\n\n        if(this.state.middle === '')\n            delete data.name.middle;\n        const headers = { 'Content-Type':'application/json' };\n        console.log(data);\n        const { text, status } = await post('/user/register', headers, data);\n        console.log(\"Status\", status);\n        console.log(text);\n        if(status === 200){\n            console.log('Successfully posted...');\n            Router.pushRoute('/user/success');\n        }\n    }\n\n\n    render() {\n        return (\n            <Layout>\n                <Grid verticalAlign='middle' >\n                    <Grid.Column width={2}></Grid.Column>\n                    <Grid.Column width={12}>\n                        <Header as='h2' color='blue' textAlign='center' style={{margin : '35px 35px'}}>\n                            {this.state.res}\n                        </Header>\n                        <Form onSubmit={this.onSubmit}>\n                            <Form.Group widths='equal'>\n                                <Form.Field>\n                                    <label>First Name</label>\n                                    <Input\n                                        type='text'\n                                        placeholder = 'First Name'\n                                        value={this.state.first}\n                                        onChange={event => this.setState({ first : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Middle Name</label>\n                                    <Input\n                                        type='text'\n                                        placeholder = 'Middle Name'\n                                        value={this.state.middle}\n                                        onChange={event => this.setState({middle: event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Last Name</label>\n                                    <Input\n                                        placeholder = 'Last Name'\n                                        type='text'\n                                        value={this.state.last}\n                                        onChange={event => this.setState({last: event.target.value })}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Field width={8}>\n                                    <label>House</label>\n                                    <Input\n                                        placeholder = 'House'\n                                        type='text'\n                                        value={this.state.house}\n                                        onChange={event => this.setState({house : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field\n                                    control={Select}\n                                    width={8}\n                                    label='Area'\n                                    options={this.props.blockList}\n                                    placeholder='Area'\n                                    value={this.state.area}\n                                    onChange={event => this.setState({ area : event.target.value })}\n                                    />\n                                \n                            </Form.Group>\n\n                            <Form.Group>\n                                <Form.Field width={6}>\n                                    <label>District</label>\n                                    <Input\n                                        placeholder = 'District'\n                                        type='text'\n                                        value={this.state.district}\n                                        onChange={event => this.setState({district : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field width={6}>\n                                    <label>State</label>\n                                    <Input\n                                        placeholder = 'State'\n                                        type='text'\n                                        value={this.state.state}\n                                        onChange={event => this.setState({state : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field width={4}>\n                                    <label>Pin</label>\n                                    <Input\n                                        placeholder = 'Pin'\n                                        value={this.state.pin}\n                                        onChange={event => this.setState({ pin : event.target.value })}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n\n                            {/* <Form.Group>\n                                <Form.Field width={8}>\n                                    <label>House</label>\n                                    <Input\n                                        placeholder = 'House'\n                                        value={this.state.address.house}\n                                        onChange={event => this.setState({ address : { house : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                <Form.Field width={8}>\n                                    <label>Area</label>\n                                    <Input\n                                        placeholder = 'Area'\n                                        value={this.state.address.area}\n                                        onChange={event => this.setState({ address : { area : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                \n                            </Form.Group> */}\n\n                            <Form.Group widths='equal'>\n                                <Form.Field >\n                                    <label>Email</label>\n                                    <Input\n                                        placeholder = 'Email'\n                                        type = 'email'\n                                        value={this.state.email}\n                                        onChange={event => this.setState({ email : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Aadhar</label>\n                                    <Input\n                                        placeholder = 'Aadhar'\n                                        value={this.state.aadhar}\n                                        onChange={event => this.setState({ aadhar : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Phone</label>\n                                    <Input\n                                        placeholder = 'Phone'\n                                        value={this.state.phone}\n                                        onChange={event => this.setState({phone : event.target.value })}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n                            <Form.Group widths='equal'>\n                                <Form.Field >\n                                    <label>Password</label>\n                                    <Input\n                                        placeholder = 'Password'\n                                        type = 'password'\n                                        value={this.state.password}\n                                        onChange={event => this.setState({ password : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Confirm Password</label>\n                                    <Input\n                                        placeholder = 'Confirm Password'\n                                        type = 'password'\n                                        value={this.state.confirm_pass}\n                                        onChange={event => this.setState({ confirm_pass : event.target.value })}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n                            <Button primary>Submit</Button>\n                            \n                        </Form>\n                    </Grid.Column>\n                    <Grid.Column width={2}></Grid.Column>\n                </Grid>\n            </Layout>\n        );\n    }\n}\n\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}