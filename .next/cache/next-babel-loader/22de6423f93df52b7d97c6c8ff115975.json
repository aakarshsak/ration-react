{"ast":null,"code":"var Web3 = require('web3');\n\nvar func = function func() {\n  var web3;\n\n  if (true && typeof window.web3 !== 'undefined') {\n    // We are in the browser and metamask is running.\n    console.log(' We are in the browser and metamask is running.');\n    web3 = new Web3(ethereum);\n    ethereum.enable().then(function () {\n      return console.log('Enabled Successfully...');\n    });\n  } else {\n    // We are on the server *OR* the user is not running metamask\n    console.log('We are on the server *OR* the user is not running metamask');\n    var provider = new Web3.providers.HttpProvider('https://rinkeby.infura.io/v3/42d235c7d6304509a63bec8b043c9bc2');\n    web3 = new Web3(provider);\n  }\n\n  return web3;\n};\n\nmodule.exports = func();","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/ethereum/web3.js"],"names":["Web3","require","func","web3","window","console","log","ethereum","enable","then","provider","providers","HttpProvider","module","exports"],"mappings":"AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,MAAIC,IAAJ;;AACA,MAAI,QAAiC,OAAOC,MAAM,CAACD,IAAd,KAAuB,WAA5D,EAAyE;AACvE;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ;AACAH,IAAAA,IAAI,GAAG,IAAIH,IAAJ,CAASO,QAAT,CAAP;AACAA,IAAAA,QAAQ,CAACC,MAAT,GACCC,IADD,CACM;AAAA,aAAMJ,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAN;AAAA,KADN;AAGD,GAPD,MAOO;AACL;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,4DAAZ;AACA,QAAMI,QAAQ,GAAG,IAAIV,IAAI,CAACW,SAAL,CAAeC,YAAnB,CACf,+DADe,CAAjB;AAGAT,IAAAA,IAAI,GAAG,IAAIH,IAAJ,CAASU,QAAT,CAAP;AACD;;AACD,SAAOP,IAAP;AACD,CAlBD;;AAqBAU,MAAM,CAACC,OAAP,GAAiBZ,IAAI,EAArB","sourcesContent":["const Web3 = require('web3');\n\nconst func = () => {\n  let web3;\n  if (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n    // We are in the browser and metamask is running.\n    console.log(' We are in the browser and metamask is running.');\n    web3 = new Web3(ethereum);\n    ethereum.enable()\n    .then(() => console.log('Enabled Successfully...'))\n    \n  } else {\n    // We are on the server *OR* the user is not running metamask\n    console.log('We are on the server *OR* the user is not running metamask')\n    const provider = new Web3.providers.HttpProvider(\n      'https://rinkeby.infura.io/v3/42d235c7d6304509a63bec8b043c9bc2'\n    );\n    web3 = new Web3(provider);\n  }\n  return web3;\n}\n\n\nmodule.exports = func();"]},"metadata":{},"sourceType":"script"}