{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Input, Button } from 'semantic-ui-react';\nimport saveToEthereum from '../../localmodules/data_initialization';\nimport factory from '../../ethereum/factory';\nimport web3 from '../../ethereum/web3';\nimport Shop from '../../ethereum/shop';\nimport Layout from '../../components/layout';\nexport default class UpdateBlockChain extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      managerName: '',\n      fpdName: '',\n      shopName: '',\n      rice: '',\n      wheat: '',\n      arhad: '',\n      kerosene: '',\n      addr: '',\n      blockName: 'CHIKNAYAKANHALLI'\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      const obj = this.state; //const accounts = await web3.eth.getAccounts();\n\n      console.log(accounts, obj);\n      obj.addr = obj.addr + \",Chiknayakanhalli, Tumkur, Karnataka - 572214\";\n      console.log(obj.addr); //saveToEthereum(obj);\n    });\n\n    _defineProperty(this, \"onClick\", async event => {\n      event.preventDefault();\n      const accounts = await web3.eth.getAccounts();\n      const addresses = await factory.methods.getDeployedShops().call();\n      console.log(addresses[addresses.length - 1]);\n      const s = Shop(addresses[addresses.length - 1]);\n      await s.methods.createRequest(\"CHIKNAYAKANHALLI\").send({\n        from: accounts[0]\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Form, {\n      onSubmit: this.onSubmit\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Manager Name\"), __jsx(Input, {\n      placeholder: \"Manager Name\",\n      type: \"text\",\n      value: this.state.managerName,\n      onChange: event => this.setState({\n        managerName: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Shop Name\"), __jsx(Input, {\n      placeholder: \"Shop Name\",\n      type: \"text\",\n      value: this.state.shopName,\n      onChange: event => this.setState({\n        shopName: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Address\"), __jsx(Input, {\n      placeholder: \"Address\",\n      type: \"text\",\n      value: this.state.addr,\n      onChange: event => this.setState({\n        addr: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"FPD Name\"), __jsx(Input, {\n      placeholder: \"FPD Name\",\n      type: \"text\",\n      value: this.state.fpdName,\n      onChange: event => this.setState({\n        fpdName: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Rice\"), __jsx(Input, {\n      placeholder: \"Rice\",\n      type: \"number\",\n      value: this.state.rice,\n      onChange: event => this.setState({\n        rice: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Wheat\"), __jsx(Input, {\n      placeholder: \"Wheat\",\n      type: \"number\",\n      value: this.state.wheat,\n      onChange: event => this.setState({\n        wheat: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Arhad\"), __jsx(Input, {\n      placeholder: \"Arhad\",\n      type: \"number\",\n      value: this.state.arhad,\n      onChange: event => this.setState({\n        arhad: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Kerosene\"), __jsx(Input, {\n      placeholder: \"Kerosene\",\n      type: \"number\",\n      value: this.state.kerosene,\n      onChange: event => this.setState({\n        kerosene: event.target.value\n      })\n    })), __jsx(Button, null, \"Submit\")), __jsx(Button, {\n      onClick: this.onClick\n    }, \"CLick\"));\n  }\n\n}","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/pages/admin/update.js"],"names":["React","Component","Form","Input","Button","saveToEthereum","factory","web3","Shop","Layout","UpdateBlockChain","managerName","fpdName","shopName","rice","wheat","arhad","kerosene","addr","blockName","event","preventDefault","obj","state","console","log","accounts","eth","getAccounts","addresses","methods","getDeployedShops","call","length","s","createRequest","send","from","render","onSubmit","setState","target","value","onClick"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Input, Button } from 'semantic-ui-react';\nimport saveToEthereum from '../../localmodules/data_initialization';\nimport factory from '../../ethereum/factory';\nimport web3 from '../../ethereum/web3';\nimport Shop from '../../ethereum/shop';\nimport Layout from '../../components/layout';\n\n\nexport default class UpdateBlockChain extends Component {\n\n    state = {\n        managerName : '',\n        fpdName : '',\n        shopName : '',\n        rice : '',\n        wheat : '',\n        arhad : '',\n        kerosene : '',\n        addr : '',\n        blockName : 'CHIKNAYAKANHALLI'\n    }\n\n    onSubmit = async (event) => {\n        event.preventDefault();\n\n        const obj = this.state;\n        //const accounts = await web3.eth.getAccounts();\n        console.log(accounts, obj);\n        obj.addr = obj.addr + \",Chiknayakanhalli, Tumkur, Karnataka - 572214\";\n        console.log(obj.addr);\n        //saveToEthereum(obj);\n    }\n\n    onClick = async (event) => {\n        event.preventDefault();\n\n\n        const accounts = await web3.eth.getAccounts();\n        const addresses = await factory.methods.getDeployedShops().call();\n        console.log(addresses[addresses.length-1]);\n\n        const s = Shop(addresses[addresses.length-1]);\n\n        await s.methods.createRequest(\"CHIKNAYAKANHALLI\")\n        .send({\n          from: accounts[0],\n        });\n    }\n\n\n    render() {\n        return (\n        \n            <Layout>\n                <Form onSubmit={this.onSubmit}>\n                    <Form.Field>\n                        <label>Manager Name</label>\n                        <Input\n                            placeholder='Manager Name'\n                            type='text'\n                            value={this.state.managerName}\n                            onChange={ event => this.setState({ managerName : event.target.value }) }\n                            />\n                    </Form.Field>\n                    <Form.Field>\n                        <label>Shop Name</label>\n                        <Input\n                            placeholder='Shop Name'\n                            type='text'\n                            value={this.state.shopName}\n                            onChange={ event => this.setState({ shopName : event.target.value }) }\n                            />\n                    </Form.Field>\n                    <Form.Field>\n                        <label>Address</label>\n                        <Input\n                            placeholder='Address'\n                            type='text'\n                            value={this.state.addr}\n                            onChange={ event => this.setState({ addr : event.target.value }) }\n                            />\n                    </Form.Field>\n                    {/* <Form.Field>\n                        <label>Block Name</label>\n                        <Input\n                            placeholder='Block Name'\n                            type='text'\n                            value={this.state.blockName}\n                            onChange={ event => this.setState({ blockName : event.target.value }) }\n                            />\n                    </Form.Field> */}\n                    <Form.Field>\n                        <label>FPD Name</label>\n                        <Input\n                            placeholder='FPD Name'\n                            type='text'\n                            value={this.state.fpdName}\n                            onChange={ event => this.setState({ fpdName : event.target.value }) }\n                            />\n                    </Form.Field>\n                    <Form.Field>\n                        <label>Rice</label>\n                        <Input\n                            placeholder='Rice'\n                            type='number'\n                            value={this.state.rice}\n                            onChange={ event => this.setState({ rice : event.target.value }) }\n                            />\n                    </Form.Field>\n                    <Form.Field>\n                        <label>Wheat</label>\n                        <Input\n                            placeholder='Wheat'\n                            type='number'\n                            value={this.state.wheat}\n                            onChange={ event => this.setState({ wheat : event.target.value }) }\n                            />\n                    </Form.Field>\n                    <Form.Field>\n                        <label>Arhad</label>\n                        <Input\n                            placeholder='Arhad'\n                            type='number'\n                            value={this.state.arhad}\n                            onChange={ event => this.setState({ arhad : event.target.value }) }\n                            />\n                    </Form.Field>\n                    <Form.Field>\n                        <label>Kerosene</label>\n                        <Input\n                            placeholder='Kerosene'\n                            type='number'\n                            value={this.state.kerosene}\n                            onChange={ event => this.setState({ kerosene : event.target.value }) }\n                            />\n                    </Form.Field>\n                    <Button>Submit</Button>\n                </Form>\n\n                <Button onClick={this.onClick}>CLick</Button>\n            </Layout>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}