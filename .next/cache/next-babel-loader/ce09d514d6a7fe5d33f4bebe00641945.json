{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Card, Button } from 'semantic-ui-react';\nimport factory from '../ethereum/factory';\nimport Layout from '../components/layout';\nimport { Link } from '../routes';\nimport fetch from 'cross-fetch'; // import jsonArray from '../localmodules/data_initialization';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onClick\", async event => {\n      event.preventDefault();\n      const options = {\n        method: 'get',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-auth-token': this.props.headerToken\n        }\n      };\n      const res = await fetch('http://localhost:7800/user/login/me', options);\n      const data = await res.json();\n      const status = await res.status;\n      console.log(data);\n      console.log(status);\n    });\n  }\n\n  static async getInitialProps(props) {\n    const shops = await factory.methods.getDeployedShops().call();\n    const headerToken = props.query.headerToken;\n    let loggedIn;\n\n    if (!headerToken) {\n      loggedIn = false;\n      console.log(!headerToken);\n      console.log(loggedIn);\n    }\n\n    return {\n      shops,\n      headerToken,\n      loggedIn\n    };\n  }\n\n  renderShops() {\n    const items = this.props.shops.map(address => {\n      return {\n        header: address,\n        description: __jsx(Link, {\n          route: `shops/${address}`\n        }, __jsx(\"a\", null, \"View Shops\")),\n        fluid: true\n      };\n    });\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"div\", null, this.renderShops(), __jsx(Button, {\n      onClick: this.onClick,\n      content: \"Create Shops\",\n      icon: \"add circle\",\n      primary: true\n    })), __jsx(\"div\", null, this.props.headerToken));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/pages/index.js"],"names":["React","Component","Card","Button","factory","Layout","Link","fetch","App","event","preventDefault","options","method","headers","props","headerToken","res","data","json","status","console","log","getInitialProps","shops","methods","getDeployedShops","call","query","loggedIn","renderShops","items","map","address","header","description","fluid","render","onClick"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AAEA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAAA;AAAA;;AAAA,qCA0Bd,MAAOQ,KAAP,IAAiB;AACvBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,OAAO,GAAG;AACZC,QAAAA,MAAM,EAAG,KADG;AAEZC,QAAAA,OAAO,EAAE;AACL,0BAAe,kBADV;AAEL,0BAAiB,KAAKC,KAAL,CAAWC;AAFvB;AAFG,OAAhB;AAUA,YAAMC,GAAG,GAAG,MAAMT,KAAK,CAAC,qCAAD,EAAwCI,OAAxC,CAAvB;AACA,YAAMM,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,YAAMC,MAAM,GAAG,MAAMH,GAAG,CAACG,MAAzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,KA3CuB;AAAA;;AAExB,eAAaG,eAAb,CAA6BR,KAA7B,EAAoC;AAChC,UAAMS,KAAK,GAAG,MAAMnB,OAAO,CAACoB,OAAR,CAAgBC,gBAAhB,GAAmCC,IAAnC,EAApB;AACA,UAAMX,WAAW,GAAGD,KAAK,CAACa,KAAN,CAAYZ,WAAhC;AACA,QAAIa,QAAJ;;AACA,QAAG,CAACb,WAAJ,EAAgB;AACZa,MAAAA,QAAQ,GAAG,KAAX;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,CAACN,WAAb;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACH;;AACD,WAAO;AAAEL,MAAAA,KAAF;AAASR,MAAAA,WAAT;AAAsBa,MAAAA;AAAtB,KAAP;AACH;;AAEDC,EAAAA,WAAW,GAAG;AACV,UAAMC,KAAK,GAAG,KAAKhB,KAAL,CAAWS,KAAX,CAAiBQ,GAAjB,CAAqBC,OAAO,IAAI;AAC1C,aAAM;AACFC,QAAAA,MAAM,EAAGD,OADP;AAEFE,QAAAA,WAAW,EAAG,MAAC,IAAD;AAAM,UAAA,KAAK,EAAG,SAAQF,OAAQ;AAA9B,WAAiC,8BAAjC,CAFZ;AAGFG,QAAAA,KAAK,EAAG;AAHN,OAAN;AAKH,KANa,CAAd;AAQA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEL;AAAnB,MAAP;AACH;;AAqBDM,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,MAAD,QACI,mBACK,KAAKP,WAAL,EADL,EAEI,MAAC,MAAD;AACI,MAAA,OAAO,EAAE,KAAKQ,OADlB;AAEI,MAAA,OAAO,EAAC,cAFZ;AAGI,MAAA,IAAI,EAAC,YAHT;AAII,MAAA,OAAO;AAJX,MAFJ,CADJ,EAUI,mBAAM,KAAKvB,KAAL,CAAWC,WAAjB,CAVJ,CADJ;AAeH;;AA7DuB;;AAiE5B,eAAeP,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport { Card, Button } from 'semantic-ui-react';\nimport factory from '../ethereum/factory';\nimport Layout from '../components/layout';\nimport { Link } from '../routes';\nimport fetch from 'cross-fetch';\n// import jsonArray from '../localmodules/data_initialization';\n\nclass App extends Component {\n    \n    static async getInitialProps(props) {\n        const shops = await factory.methods.getDeployedShops().call();\n        const headerToken = props.query.headerToken;\n        let loggedIn ;\n        if(!headerToken){\n            loggedIn = false;\n            console.log(!headerToken);\n            console.log(loggedIn);\n        }\n        return { shops, headerToken, loggedIn };\n    }\n    \n    renderShops() {\n        const items = this.props.shops.map(address => {\n            return{\n                header : address,\n                description : <Link route={`shops/${address}`}><a>View Shops</a></Link>,\n                fluid : true\n            };\n        });\n\n        return <Card.Group items={items}/>;\n    }\n\n    onClick = async (event) => {\n        event.preventDefault();\n        const options = {\n            method : 'get',\n            headers: { \n                'Content-Type':'application/json',\n                'x-auth-token' : this.props.headerToken\n            },\n        };\n\n\n\n        const res = await fetch('http://localhost:7800/user/login/me', options);\n        const data = await res.json();\n        const status = await res.status;\n        console.log(data);\n        console.log(status);\n    }\n\n    render() {\n        return (\n            <Layout>\n                <div>\n                    {this.renderShops()}\n                    <Button\n                        onClick={this.onClick}\n                        content=\"Create Shops\"\n                        icon=\"add circle\"\n                        primary\n                    />\n                </div>\n                <div>{this.props.headerToken}</div>\n            </Layout>\n        );\n\n    }\n\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}