{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Form, Input, Button } from 'semantic-ui-react';\nimport saveToEthereum from '../../localmodules/data_initialization';\nimport factory from '../../ethereum/factory';\n\nvar UpdateBlockChain = /*#__PURE__*/function (_Component) {\n  _inherits(UpdateBlockChain, _Component);\n\n  function UpdateBlockChain() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UpdateBlockChain);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UpdateBlockChain)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      managerName: '',\n      fpdName: '',\n      shopName: '',\n      rice: '',\n      wheat: '',\n      arhad: '',\n      addr: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee(event) {\n      var obj, accounts;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              obj = _this.state;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 4:\n              accounts = _context.sent;\n              console.log(accounts, obj);\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(factory.methods.createShop(obj.managerName, obj.rice, obj.wheat, obj.arhad, obj.fpdName, obj.shopName, obj.addr).send({\n                from: accounts[0]\n              }));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(UpdateBlockChain, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", null, __jsx(Form, {\n        onSubmit: this.onSubmit\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Manager Name\"), __jsx(Input, {\n        placeholder: \"Manager Name\",\n        type: \"text\",\n        value: this.state.managerName,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            managerName: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Shop Name\"), __jsx(Input, {\n        placeholder: \"Shop Name\",\n        type: \"text\",\n        value: this.state.shopName,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            shopName: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Address\"), __jsx(Input, {\n        placeholder: \"Address\",\n        type: \"text\",\n        value: this.state.addr,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            addr: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"FPD Name\"), __jsx(Input, {\n        placeholder: \"FPD Name\",\n        type: \"text\",\n        value: this.state.fpdName,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            fpdName: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Rice\"), __jsx(Input, {\n        placeholder: \"Rice\",\n        type: \"number\",\n        value: this.state.rice,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            rice: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Wheat\"), __jsx(Input, {\n        placeholder: \"Wheat\",\n        type: \"number\",\n        value: this.state.wheat,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            wheat: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Wheat\"), __jsx(Input, {\n        placeholder: \"Wheat\",\n        type: \"number\",\n        value: this.state.arhad,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            arhad: event.target.value\n          });\n        }\n      })), __jsx(Button, null, \"Submit\")));\n    }\n  }]);\n\n  return UpdateBlockChain;\n}(Component);\n\nexport { UpdateBlockChain as default };","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/pages/admin/update.js"],"names":["React","Component","Form","Input","Button","saveToEthereum","factory","UpdateBlockChain","managerName","fpdName","shopName","rice","wheat","arhad","addr","event","preventDefault","obj","state","web3","eth","getAccounts","accounts","console","log","methods","createShop","send","from","onSubmit","setState","target","value"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,mBAApC;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,OAAP,MAAoB,wBAApB;;IAGqBC,gB;;;;;;;;;;;;;;;;4DAET;AACJC,MAAAA,WAAW,EAAG,EADV;AAEJC,MAAAA,OAAO,EAAG,EAFN;AAGJC,MAAAA,QAAQ,EAAG,EAHP;AAIJC,MAAAA,IAAI,EAAG,EAJH;AAKJC,MAAAA,KAAK,EAAG,EALJ;AAMJC,MAAAA,KAAK,EAAG,EANJ;AAOJC,MAAAA,IAAI,EAAG;AAPH,K;;+DAUG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACPA,cAAAA,KAAK,CAACC,cAAN;AAEMC,cAAAA,GAHC,GAGK,MAAKC,KAHV;AAAA;AAAA,+CAIgBC,IAAI,CAACC,GAAL,CAASC,WAAT,EAJhB;;AAAA;AAIDC,cAAAA,QAJC;AAKPC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAAsBL,GAAtB;AALO;AAAA,+CAMDX,OAAO,CAACmB,OAAR,CACDC,UADC,CACUT,GAAG,CAACT,WADd,EAC2BS,GAAG,CAACN,IAD/B,EACqCM,GAAG,CAACL,KADzC,EACgDK,GAAG,CAACJ,KADpD,EAC2DI,GAAG,CAACR,OAD/D,EACwEQ,GAAG,CAACP,QAD5E,EACsFO,GAAG,CAACH,IAD1F,EAEDa,IAFC,CAEI;AACFC,gBAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD;AADZ,eAFJ,CANC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;6BAcF;AAAA;;AACL,aACI,mBACI,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKO;AAArB,SACI,MAAC,IAAD,CAAM,KAAN,QACI,oCADJ,EAEI,MAAC,KAAD;AACI,QAAA,WAAW,EAAC,cADhB;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWV,WAHtB;AAII,QAAA,QAAQ,EAAG,kBAAAO,KAAK;AAAA,iBAAI,MAAI,CAACe,QAAL,CAAc;AAAEtB,YAAAA,WAAW,EAAGO,KAAK,CAACgB,MAAN,CAAaC;AAA7B,WAAd,CAAJ;AAAA;AAJpB,QAFJ,CADJ,EAUI,MAAC,IAAD,CAAM,KAAN,QACI,iCADJ,EAEI,MAAC,KAAD;AACI,QAAA,WAAW,EAAC,WADhB;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWR,QAHtB;AAII,QAAA,QAAQ,EAAG,kBAAAK,KAAK;AAAA,iBAAI,MAAI,CAACe,QAAL,CAAc;AAAEpB,YAAAA,QAAQ,EAAGK,KAAK,CAACgB,MAAN,CAAaC;AAA1B,WAAd,CAAJ;AAAA;AAJpB,QAFJ,CAVJ,EAmBI,MAAC,IAAD,CAAM,KAAN,QACI,+BADJ,EAEI,MAAC,KAAD;AACI,QAAA,WAAW,EAAC,SADhB;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWJ,IAHtB;AAII,QAAA,QAAQ,EAAG,kBAAAC,KAAK;AAAA,iBAAI,MAAI,CAACe,QAAL,CAAc;AAAEhB,YAAAA,IAAI,EAAGC,KAAK,CAACgB,MAAN,CAAaC;AAAtB,WAAd,CAAJ;AAAA;AAJpB,QAFJ,CAnBJ,EA4BI,MAAC,IAAD,CAAM,KAAN,QACI,gCADJ,EAEI,MAAC,KAAD;AACI,QAAA,WAAW,EAAC,UADhB;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWT,OAHtB;AAII,QAAA,QAAQ,EAAG,kBAAAM,KAAK;AAAA,iBAAI,MAAI,CAACe,QAAL,CAAc;AAAErB,YAAAA,OAAO,EAAGM,KAAK,CAACgB,MAAN,CAAaC;AAAzB,WAAd,CAAJ;AAAA;AAJpB,QAFJ,CA5BJ,EAqCI,MAAC,IAAD,CAAM,KAAN,QACI,4BADJ,EAEI,MAAC,KAAD;AACI,QAAA,WAAW,EAAC,MADhB;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWP,IAHtB;AAII,QAAA,QAAQ,EAAG,kBAAAI,KAAK;AAAA,iBAAI,MAAI,CAACe,QAAL,CAAc;AAAEnB,YAAAA,IAAI,EAAGI,KAAK,CAACgB,MAAN,CAAaC;AAAtB,WAAd,CAAJ;AAAA;AAJpB,QAFJ,CArCJ,EA8CI,MAAC,IAAD,CAAM,KAAN,QACI,6BADJ,EAEI,MAAC,KAAD;AACI,QAAA,WAAW,EAAC,OADhB;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWN,KAHtB;AAII,QAAA,QAAQ,EAAG,kBAAAG,KAAK;AAAA,iBAAI,MAAI,CAACe,QAAL,CAAc;AAAElB,YAAAA,KAAK,EAAGG,KAAK,CAACgB,MAAN,CAAaC;AAAvB,WAAd,CAAJ;AAAA;AAJpB,QAFJ,CA9CJ,EAuDI,MAAC,IAAD,CAAM,KAAN,QACI,6BADJ,EAEI,MAAC,KAAD;AACI,QAAA,WAAW,EAAC,OADhB;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWL,KAHtB;AAII,QAAA,QAAQ,EAAG,kBAAAE,KAAK;AAAA,iBAAI,MAAI,CAACe,QAAL,CAAc;AAAEjB,YAAAA,KAAK,EAAGE,KAAK,CAACgB,MAAN,CAAaC;AAAvB,WAAd,CAAJ;AAAA;AAJpB,QAFJ,CAvDJ,EAgEI,MAAC,MAAD,iBAhEJ,CADJ,CADJ;AAsEH;;;;EAjGyC/B,S;;SAAzBM,gB","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Input, Button } from 'semantic-ui-react';\nimport saveToEthereum from '../../localmodules/data_initialization';\nimport factory from '../../ethereum/factory';\n\n\nexport default class UpdateBlockChain extends Component {\n\n    state = {\n        managerName : '',\n        fpdName : '',\n        shopName : '',\n        rice : '',\n        wheat : '',\n        arhad : '',\n        addr : ''\n    }\n\n    onSubmit = async (event) => {\n        event.preventDefault();\n\n        const obj = this.state;\n        const accounts = await web3.eth.getAccounts();\n        console.log(accounts, obj);\n        await factory.methods\n            .createShop(obj.managerName, obj.rice, obj.wheat, obj.arhad, obj.fpdName, obj.shopName, obj.addr)\n            .send({\n                from: accounts[0],\n        });\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Form onSubmit={this.onSubmit}>\n                    <Form.Field>\n                        <label>Manager Name</label>\n                        <Input\n                            placeholder='Manager Name'\n                            type='text'\n                            value={this.state.managerName}\n                            onChange={ event => this.setState({ managerName : event.target.value }) }\n                            />\n                    </Form.Field>\n                    <Form.Field>\n                        <label>Shop Name</label>\n                        <Input\n                            placeholder='Shop Name'\n                            type='text'\n                            value={this.state.shopName}\n                            onChange={ event => this.setState({ shopName : event.target.value }) }\n                            />\n                    </Form.Field>\n                    <Form.Field>\n                        <label>Address</label>\n                        <Input\n                            placeholder='Address'\n                            type='text'\n                            value={this.state.addr}\n                            onChange={ event => this.setState({ addr : event.target.value }) }\n                            />\n                    </Form.Field>\n                    <Form.Field>\n                        <label>FPD Name</label>\n                        <Input\n                            placeholder='FPD Name'\n                            type='text'\n                            value={this.state.fpdName}\n                            onChange={ event => this.setState({ fpdName : event.target.value }) }\n                            />\n                    </Form.Field>\n                    <Form.Field>\n                        <label>Rice</label>\n                        <Input\n                            placeholder='Rice'\n                            type='number'\n                            value={this.state.rice}\n                            onChange={ event => this.setState({ rice : event.target.value }) }\n                            />\n                    </Form.Field>\n                    <Form.Field>\n                        <label>Wheat</label>\n                        <Input\n                            placeholder='Wheat'\n                            type='number'\n                            value={this.state.wheat}\n                            onChange={ event => this.setState({ wheat : event.target.value }) }\n                            />\n                    </Form.Field>\n                    <Form.Field>\n                        <label>Wheat</label>\n                        <Input\n                            placeholder='Wheat'\n                            type='number'\n                            value={this.state.arhad}\n                            onChange={ event => this.setState({ arhad : event.target.value }) }\n                            />\n                    </Form.Field>\n                    <Button>Submit</Button>\n                </Form>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}