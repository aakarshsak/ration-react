{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../../components/layout';\nimport Shop from '../../ethereum/shop';\nimport { Card, Table, Grid, Button, Input, Message, Form, Comment, Header } from 'semantic-ui-react';\nimport { Link, Router } from '../../routes';\nimport validate from '../../localmodules/token_validate';\nimport get from '../../localmodules/express_get';\nimport web3 from '../../ethereum/web3';\nimport CustomError from '../../localmodules/custom_error';\nimport post from '../../localmodules/express_post';\nimport postWithData from '../../localmodules/express_post_data';\n\nvar ShopShow = /*#__PURE__*/function (_Component) {\n  _inherits(ShopShow, _Component);\n\n  function ShopShow() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShopShow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShopShow)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      rice: '',\n      wheat: '',\n      arhad: '',\n      kerosene: '',\n      tableError: '',\n      status: '',\n      threeDigit: '',\n      complaint: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getRation\", function _callee() {\n      var headers, _ref, data, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              headers = {\n                'Content-Type': 'application/json',\n                'x-auth-token': _this.props.headerToken\n              };\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(get('/user/login/me', headers));\n\n            case 3:\n              _ref = _context.sent;\n              data = _ref.data;\n              status = _ref.status;\n              return _context.abrupt(\"return\", data.ration);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"verifyCurrent\", function () {\n      var qty = _this.state;\n      var msg = '';\n      var count = 0;\n\n      if (qty.rice > 5) {\n        msg = msg + \"Rice\";\n        count++;\n      }\n\n      if (qty.wheat > 5) {\n        msg = msg + \", Wheat\";\n        if (count === 0) msg = 'Wheat';\n        count++;\n      }\n\n      if (qty.arhad > 5) {\n        msg = msg + \", Arhad\";\n        if (count === 0) msg = 'Arhad';\n        count++;\n      }\n\n      if (qty.kerosene > 5) {\n        msg = msg + \", Kerosene\";\n        if (count === 0) msg = 'Kerosene';\n        count++;\n      }\n\n      if (count > 0) {\n        throw new CustomError(\"Quantity of \".concat(msg, \" exceeds the maximum quantity allowed per month.\"));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"verifyPrevious\", function _callee2() {\n      var dateIns, date, threeDigit, ration, data, headers, _ref2, text, status;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dateIns = new Date();\n              date = dateIns.toLocaleDateString() + '(' + dateIns.getHours() + ':' + dateIns.getMinutes() + ')';\n              threeDigit = 'OD20M05' + _this.props.blockName.substring(0, 3) + Math.floor(Math.random() * Math.floor(1000));\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(_this.getRation());\n\n            case 5:\n              ration = _context2.sent;\n              data = {\n                rice: _this.state.rice,\n                wheat: _this.state.wheat,\n                arhad: _this.state.arhad,\n                kerosene: _this.state.kerosene,\n                ration: ration,\n                date: date,\n                orderid: threeDigit,\n                fpdName: _this.props.fpdName\n              };\n\n              _this.setState({\n                threeDigit: threeDigit\n              });\n\n              headers = {\n                'Content-Type': 'application/json'\n              };\n              _context2.next = 11;\n              return _regeneratorRuntime.awrap(post('/record/verify', headers, data));\n\n            case 11:\n              _ref2 = _context2.sent;\n              text = _ref2.text;\n              status = _ref2.status;\n              console.log(status, \"Func\");\n\n              if (!(status === 400)) {\n                _context2.next = 18;\n                break;\n              }\n\n              _this.setState({\n                status: status\n              });\n\n              throw new CustomError(text);\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveToMongo\", function _callee3() {\n      var dateIns, date, threeDigit, ration, data, headers, _ref3, text, status;\n\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              dateIns = new Date();\n              date = dateIns.toLocaleDateString() + '(' + dateIns.getHours() + ':' + dateIns.getMinutes() + ')';\n              threeDigit = _this.state.threeDigit;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(_this.getRation());\n\n            case 5:\n              ration = _context3.sent;\n              data = {\n                rice: _this.state.rice,\n                wheat: _this.state.wheat,\n                arhad: _this.state.arhad,\n                kerosene: _this.state.kerosene,\n                ration: ration,\n                date: date,\n                orderid: threeDigit,\n                fpdName: _this.props.fpdName\n              };\n              headers = {\n                'Content-Type': 'application/json'\n              };\n              _context3.next = 10;\n              return _regeneratorRuntime.awrap(post('/record', headers, data));\n\n            case 10:\n              _ref3 = _context3.sent;\n              text = _ref3.text;\n              status = _ref3.status;\n\n              if (status !== 400) {\n                _this.setState({\n                  tableError: 'Success'\n                });\n              }\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function _callee4() {\n      var dateIns, date, threeDigit, ration, accounts, s, transaction;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n\n              _this.setState({\n                tableError: ''\n              });\n\n              _this.verifyCurrent();\n\n              _context4.next = 5;\n              return _regeneratorRuntime.awrap(_this.verifyPrevious());\n\n            case 5:\n              console.log(_this.state.status);\n\n              if (_this.state.status === 400) {\n                _context4.next = 20;\n                break;\n              }\n\n              dateIns = new Date();\n              date = dateIns.toLocaleDateString() + '(' + dateIns.getHours() + ':' + dateIns.getMinutes() + ')';\n              threeDigit = _this.state.threeDigit;\n              _context4.next = 12;\n              return _regeneratorRuntime.awrap(_this.getRation());\n\n            case 12:\n              ration = _context4.sent;\n              _context4.next = 15;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 15:\n              accounts = _context4.sent;\n              s = Shop(_this.props.address);\n              transaction = _this.state.rice + '-' + _this.state.wheat + '-' + _this.state.arhad + '-' + _this.state.kerosene + '-' + threeDigit; // await s.methods\n              // .purchase(ration, threeDigit, date, this.state.kerosene, this.state.rice, this.state.wheat, this.state.arhad)\n              // .send({\n              //     from : accounts[0],\n              //     value: web3.utils.toWei('72', 'wei')\n              // });\n              //this.saveToMongo();\n\n              console.log(transaction);\n              Router.pushRoute(\"/\".concat(validate(_this.props.headerToken).headerToken, \"/shops/\").concat(transaction, \"/receipt/\").concat(_this.props.address));\n\n            case 20:\n              _context4.next = 25;\n              break;\n\n            case 22:\n              _context4.prev = 22;\n              _context4.t0 = _context4[\"catch\"](0);\n\n              _this.setState({\n                tableError: _context4.t0.message\n              });\n\n            case 25:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 22]]);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"postComplaint\", function _callee5(e) {\n      var dataInp, headers, _ref4, text, status;\n\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              e.preventDefault();\n              dataInp = {\n                fpdName: _this.props.fpdName,\n                name: _this.props.name.first + \" \" + _this.props.name.last,\n                comment: _this.state.complaint\n              };\n              headers = {\n                'Content-Type': 'application/json'\n              };\n              _context5.next = 5;\n              return _regeneratorRuntime.awrap(post('/complaints', headers, dataInp));\n\n            case 5:\n              _ref4 = _context5.sent;\n              text = _ref4.text;\n              status = _ref4.status;\n              console.log(text);\n              dataInp.date = 'Just now';\n\n              _this.props.dataComplaint.push(dataInp);\n\n              _this.setState({\n                complaint: ''\n              });\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderComment\", function () {\n      var comments = _this.props.dataComplaint.map(function (item, index) {\n        return __jsx(Comment, {\n          key: index\n        }, __jsx(Comment.Content, null, __jsx(Comment.Author, {\n          as: \"a\"\n        }, item.name), __jsx(Comment.Metadata, null, __jsx(\"div\", null, item.date)), __jsx(Comment.Text, null, item.comment)));\n      });\n\n      return __jsx(Comment.Group, null, __jsx(Header, {\n        as: \"h3\",\n        dividing: true\n      }, \"Complaints\"), comments, __jsx(Form, {\n        onSubmit: _this.postComplaint\n      }, __jsx(Form.TextArea, {\n        value: _this.state.complaint,\n        onChange: function onChange(e) {\n          return _this.setState({\n            complaint: e.target.value\n          });\n        }\n      }), __jsx(Button, {\n        content: \"Add Complaint\",\n        labelPosition: \"left\",\n        icon: \"edit\",\n        primary: true\n      })));\n    });\n\n    return _this;\n  }\n\n  _createClass(ShopShow, [{\n    key: \"renderTable\",\n    value: function renderTable() {\n      var _this2 = this;\n\n      var items = this.props.items;\n\n      var tableRows = __jsx(Table.Body, null, __jsx(Table.Row, null, __jsx(Table.Cell, null, items[0].name), __jsx(Table.Cell, null, items[0].quantity), __jsx(Table.Cell, null, items[0].price), __jsx(Table.Cell, null, \"5 Kg\"), __jsx(Table.Cell, null, __jsx(Input, {\n        type: \"number\",\n        placeholder: \"Quantity\",\n        value: this.state.rice,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            rice: event.target.value\n          });\n        }\n      }))), __jsx(Table.Row, null, __jsx(Table.Cell, null, items[1].name), __jsx(Table.Cell, null, items[1].quantity), __jsx(Table.Cell, null, items[1].price), __jsx(Table.Cell, null, \"5 Kg\"), __jsx(Table.Cell, null, __jsx(Input, {\n        type: \"number\",\n        placeholder: \"Quantity\",\n        value: this.state.wheat,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            wheat: event.target.value\n          });\n        }\n      }))), __jsx(Table.Row, null, __jsx(Table.Cell, null, items[2].name), __jsx(Table.Cell, null, items[2].quantity), __jsx(Table.Cell, null, items[2].price), __jsx(Table.Cell, null, \"5 Kg\"), __jsx(Table.Cell, null, __jsx(Input, {\n        type: \"number\",\n        placeholder: \"Quantity\",\n        value: this.state.arhad,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            arhad: event.target.value\n          });\n        }\n      }))), __jsx(Table.Row, null, __jsx(Table.Cell, null, items[3].name), __jsx(Table.Cell, null, items[3].quantity), __jsx(Table.Cell, null, items[3].price), __jsx(Table.Cell, null, \"5 ltr\"), __jsx(Table.Cell, null, __jsx(Input, {\n        type: \"number\",\n        placeholder: \"Quantity\",\n        value: this.state.kerosene,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            kerosene: event.target.value\n          });\n        }\n      }))));\n\n      return __jsx(\"div\", null, __jsx(\"h3\", null, __jsx(\"strong\", null, \"STOCK STATEMENT\")), __jsx(Table, null, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, null, \"Item Name\"), __jsx(Table.HeaderCell, null, \"Stock\"), __jsx(Table.HeaderCell, null, \"Price(per KG)\"), __jsx(Table.HeaderCell, null, \"Maximum Quantity Per Month\"), __jsx(Table.HeaderCell, null, \"Buying Quantity\"))), tableRows), this.renderTableError());\n    }\n  }, {\n    key: \"renderCard\",\n    value: function renderCard() {\n      var items = [{\n        header: this.props.shopName,\n        description: 'SHOP NAME',\n        meta: 'This is the name of the shop.'\n      }, {\n        header: this.props.fpdName,\n        description: 'FDP NUMBER',\n        meta: 'This is the name of the shop.'\n      }, {\n        header: this.props.managerName,\n        description: 'MANAGER NAME',\n        meta: 'This is the name of the shop.'\n      }];\n      return __jsx(\"div\", null, __jsx(Card.Group, {\n        items: items,\n        itemsPerRow: 3\n      }), __jsx(Card.Group, {\n        itemsPerRow: 2\n      }, __jsx(Card, null, __jsx(Card.Content, null, __jsx(Card.Header, null, this.props.addr), __jsx(Card.Meta, null, \"This is the name of the shop.\"), __jsx(Card.Description, null, \"SHOP ADDRESS\"))), __jsx(Card, null, __jsx(Card.Content, null, __jsx(Card.Header, null, this.props.blockName), __jsx(Card.Meta, null, \"This is the name of the block.\"), __jsx(Card.Description, null, \"BLOCK NAME\")))));\n    }\n  }, {\n    key: \"renderRecordButton\",\n    value: function renderRecordButton() {\n      return __jsx(Link, {\n        route: \"/\".concat(this.props.headerToken, \"/shops/record/\").concat(this.props.currentAddress)\n      }, __jsx(\"a\", null, __jsx(Button, {\n        color: \"blue\"\n      }, \"View Previous Record Details\")));\n    }\n  }, {\n    key: \"renderTableError\",\n    value: function renderTableError() {\n      if (this.state.tableError === '') return null;else if (this.state.tableError === 'Success') return __jsx(Message, {\n        color: \"green\"\n      }, \"Payment Successful.   Total Amount Paid is Rs.\".concat(_parseInt(this.state.rice) * 2 + _parseInt(this.state.wheat) * 4 + _parseInt(this.state.arhad) * 3 + _parseInt(this.state.kerosene) * 5, \".   Order ID : \").concat(this.state.threeDigit));\n      return __jsx(Message, {\n        color: \"red\"\n      }, this.state.tableError);\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton() {\n      return __jsx(Button, {\n        color: \"blue\",\n        onClick: this.onClick\n      }, \"Make Payment\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        headerToken: this.props.headerToken,\n        loggedIn: this.props.loggedIn\n      }, __jsx(Grid, {\n        style: {\n          color: '#2185D0'\n        },\n        columns: 1\n      }, __jsx(Grid.Row, {\n        textAlign: \"center\"\n      }, __jsx(Grid.Column, null, this.renderTable())), __jsx(Grid.Row, {\n        textAlign: \"center\"\n      }, __jsx(Grid.Column, null, this.renderButton())), __jsx(Grid.Row, null, __jsx(Grid.Column, null, this.renderCard())), __jsx(Grid.Row, {\n        textAlign: \"center\"\n      }, __jsx(Grid.Column, null, this.renderRecordButton()))), this.renderComment());\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      var _validate, headerToken, loggedIn, headers, _ref5, data, status, address, s, details, dataInp, headersNew, dataComplaint;\n\n      return _regeneratorRuntime.async(function getInitialProps$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _validate = validate(props.query.headerToken), headerToken = _validate.headerToken, loggedIn = _validate.loggedIn;\n              headers = {\n                'Content-Type': 'application/json',\n                'x-auth-token': headerToken\n              };\n              _context6.next = 4;\n              return _regeneratorRuntime.awrap(get('/user/login/me', headers));\n\n            case 4:\n              _ref5 = _context6.sent;\n              data = _ref5.data;\n              status = _ref5.status;\n              address = props.query.address;\n              s = Shop(address);\n              _context6.next = 11;\n              return _regeneratorRuntime.awrap(s.methods.getDetails().call());\n\n            case 11:\n              details = _context6.sent;\n              console.log(details[5]);\n              dataInp = {\n                fpdName: details[5]\n              };\n              headersNew = {\n                'Content-Type': 'application/json'\n              };\n              _context6.next = 17;\n              return _regeneratorRuntime.awrap(postWithData('/complaints/list', headersNew, dataInp));\n\n            case 17:\n              dataComplaint = _context6.sent;\n              console.log(dataComplaint.data.record, 'insidemethods'); // const dataComplaint = ['a', 'b', 'c'];\n\n              console.log(dataComplaint.data.record);\n              return _context6.abrupt(\"return\", {\n                managerName: details[0],\n                items: [{\n                  quantity: details[1],\n                  name: 'Rice',\n                  price: '2'\n                }, {\n                  quantity: details[2],\n                  name: 'Wheat',\n                  price: '4'\n                }, {\n                  quantity: details[3],\n                  name: 'Arhad',\n                  price: '3'\n                }, {\n                  quantity: details[4],\n                  name: 'Kerosene',\n                  price: '5'\n                }],\n                fpdName: details[5],\n                shopName: details[6],\n                manager: details[7],\n                addr: details[8],\n                currentAddress: address,\n                headerToken: headerToken,\n                loggedIn: loggedIn,\n                blockName: data.address.area,\n                address: address,\n                name: data.name,\n                dataComplaint: dataComplaint.data.record\n              });\n\n            case 21:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return ShopShow;\n}(Component);\n\nexport default ShopShow;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/pages/shops/show.js"],"names":["React","Component","Layout","Shop","Card","Table","Grid","Button","Input","Message","Form","Comment","Header","Link","Router","validate","get","web3","CustomError","post","postWithData","ShopShow","rice","wheat","arhad","kerosene","tableError","status","threeDigit","complaint","headers","props","headerToken","data","ration","qty","state","msg","count","dateIns","Date","date","toLocaleDateString","getHours","getMinutes","blockName","substring","Math","floor","random","getRation","orderid","fpdName","setState","text","console","log","verifyCurrent","verifyPrevious","eth","getAccounts","accounts","s","address","transaction","pushRoute","message","e","preventDefault","dataInp","name","first","last","comment","dataComplaint","push","comments","map","item","index","postComplaint","target","value","items","tableRows","quantity","price","event","renderTableError","header","shopName","description","meta","managerName","addr","currentAddress","onClick","loggedIn","color","renderTable","renderButton","renderCard","renderRecordButton","renderComment","query","methods","getDetails","call","details","headersNew","record","manager","area"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../../components/layout';\nimport Shop from '../../ethereum/shop';\nimport { Card, Table, Grid, Button, Input, Message, Form, Comment, Header } from 'semantic-ui-react';\nimport {  Link, Router } from '../../routes';\nimport validate from '../../localmodules/token_validate';\nimport get from '../../localmodules/express_get';\nimport web3 from '../../ethereum/web3';\nimport CustomError from '../../localmodules/custom_error';\nimport post from '../../localmodules/express_post';\nimport postWithData from '../../localmodules/express_post_data'\n\n\nclass ShopShow extends Component {\n\n    state = { \n        rice : '',\n        wheat : '',\n        arhad : '',\n        kerosene : '',\n        tableError : '',\n        status : '',\n        threeDigit: '',\n        complaint : ''\n    };\n\n    static async getInitialProps(props) {\n        const { headerToken, loggedIn } = validate(props.query.headerToken);\n        const headers = { 'Content-Type':'application/json', 'x-auth-token' : headerToken};\n        const {data, status} = await get('/user/login/me', headers);\n        const address = props.query.address;\n\n        const s = Shop(address);\n        const details = await s.methods.getDetails().call();\n\n\n        console.log( details[5] );\n        const dataInp = {\n            fpdName : details[5] \n        }\n        const headersNew = { 'Content-Type':'application/json'};\n        const dataComplaint = await postWithData('/complaints/list', headersNew, dataInp);\n        console.log(dataComplaint.data.record, 'insidemethods')\n        // const dataComplaint = ['a', 'b', 'c'];\n        console.log(dataComplaint.data.record);\n\n\n\n        return { \n            managerName : details[0],\n            items : [{quantity : details[1], name : 'Rice', price : '2'},\n                    {quantity: details[2], name : 'Wheat', price : '4'},\n                    {quantity : details[3], name : 'Arhad', price : '3'},\n                    {quantity : details[4], name : 'Kerosene', price : '5'}],\n            fpdName : details[5],\n            shopName : details[6],\n            manager : details[7],\n            addr : details[8],\n            currentAddress : address,\n            headerToken,\n            loggedIn,\n            blockName : data.address.area,\n            address,\n            name : data.name,\n            dataComplaint : dataComplaint.data.record,\n        };\n    }\n\n    \n\n    renderTable() {\n        const items = this.props.items;\n        const tableRows = (\n            <Table.Body>\n                <Table.Row>\n                    <Table.Cell>{items[0].name}</Table.Cell>\n                    <Table.Cell>{items[0].quantity}</Table.Cell>\n                    <Table.Cell>{items[0].price}</Table.Cell>\n                    <Table.Cell>5 Kg</Table.Cell>\n                    <Table.Cell>\n                        <Input\n                            type='number'\n                            placeholder = 'Quantity'\n                            value={this.state.rice}\n                            onChange={event => this.setState({ rice : event.target.value })}\n                        />\n                    </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                <Table.Cell>{items[1].name}</Table.Cell>\n                    <Table.Cell>{items[1].quantity}</Table.Cell>\n                    <Table.Cell>{items[1].price}</Table.Cell>\n                    <Table.Cell>5 Kg</Table.Cell>\n                    <Table.Cell>\n                        <Input\n                            type='number'\n                            placeholder = 'Quantity'\n                            value={this.state.wheat}\n                            onChange={event => this.setState({ wheat : event.target.value })}\n                        />\n                    </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                <Table.Cell>{items[2].name}</Table.Cell>\n                    <Table.Cell>{items[2].quantity}</Table.Cell>\n                    <Table.Cell>{items[2].price}</Table.Cell>\n                    <Table.Cell>5 Kg</Table.Cell>\n                    <Table.Cell>\n                        <Input\n                            type='number'\n                            placeholder = 'Quantity'\n                            value={this.state.arhad}\n                            onChange={event => this.setState({ arhad : event.target.value })}\n                        />\n                    </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                <Table.Cell>{items[3].name}</Table.Cell>\n                    <Table.Cell>{items[3].quantity}</Table.Cell>\n                    <Table.Cell>{items[3].price}</Table.Cell>\n                    <Table.Cell>5 ltr</Table.Cell>\n                    <Table.Cell>\n                        <Input\n                            type='number'\n                            placeholder = 'Quantity'\n                            value={this.state.kerosene}\n                            onChange={event => this.setState({ kerosene : event.target.value })}\n                        />\n                    </Table.Cell>\n                </Table.Row>\n            </Table.Body>\n        );\n        \n        return (\n            <div>\n                <h3><strong>STOCK STATEMENT</strong></h3>\n                <Table>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Item Name</Table.HeaderCell>\n                            <Table.HeaderCell>Stock</Table.HeaderCell>\n                            <Table.HeaderCell>Price(per KG)</Table.HeaderCell>\n                            <Table.HeaderCell>Maximum Quantity Per Month</Table.HeaderCell>\n                            <Table.HeaderCell>Buying Quantity</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    {tableRows}\n                \n                </Table>\n                {this.renderTableError()}\n            </div>\n        );\n    }\n\n    renderCard() {\n        const items = [\n            {\n                header : this.props.shopName,\n                description : 'SHOP NAME',\n                meta : 'This is the name of the shop.'\n            },\n            {\n                header : this.props.fpdName,\n                description : 'FDP NUMBER',\n                meta : 'This is the name of the shop.'\n            },\n            {\n                header : this.props.managerName,\n                description : 'MANAGER NAME',\n                meta : 'This is the name of the shop.'\n            },\n        ];\n\n        return (\n            <div>\n                <Card.Group items = {items} itemsPerRow = {3}/>\n                    \n                <Card.Group itemsPerRow={2}>\n                    <Card>\n                        <Card.Content>\n                            <Card.Header>{this.props.addr}</Card.Header>\n                            <Card.Meta>This is the name of the shop.</Card.Meta>\n                            <Card.Description>SHOP ADDRESS</Card.Description>\n                        </Card.Content>\n                    </Card>\n                    <Card>\n                        <Card.Content>\n                            <Card.Header>{this.props.blockName}</Card.Header>\n                            <Card.Meta>This is the name of the block.</Card.Meta>\n                            <Card.Description>BLOCK NAME</Card.Description>\n                        </Card.Content>\n                    </Card>\n                </Card.Group>\n            </div>\n        );\n    }\n\n    renderRecordButton() {\n        return (\n\n            <Link route={`/${this.props.headerToken}/shops/record/${this.props.currentAddress}`}>\n                <a>\n                    <Button color='blue'>\n                    View Previous Record Details\n                    </Button>\n                </a>\n            </Link>\n\n        );\n    }\n\n    getRation = async () => {\n        const headers = { 'Content-Type':'application/json', 'x-auth-token' : this.props.headerToken};\n        const {data, status} = await get('/user/login/me', headers);\n        return data.ration;\n    }\n\n    verifyCurrent = () => {\n        const qty = this.state;\n        let msg = '';\n        let count = 0;\n        if(qty.rice > 5){\n            msg = msg+\"Rice\";\n            count++;\n        }\n        if(qty.wheat > 5){\n            msg = msg+\", Wheat\";\n            if(count ===0)\n                msg = 'Wheat'\n            count++;\n        }\n        if(qty.arhad > 5){\n            msg = msg+\", Arhad\";\n            if(count === 0)\n                msg = 'Arhad'\n            count++;\n        }\n        if(qty.kerosene > 5){\n            msg = msg+\", Kerosene\";\n            if(count === 0)\n                msg = 'Kerosene'\n            count++;\n        }\n        if( count > 0){\n            throw new CustomError(`Quantity of ${msg} exceeds the maximum quantity allowed per month.`);\n        }\n    }\n    renderTableError(){\n        if(this.state.tableError === '')\n            return null;\n        else if(this.state.tableError === 'Success')\n            return <Message color='green'>{`Payment Successful.   Total Amount Paid is Rs.${parseInt(this.state.rice) * 2 + parseInt(this.state.wheat)*4 + parseInt(this.state.arhad)*3 + parseInt(this.state.kerosene)*5}.   Order ID : ${this.state.threeDigit}`}</Message>;\n        return <Message color='red'>{this.state.tableError}</Message>;\n    }\n\n    verifyPrevious = async () => {\n        const dateIns = new Date;\n        const date = dateIns.toLocaleDateString() + '(' +dateIns.getHours() +':'+ dateIns.getMinutes() + ')';\n        const threeDigit = 'OD20M05' + this.props.blockName.substring(0,3) + Math.floor(Math.random() * Math.floor(1000));\n        const ration = await this.getRation();\n        const data = {\n            rice : this.state.rice,\n            wheat : this.state.wheat,\n            arhad : this.state.arhad,\n            kerosene : this.state.kerosene,\n            ration : ration,\n            date : date,\n            orderid : threeDigit,\n            fpdName : this.props.fpdName\n        };\n        this.setState({threeDigit});\n        const headers = { 'Content-Type':'application/json' };\n        const {text, status} = await post('/record/verify', headers, data);\n        console.log(status, \"Func\");\n        if(status === 400){\n            this.setState({status});\n            throw new CustomError(text);\n        }\n        \n    }\n\n    saveToMongo = async() => {\n        const dateIns = new Date;\n        const date = dateIns.toLocaleDateString() + '(' +dateIns.getHours() +':'+ dateIns.getMinutes() + ')';\n        const threeDigit = this.state.threeDigit;\n        const ration = await this.getRation();\n        const data = {\n            rice : this.state.rice,\n            wheat : this.state.wheat,\n            arhad : this.state.arhad,\n            kerosene : this.state.kerosene,\n            ration : ration,\n            date : date,\n            orderid : threeDigit,\n            fpdName : this.props.fpdName\n        };\n        const headers = { 'Content-Type':'application/json' };\n        const {text, status} = await post('/record', headers, data);\n        if(status !== 400){\n            this.setState({ tableError : 'Success' });\n        }\n    }\n\n    onClick = async () => {\n        try {\n            this.setState({tableError : ''});\n            this.verifyCurrent();\n            await this.verifyPrevious();\n            console.log(this.state.status);\n            if(!(this.state.status === 400)){\n                const dateIns = new Date;\n                const date = dateIns.toLocaleDateString() + '(' +dateIns.getHours() +':'+ dateIns.getMinutes() + ')';\n                const threeDigit = this.state.threeDigit;\n                const ration = await this.getRation();\n                const accounts = await web3.eth.getAccounts();\n                const s = Shop(this.props.address);\n                const transaction = this.state.rice + '-' + this.state.wheat + '-' + this.state.arhad + '-' + this.state.kerosene + '-' + threeDigit;\n                // await s.methods\n                // .purchase(ration, threeDigit, date, this.state.kerosene, this.state.rice, this.state.wheat, this.state.arhad)\n                // .send({\n                //     from : accounts[0],\n                //     value: web3.utils.toWei('72', 'wei')\n                // });\n                //this.saveToMongo();\n                console.log(transaction);\n                Router.pushRoute(`/${validate(this.props.headerToken).headerToken}/shops/${transaction}/receipt/${this.props.address}`);\n            }\n            \n        } catch(e) {\n            this.setState({tableError : e.message});\n        }\n    }\n\n    renderButton(){\n        return (\n            <Button color='blue' onClick={this.onClick}>\n            Make Payment\n            </Button>\n    \n        );\n    }\n\n    postComplaint = async (e) => {\n        e.preventDefault();\n        \n        let dataInp = {\n            fpdName : this.props.fpdName,\n            name : this.props.name.first + \" \" + this.props.name.last,\n            comment : this.state.complaint\n        }\n        const headers = { 'Content-Type':'application/json'};\n        const { text,status } = await post('/complaints', headers, dataInp);\n        console.log(text);\n        dataInp.date = 'Just now'\n        this.props.dataComplaint.push(dataInp);\n        this.setState({complaint : ''});\n    }\n\n    renderComment = () => {\n\n        const comments = this.props.dataComplaint.map((item, index) => {\n            return (\n                <Comment key={index}>\n                    <Comment.Content>\n                    <Comment.Author as='a'>{item.name}</Comment.Author>\n                    <Comment.Metadata>\n                        <div>{item.date}</div>\n                    </Comment.Metadata>\n                    <Comment.Text>{item.comment}</Comment.Text>\n                    \n                    </Comment.Content>\n                </Comment>\n            );\n        });\n\n        return (\n            <Comment.Group>\n                <Header as='h3' dividing>\n                    Complaints\n                </Header>\n                \n                {comments}\n            \n                <Form onSubmit={this.postComplaint}>\n                    <Form.TextArea \n                        value={this.state.complaint}\n                        onChange = {(e) => this.setState({complaint : e.target.value})}\n                    />\n                    <Button content='Add Complaint' labelPosition='left' icon='edit' primary />\n                </Form>\n            </Comment.Group>\n        );\n\n    }\n\n\n    render() {\n        return (\n            <Layout headerToken={this.props.headerToken} loggedIn={this.props.loggedIn}>\n                <Grid style={{color:'#2185D0'}} columns={1}>\n                    <Grid.Row textAlign='center'>\n                        <Grid.Column>\n                            {this.renderTable()}\n                        </Grid.Column>  \n                    </Grid.Row>\n                    <Grid.Row textAlign='center'>\n                        <Grid.Column>\n                            {this.renderButton()}\n                        </Grid.Column>  \n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            {this.renderCard()}\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row textAlign='center'>\n                        <Grid.Column>\n                            {this.renderRecordButton()}\n                        </Grid.Column>\n                        {/* <Grid.Column>\n                            {this.renderComplaintButton()}\n                        </Grid.Column>    */}\n                    </Grid.Row>\n\n                    \n                </Grid>\n                {this.renderComment()}\n            </Layout>\n        );\n    }\n}\n\n\nexport default ShopShow;"]},"metadata":{},"sourceType":"module"}