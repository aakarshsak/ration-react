{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Container, Grid, Divider, Segment, Table } from 'semantic-ui-react';\nimport QRCode from 'qrcode.react';\n\nconst receiptGenerator = props => {\n  const v = props.values;\n  const d = new Date();\n  const dateTime = d.toLocaleDateString() + '(' + d.getHours() + ':' + d.getMinutes() + ')';\n  console.log(dateTime);\n  let date = dateTime.substring(0, dateTime.indexOf('('));\n  let time = dateTime.substring(dateTime.indexOf('(') + 1, dateTime.length - 1);\n  let min = time.substring(time.indexOf(':') + 1, time.length);\n\n  if (min.length === 1) {\n    time = time.substring(0, time.indexOf(':') + 1) + '0' + min;\n    console.log(time, 'after changed');\n  }\n\n  return __jsx(Container, null, __jsx(Segment, {\n    style: {\n      padding: '60px'\n    }\n  }, __jsx(Grid, {\n    verticalAlign: \"middle\"\n  }, __jsx(Grid.Row, {\n    columns: 2\n  }, __jsx(Grid.Column, {\n    textAlign: \"left\",\n    width: 8\n  }, __jsx(\"h2\", null, \"RECEIPT\"), __jsx(\"br\", null), __jsx(\"p\", null, __jsx(\"b\", null, \"Bill From\"), __jsx(\"br\", null), v.details[6], \" \", __jsx(\"br\", null), v.details[8]), __jsx(\"p\", null, \"9606409972\", __jsx(\"br\", null), \"email@yourcompany.com\")), __jsx(Grid.Column, {\n    textAlign: \"right\",\n    width: 8\n  }, __jsx(QRCode, {\n    value: \"http://facebook.github.io/react/\"\n  }))), __jsx(Divider, {\n    section: true\n  }), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n    width: 12\n  }, __jsx(\"p\", null, __jsx(\"b\", null, \"Bill To\"), \" \", __jsx(\"br\", null), v.data.name.first + \" \" + v.data.name.last), __jsx(\"p\", null, \"Date \", date, __jsx(\"br\", null), \"Order ID \", v.trans.orderid, __jsx(\"br\", null), \"Receipt #\", 1234255536), __jsx(\"p\", null, \"Many thanks,\", __jsx(\"br\", null), \"Team E-Ration\"))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Table, {\n    celled: true,\n    structured: true\n  }, __jsx(Table.Header, {\n    width: 3\n  }, __jsx(Table.Row, null, __jsx(Table.HeaderCell, null, \"#\"), __jsx(Table.HeaderCell, null, \"Item\"), __jsx(Table.HeaderCell, null, \"Quantity(In Kg)\"), __jsx(Table.HeaderCell, null, \"Quantity To Reach Month Limit(In Kg)\"), __jsx(Table.HeaderCell, null, \"Quantity X Price(Per Kg) = Price\"))), __jsx(Table.Body, null, __jsx(Table.Row, null, __jsx(Table.Cell, {\n    width: 1\n  }, \"1\"), __jsx(Table.Cell, {\n    width: 6\n  }, \"Rice\"), __jsx(Table.Cell, {\n    width: 1\n  }, v.trans.rice), __jsx(Table.Cell, {\n    width: 1\n  }, 5 - v.trans.rice), __jsx(Table.Cell, {\n    width: 4\n  }, v.trans.rice, \" X 2 = \", __jsx(\"b\", null, \"Rs \", v.trans.rice * 2))), __jsx(Table.Row, null, __jsx(Table.Cell, null, \"222\"), __jsx(Table.Cell, null, \"222\"), __jsx(Table.Cell, null, v.trans.wheat), __jsx(Table.Cell, null, 5 - v.trans.wheat), __jsx(Table.Cell, null, v.trans.wheat, \" X 4 = \", __jsx(\"b\", null, \"Rs \", v.trans.wheat * 4))), __jsx(Table.Row, null, __jsx(Table.Cell, null, \"2222\"), __jsx(Table.Cell, null, \"2222\"), __jsx(Table.Cell, null, v.trans.arhad), __jsx(Table.Cell, null, 5 - v.trans.arhad), __jsx(Table.Cell, null, v.trans.arhad, \" X 3 = \", __jsx(\"b\", null, \"Rs \", v.trans.arhad * 3))), __jsx(Table.Row, null, __jsx(Table.Cell, null, \"2222\"), __jsx(Table.Cell, null, \"2222\"), __jsx(Table.Cell, null, v.trans.kerosene), __jsx(Table.Cell, null, 5 - v.trans.kerosene), __jsx(Table.Cell, null, v.trans.kerosene, \" X 5 = \", __jsx(\"b\", null, \"Rs \", v.trans.kerosene * 5))), __jsx(Table.Row, null, __jsx(Table.Cell, {\n    colSpan: \"4\"\n  }, __jsx(\"b\", null, \"Subtotal\")), __jsx(Table.Cell, null, __jsx(\"b\", null, \"1233\"))), __jsx(Table.Row, null, __jsx(Table.Cell, {\n    colSpan: \"4\"\n  }, __jsx(\"b\", null, \"Sales Tax(18%)\")), __jsx(Table.Cell, null, __jsx(\"b\", null, \"1233\"))), __jsx(Table.Row, null, __jsx(Table.Cell, {\n    colSpan: \"4\"\n  }, __jsx(\"b\", null, \"Total\")), __jsx(Table.Cell, null, \"fafsf\")))))))));\n};\n\nexport default receiptGenerator;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/components/receipt.js"],"names":["React","Container","Grid","Divider","Segment","Table","QRCode","receiptGenerator","props","v","values","d","Date","dateTime","toLocaleDateString","getHours","getMinutes","console","log","date","substring","indexOf","time","length","min","padding","details","data","name","first","last","trans","orderid","rice","wheat","arhad","kerosene"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Container, Grid, Divider, Segment, Table } from 'semantic-ui-react';\nimport QRCode from 'qrcode.react';\n\n\n\nconst receiptGenerator = (props) => {\n\n    const v = props.values;\n    const d = new Date();\n    const dateTime = d.toLocaleDateString() + '(' +d.getHours() +':'+ d.getMinutes() + ')';\n    console.log(dateTime);\n    let date = dateTime.substring(0, dateTime.indexOf('('));\n    let time = dateTime.substring(dateTime.indexOf('(')+1, dateTime.length-1);\n    let min = time.substring(time.indexOf(':')+1, time.length);\n    if(min.length === 1){\n        time = time.substring(0, time.indexOf(':')+1) + '0' + min;\n        console.log(time, 'after changed');\n    } \n\n    return (\n        <Container>\n            <Segment style={{padding : '60px'}}>\n                <Grid verticalAlign='middle'>\n                    <Grid.Row columns={2}>\n                        {/* <Grid.Column width={3}></Grid.Column> */}\n                        <Grid.Column textAlign='left' width={8}>\n                            <h2>RECEIPT</h2>\n                            <br />\n                            <p><b>Bill From</b><br />\n                            {v.details[6]} <br/>\n                            {v.details[8]}</p>\n\n                            <p>9606409972<br />\n                            email@yourcompany.com</p>\n                        </Grid.Column>\n                        <Grid.Column textAlign='right' width={8}><QRCode value=\"http://facebook.github.io/react/\" /></Grid.Column>\n                        {/* <Grid.Column width={3}></Grid.Column> */}\n                    </Grid.Row>\n                    <Divider section />\n                    <Grid.Row>\n                        {/* <Grid.Column width={1} /> */}\n                        <Grid.Column width={12}>\n                            <p><b>Bill To</b> <br />\n                            { v.data.name.first + \" \" + v.data.name.last }</p>\n                            \n                            <p>Date {date}\n                            <br />Order ID {v.trans.orderid}<br />\n                            Receipt #{1234255536}</p>\n                                    \n                            <p>Many thanks,<br/>\n                            Team E-Ration</p>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column >\n                            <Table celled structured>\n                                <Table.Header width={3}>\n                                    <Table.Row>\n                                        <Table.HeaderCell >#</Table.HeaderCell>\n                                        <Table.HeaderCell >Item</Table.HeaderCell>\n                                        <Table.HeaderCell >Quantity(In Kg)</Table.HeaderCell>\n                                        <Table.HeaderCell >Quantity To Reach Month Limit(In Kg)</Table.HeaderCell>\n                                        <Table.HeaderCell >Quantity X Price(Per Kg) = Price</Table.HeaderCell>\n                                    </Table.Row>\n                                </Table.Header>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell width={1}>1</Table.Cell>\n                                        <Table.Cell width={6}>Rice</Table.Cell>\n                                        <Table.Cell width={1}>{v.trans.rice}</Table.Cell>\n                                        <Table.Cell width={1}>{5-v.trans.rice}</Table.Cell>\n                                        <Table.Cell width={4}>\n                                            {v.trans.rice} X 2 = <b>Rs {v.trans.rice * 2}</b>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell>222</Table.Cell>\n                                        <Table.Cell>222</Table.Cell>\n                                        <Table.Cell>{v.trans.wheat}</Table.Cell>\n                                        <Table.Cell>{5 - v.trans.wheat}</Table.Cell>\n                                        <Table.Cell>\n                                            {v.trans.wheat} X 4 = <b>Rs {v.trans.wheat * 4}</b>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell>2222</Table.Cell>\n                                        <Table.Cell>2222</Table.Cell>\n                                        <Table.Cell>{v.trans.arhad}</Table.Cell>\n                                        <Table.Cell>{5 - v.trans.arhad}</Table.Cell>\n                                        <Table.Cell>\n                                            {v.trans.arhad} X 3 = <b>Rs {v.trans.arhad * 3}</b>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell>2222</Table.Cell>\n                                        <Table.Cell>2222</Table.Cell>\n                                        <Table.Cell>{v.trans.kerosene}</Table.Cell>\n                                        <Table.Cell>{5 - v.trans.kerosene}</Table.Cell>\n                                        <Table.Cell>\n                                            {v.trans.kerosene} X 5 = <b>Rs {v.trans.kerosene * 5}</b>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row >\n                                        <Table.Cell colSpan='4'><b>Subtotal</b></Table.Cell>\n                                        <Table.Cell ><b>1233</b></Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row >\n                                        <Table.Cell colSpan='4'><b>Sales Tax(18%)</b></Table.Cell>\n                                        <Table.Cell ><b>1233</b></Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row >\n                                        <Table.Cell colSpan='4'><b>Total</b></Table.Cell>\n                                        <Table.Cell >fafsf</Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                        </Grid.Column>\n                    </Grid.Row>\n                    \n                </Grid>\n                \n                \n            </Segment>\n        </Container>\n    );\n}\n\nexport default receiptGenerator;"]},"metadata":{},"sourceType":"module"}