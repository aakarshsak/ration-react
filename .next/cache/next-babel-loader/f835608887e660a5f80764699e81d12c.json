{"ast":null,"code":"const Web3 = require('web3'); //const func = () => {\n\n\nlet web3;\n\nif (false && typeof window.web3 !== 'undefined') {\n  // We are in the browser and metamask is running.\n  console.log(' We are in the browser and metamask is running.');\n  web3 = new Web3(window.web3.currentProvider); // try {\n  //   await ethereum.enable();\n  // } catch(e) {\n  //   console.log(e);\n  // }\n} else {\n  // We are on the server *OR* the user is not running metamask\n  console.log('We are on the server *OR* the user is not running metamask');\n  const provider = new Web3.providers.HttpProvider('https://rinkeby.infura.io/v3/42d235c7d6304509a63bec8b043c9bc2');\n  const web3 = new Web3(provider);\n  console.log(web3);\n} //return web3;\n//}\n//web3 = func();\n\n\nmodule.exports = web3;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/ethereum/web3.js"],"names":["Web3","require","web3","window","console","log","currentProvider","provider","providers","HttpProvider","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB,C,CAEA;;;AACE,IAAIC,IAAJ;;AACA,IAAI,SAAiC,OAAOC,MAAM,CAACD,IAAd,KAAuB,WAA5D,EAAyE;AACvE;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ;AACAH,EAAAA,IAAI,GAAG,IAAIF,IAAJ,CAASG,MAAM,CAACD,IAAP,CAAYI,eAArB,CAAP,CAHuE,CAIvE;AACA;AACA;AACA;AACA;AACD,CATD,MASO;AACL;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,4DAAZ;AACA,QAAME,QAAQ,GAAG,IAAIP,IAAI,CAACQ,SAAL,CAAeC,YAAnB,CACf,+DADe,CAAjB;AAGA,QAAMP,IAAI,GAAG,IAAIF,IAAJ,CAASO,QAAT,CAAb;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,C,CACD;AACF;AAGA;;;AACAQ,MAAM,CAACC,OAAP,GAAiBT,IAAjB","sourcesContent":["const Web3 = require('web3');\n\n//const func = () => {\n  let web3;\n  if (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n    // We are in the browser and metamask is running.\n    console.log(' We are in the browser and metamask is running.');\n    web3 = new Web3(window.web3.currentProvider);\n    // try {\n    //   await ethereum.enable();\n    // } catch(e) {\n    //   console.log(e);\n    // }\n  } else {\n    // We are on the server *OR* the user is not running metamask\n    console.log('We are on the server *OR* the user is not running metamask')\n    const provider = new Web3.providers.HttpProvider(\n      'https://rinkeby.infura.io/v3/42d235c7d6304509a63bec8b043c9bc2'\n    );\n    const web3 = new Web3(provider);\n    console.log(web3);\n  }\n  //return web3;\n//}\n\n\n//web3 = func();\nmodule.exports = web3;"]},"metadata":{},"sourceType":"script"}