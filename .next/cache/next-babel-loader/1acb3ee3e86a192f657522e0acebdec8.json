{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Comment, Header, Form, Button } from 'semantic-ui-react';\nexport default class CommentExampleComment extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      currentComment: ''\n    });\n\n    _defineProperty(this, \"postComplaint\", event => {\n      event.preventDefault();\n    });\n  }\n\n  render() {\n    const comments = this.props.list.map((item, index) => {\n      return __jsx(Comment, null, __jsx(Comment.Content, null, __jsx(Comment.Author, {\n        as: \"a\"\n      }, \"Matt\"), __jsx(Comment.Metadata, null, __jsx(\"div\", null, \"Today at 5:42PM\")), __jsx(Comment.Text, null, \"How artistic!\"), __jsx(Comment.Actions, null, __jsx(Comment.Action, null, \"Reply\"))));\n    });\n    return __jsx(Comment.Group, null, __jsx(Header, {\n      as: \"h3\",\n      dividing: true\n    }, \"Complaints\"), comments, __jsx(Form, {\n      reply: true,\n      onSubmit: this.postComplaint\n    }, __jsx(Form.TextArea, {\n      value: this.state.currentComment,\n      onChange: e => this.setState({\n        currentComment: e.target.value\n      })\n    }), __jsx(Button, {\n      content: \"Add Reply\",\n      labelPosition: \"left\",\n      icon: \"edit\",\n      primary: true\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/components/complaint.js"],"names":["React","Component","Comment","Header","Form","Button","CommentExampleComment","currentComment","event","preventDefault","render","comments","props","list","map","item","index","postComplaint","state","e","setState","target","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,MAA9B,QAA2C,mBAA3C;AAEA,eAAe,MAAMC,qBAAN,SAAoCL,SAApC,CAA8C;AAAA;AAAA;;AAAA,mCAEjD;AACJM,MAAAA,cAAc,EAAG;AADb,KAFiD;;AAAA,2CAMxCC,KAAD,IAAU;AACtBA,MAAAA,KAAK,CAACC,cAAN;AACH,KARwD;AAAA;;AAUzDC,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClD,aACI,MAAC,OAAD,QACI,MAAC,OAAD,CAAS,OAAT,QACA,MAAC,OAAD,CAAS,MAAT;AAAgB,QAAA,EAAE,EAAC;AAAnB,gBADA,EAEA,MAAC,OAAD,CAAS,QAAT,QACI,qCADJ,CAFA,EAKA,MAAC,OAAD,CAAS,IAAT,wBALA,EAMA,MAAC,OAAD,CAAS,OAAT,QACI,MAAC,OAAD,CAAS,MAAT,gBADJ,CANA,CADJ,CADJ;AAcH,KAfgB,CAAjB;AAiBA,WACI,MAAC,OAAD,CAAS,KAAT,QACA,MAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAgB,MAAA,QAAQ;AAAxB,oBADA,EAKCL,QALD,EAOA,MAAC,IAAD;AAAM,MAAA,KAAK,MAAX;AAAY,MAAA,QAAQ,EAAE,KAAKM;AAA3B,OACI,MAAC,IAAD,CAAM,QAAN;AACI,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWX,cADtB;AAEI,MAAA,QAAQ,EAAKY,CAAD,IAAO,KAAKC,QAAL,CAAc;AAACb,QAAAA,cAAc,EAAGY,CAAC,CAACE,MAAF,CAASC;AAA3B,OAAd;AAFvB,MADJ,EAKI,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,aAAa,EAAC,MAA1C;AAAiD,MAAA,IAAI,EAAC,MAAtD;AAA6D,MAAA,OAAO;AAApE,MALJ,CAPA,CADJ;AAiBH;;AA7CwD","sourcesContent":["import React, {Component} from 'react';\nimport {Comment,Header, Form, Button} from 'semantic-ui-react';\n\nexport default class CommentExampleComment extends Component {\n\n    state = {\n        currentComment : ''\n    }\n\n    postComplaint = (event) =>{\n        event.preventDefault();\n    }\n\n    render() {\n        const comments = this.props.list.map((item, index) => {\n            return (\n                <Comment>\n                    <Comment.Content>\n                    <Comment.Author as='a'>Matt</Comment.Author>\n                    <Comment.Metadata>\n                        <div>Today at 5:42PM</div>\n                    </Comment.Metadata>\n                    <Comment.Text>How artistic!</Comment.Text>\n                    <Comment.Actions>\n                        <Comment.Action>Reply</Comment.Action>\n                    </Comment.Actions>\n                    </Comment.Content>\n                </Comment>\n            );\n        });\n        \n        return (\n            <Comment.Group>\n            <Header as='h3' dividing>\n                Complaints\n            </Header>\n        \n            {comments}\n        \n            <Form reply onSubmit={this.postComplaint}>\n                <Form.TextArea \n                    value={this.state.currentComment}\n                    onChange = {(e) => this.setState({currentComment : e.target.value})}\n                />\n                <Button content='Add Reply' labelPosition='left' icon='edit' primary />\n            </Form>\n            </Comment.Group>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}