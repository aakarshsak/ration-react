{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Input, GridColumn } from 'semantic-ui-react';\nimport Layout from '../../components/layout.js';\nimport { Link } from '../../routes';\nimport post from '../../localmodules/express_post';\n\nvar RegisterForm = /*#__PURE__*/function (_Component) {\n  _inherits(RegisterForm, _Component);\n\n  function RegisterForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegisterForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegisterForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      address: {\n        pin: '',\n        house: '',\n        area: '',\n        district: '',\n        state: '',\n        phone: ''\n      },\n      name: {\n        first: '',\n        middle: '',\n        last: ''\n      },\n      password: '',\n      confirm_pass: '',\n      email: '',\n      aadhar: '',\n      res: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function (event) {\n      event.preventDefault();\n      var _this$state = _this.state,\n          name = _this$state.name,\n          password = _this$state.password,\n          confirm_pass = _this$state.confirm_pass,\n          email = _this$state.email,\n          address = _this$state.address,\n          aadhar = _this$state.aadhar;\n      var data = {\n        name: name,\n        password: password,\n        confirm_pass: confirm_pass,\n        email: email,\n        address: address,\n        aadhar: aadhar\n      };\n      var headers = {\n        'Content-Type': 'application/json'\n      };\n\n      var _post = post('/user/register', headers, data),\n          text = _post.text,\n          status = _post.status;\n\n      if (status === 200) {\n        console.log(text);\n        console.log('Successfully posted...');\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(RegisterForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state.res);\n      return __jsx(Layout, null, __jsx(Grid, {\n        verticalAlign: \"middle\"\n      }, __jsx(Grid.Column, {\n        width: 2\n      }), __jsx(Grid.Column, {\n        width: 12\n      }, __jsx(Header, {\n        as: \"h2\",\n        color: \"blue\",\n        textAlign: \"center\",\n        style: {\n          margin: '35px 35px'\n        }\n      }, this.state.res), __jsx(Form, {\n        onSubmit: this.onSubmit\n      }, __jsx(Form.Group, {\n        widths: \"equal\"\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"First Name\"), __jsx(Input, {\n        placeholder: \"First Name\",\n        value: this.state.name.first,\n        onChange: function onChange(event) {\n          var name = {\n            first: event.target.value\n          };\n\n          _this2.setState({\n            name: name\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Middle Name\"), __jsx(Input, {\n        placeholder: \"Middle Name\",\n        value: this.state.name.middle,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            name: {\n              middle: event.target.value\n            }\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Last Name\"), __jsx(Input, {\n        placeholder: \"Last Name\",\n        value: this.state.name.last,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            name: {\n              last: event.target.value\n            }\n          });\n        }\n      }))), __jsx(Form.Group, null, __jsx(Form.Field, {\n        width: 8\n      }, __jsx(\"label\", null, \"House\"), __jsx(Input, {\n        placeholder: \"House\",\n        value: this.state.address.house,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            address: {\n              house: event.target.value\n            }\n          });\n        }\n      })), __jsx(Form.Field, {\n        width: 8\n      }, __jsx(\"label\", null, \"Area\"), __jsx(Input, {\n        placeholder: \"Area\",\n        value: this.state.address.area,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            address: {\n              area: event.target.value\n            }\n          });\n        }\n      }))), __jsx(Form.Group, null, __jsx(Form.Field, {\n        width: 6\n      }, __jsx(\"label\", null, \"District\"), __jsx(Input, {\n        placeholder: \"District\",\n        value: this.state.address.district,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            address: {\n              district: event.target.value\n            }\n          });\n        }\n      })), __jsx(Form.Field, {\n        width: 6\n      }, __jsx(\"label\", null, \"State\"), __jsx(Input, {\n        placeholder: \"State\",\n        value: this.state.address.state,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            address: {\n              state: event.target.value\n            }\n          });\n        }\n      })), __jsx(Form.Field, {\n        width: 4\n      }, __jsx(\"label\", null, \"Pin\"), __jsx(Input, {\n        placeholder: \"Pin\",\n        value: this.state.address.pin,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            address: {\n              pin: event.target.value\n            }\n          });\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\"\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Email\"), __jsx(Input, {\n        placeholder: \"Email\",\n        type: \"email\",\n        value: this.state.email,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            email: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Aadhar\"), __jsx(Input, {\n        placeholder: \"Aadhar\",\n        value: this.state.aadhar,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            aadhar: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Phone\"), __jsx(Input, {\n        placeholder: \"Phone\",\n        value: this.state.address.phone,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            address: {\n              phone: event.target.value\n            }\n          });\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\"\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Password\"), __jsx(Input, {\n        placeholder: \"Password\",\n        type: \"password\",\n        value: this.state.password,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            password: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Confirm Password\"), __jsx(Input, {\n        placeholder: \"Confirm Password\",\n        type: \"password\",\n        value: this.state.confirm_pass,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            confirm_pass: event.target.value\n          });\n        }\n      }))), __jsx(Button, {\n        primary: true\n      }, \"Submit\"))), __jsx(Grid.Column, {\n        width: 2\n      })));\n    }\n  }]);\n\n  return RegisterForm;\n}(Component);\n\nexport default RegisterForm;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/pages/user/register.js"],"names":["React","Component","Button","Form","Grid","Header","Image","Message","Segment","Input","GridColumn","Layout","Link","post","RegisterForm","address","pin","house","area","district","state","phone","name","first","middle","last","password","confirm_pass","email","aadhar","res","event","preventDefault","data","headers","text","status","console","log","margin","onSubmit","target","value","setState"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Input, GridColumn } from 'semantic-ui-react';\nimport Layout from '../../components/layout.js'\nimport { Link } from '../../routes';\nimport post from '../../localmodules/express_post';\n\n\nclass RegisterForm extends Component {\n\n    state = {\n        address : {\n            pin :'',\n            house:'',\n            area:'',\n            district:'',\n            state:'',\n            phone:''\n        },\n        name : {\n            first : '',\n            middle : '',\n            last : ''\n        },\n        password : '',\n        confirm_pass:'',\n        email : '',\n        aadhar : '',\n        res : ''\n    };\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        const {name, password, confirm_pass, email, address, aadhar} = this.state;\n        const data = {name, password, confirm_pass, email, address, aadhar};\n        const headers = { 'Content-Type':'application/json' };\n        const {text, status} = post('/user/register', headers, data);\n        if(status === 200){\n            console.log(text);\n            console.log('Successfully posted...');\n        }\n    }\n\n\n    render() {\n        console.log(this.state.res);\n        return (\n            <Layout>\n                <Grid verticalAlign='middle' >\n                    <Grid.Column width={2}></Grid.Column>\n                    <Grid.Column width={12}>\n                        <Header as='h2' color='blue' textAlign='center' style={{margin : '35px 35px'}}>\n                            {this.state.res}\n                        </Header>\n                        <Form onSubmit={this.onSubmit}>\n                            <Form.Group widths='equal'>\n                                <Form.Field>\n                                    <label>First Name</label>\n                                    <Input\n                                        placeholder = 'First Name'\n                                        value={this.state.name.first}\n                                        onChange={event => {\n                                            const name = { first: event.target.value };\n                                            this.setState({ name });\n                                        }}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Middle Name</label>\n                                    <Input\n                                        placeholder = 'Middle Name'\n                                        value={this.state.name.middle}\n                                        onChange={event => this.setState({name : { middle: event.target.value }})}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Last Name</label>\n                                    <Input\n                                        placeholder = 'Last Name'\n                                        value={this.state.name.last}\n                                        onChange={event => this.setState({ name : { last: event.target.value }})}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Field width={8}>\n                                    <label>House</label>\n                                    <Input\n                                        placeholder = 'House'\n                                        value={this.state.address.house}\n                                        onChange={event => this.setState({ address : { house : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                <Form.Field width={8}>\n                                    <label>Area</label>\n                                    <Input\n                                        placeholder = 'Area'\n                                        value={this.state.address.area}\n                                        onChange={event => this.setState({ address : { area : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                \n                            </Form.Group>\n\n                            <Form.Group>\n                                <Form.Field width={6}>\n                                    <label>District</label>\n                                    <Input\n                                        placeholder = 'District'\n                                        value={this.state.address.district}\n                                        onChange={event => this.setState({ address : { district : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                <Form.Field width={6}>\n                                    <label>State</label>\n                                    <Input\n                                        placeholder = 'State'\n                                        value={this.state.address.state}\n                                        onChange={event => this.setState({ address : { state : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                <Form.Field width={4}>\n                                    <label>Pin</label>\n                                    <Input\n                                        placeholder = 'Pin'\n                                        value={this.state.address.pin}\n                                        onChange={event => this.setState({ address : { pin : event.target.value }})}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n\n                            {/* <Form.Group>\n                                <Form.Field width={8}>\n                                    <label>House</label>\n                                    <Input\n                                        placeholder = 'House'\n                                        value={this.state.address.house}\n                                        onChange={event => this.setState({ address : { house : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                <Form.Field width={8}>\n                                    <label>Area</label>\n                                    <Input\n                                        placeholder = 'Area'\n                                        value={this.state.address.area}\n                                        onChange={event => this.setState({ address : { area : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                \n                            </Form.Group> */}\n\n                            <Form.Group widths='equal'>\n                                <Form.Field >\n                                    <label>Email</label>\n                                    <Input\n                                        placeholder = 'Email'\n                                        type = 'email'\n                                        value={this.state.email}\n                                        onChange={event => this.setState({ email : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Aadhar</label>\n                                    <Input\n                                        placeholder = 'Aadhar'\n                                        value={this.state.aadhar}\n                                        onChange={event => this.setState({ aadhar : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Phone</label>\n                                    <Input\n                                        placeholder = 'Phone'\n                                        value={this.state.address.phone}\n                                        onChange={event => this.setState({ address :{ phone : event.target.value }})}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n                            <Form.Group widths='equal'>\n                                <Form.Field >\n                                    <label>Password</label>\n                                    <Input\n                                        placeholder = 'Password'\n                                        type = 'password'\n                                        value={this.state.password}\n                                        onChange={event => this.setState({ password : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Confirm Password</label>\n                                    <Input\n                                        placeholder = 'Confirm Password'\n                                        type = 'password'\n                                        value={this.state.confirm_pass}\n                                        onChange={event => this.setState({ confirm_pass : event.target.value })}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n                            <Button primary>Submit</Button>\n                            \n                        </Form>\n                    </Grid.Column>\n                    <Grid.Column width={2}></Grid.Column>\n                </Grid>\n            </Layout>\n        );\n    }\n}\n\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}