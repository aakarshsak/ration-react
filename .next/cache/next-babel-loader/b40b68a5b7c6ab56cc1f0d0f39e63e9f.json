{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Input, GridColumn, Select } from 'semantic-ui-react';\nimport Layout from '../../components/layout.js';\nimport { Link, Router } from '../../routes';\nimport post from '../../localmodules/express_post';\nimport { getBlocksList, getCountryList, getStateList, matchCity, matchCountry, matchState, getCityList } from '../../localmodules/location/location_dropdown';\n\nclass RegisterForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      pin: '',\n      house: '',\n      area: '',\n      district: '',\n      state: '',\n      phone: '',\n      country: '',\n      first: '',\n      middle: '',\n      last: '',\n      password: '',\n      confirm_pass: '',\n      email: '',\n      ration: '',\n      gender: ''\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      const {\n        password,\n        confirm_pass,\n        email,\n        pin,\n        house,\n        area,\n        district,\n        state,\n        phone,\n        first,\n        middle,\n        last,\n        ration,\n        country\n      } = this.state;\n      const data = {\n        name: {\n          first,\n          middle,\n          last\n        },\n        password,\n        confirm_pass,\n        email,\n        address: {\n          house,\n          area,\n          district,\n          state,\n          pin,\n          phone,\n          country\n        },\n        ration,\n        gender\n      };\n      if (this.state.middle === '') delete data.name.middle;\n      const headers = {\n        'Content-Type': 'application/json'\n      };\n      console.log(data);\n      const {\n        text,\n        status\n      } = await post('/user/register', headers, data);\n      console.log(\"Status\", status);\n      console.log(text);\n\n      if (status === 200) {\n        console.log('Successfully posted...');\n        Router.pushRoute('/user/success');\n      }\n    });\n\n    _defineProperty(this, \"getGenderOption\", () => {\n      return [{\n        key: 'm',\n        value: 'Male',\n        text: 'Male'\n      }, {\n        key: 'f',\n        value: 'Female',\n        text: 'Female'\n      }];\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Grid, {\n      verticalAlign: \"middle\"\n    }, __jsx(Grid.Column, {\n      width: 2\n    }), __jsx(Grid.Column, {\n      width: 12\n    }, __jsx(Header, {\n      as: \"h2\",\n      color: \"blue\",\n      textAlign: \"center\",\n      style: {\n        margin: '35px 35px'\n      }\n    }, this.state.res), __jsx(Form, {\n      onSubmit: this.onSubmit\n    }, __jsx(Form.Group, {\n      widths: \"equal\"\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"First Name\"), __jsx(Input, {\n      type: \"text\",\n      placeholder: \"First Name\",\n      value: this.state.first,\n      onChange: event => this.setState({\n        first: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Middle Name\"), __jsx(Input, {\n      type: \"text\",\n      placeholder: \"Middle Name\",\n      value: this.state.middle,\n      onChange: event => this.setState({\n        middle: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Last Name\"), __jsx(Input, {\n      placeholder: \"Last Name\",\n      type: \"text\",\n      value: this.state.last,\n      onChange: event => this.setState({\n        last: event.target.value\n      })\n    }))), __jsx(Form.Group, {\n      widths: \"equal\"\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Country\"), __jsx(Select, {\n      placeholder: \"Country\",\n      options: getCountryList(),\n      defaultValue: this.state.country,\n      onChange: (event, data) => this.setState({\n        country: data.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"State\"), __jsx(Select, {\n      placeholder: \"State\",\n      options: getStateList(matchCountry('India').id.toString()),\n      defaultValue: this.state.state,\n      onChange: (event, data) => this.setState({\n        state: data.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"District\"), __jsx(Select, {\n      placeholder: \"District\",\n      options: getCityList(matchState(this.state.state, matchCountry('India').id.toString()).id),\n      defaultValue: this.state.district,\n      onChange: (event, data) => this.setState({\n        district: data.value\n      })\n    }))), __jsx(Form.Group, null, __jsx(Form.Field, null, __jsx(\"label\", null, \"Block\"), __jsx(Select, {\n      placeholder: \"Block\",\n      options: getBlocksList(),\n      defaultValue: this.state.area,\n      onChange: (event, data) => this.setState({\n        area: data.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"House\"), __jsx(Input, {\n      placeholder: \"House\",\n      type: \"text\",\n      value: this.state.house,\n      onChange: event => this.setState({\n        house: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Pin\"), __jsx(Input, {\n      type: \"number\",\n      placeholder: \"Pin\",\n      value: this.state.pin,\n      onChange: event => this.setState({\n        pin: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Gender\"), __jsx(Select, {\n      placeholder: \"Gender\",\n      options: this.getGenderOption(),\n      defaultValue: this.state.gender,\n      onChange: (event, data) => this.setState({\n        gender: data.value\n      })\n    }))), __jsx(Form.Group, {\n      widths: \"equal\"\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Email\"), __jsx(Input, {\n      placeholder: \"Email\",\n      type: \"email\",\n      value: this.state.email,\n      onChange: event => this.setState({\n        email: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Ration Card Number\"), __jsx(Input, {\n      placeholder: \"Ration Card Number\",\n      value: this.state.ration,\n      onChange: event => this.setState({\n        ration: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Phone\"), __jsx(Input, {\n      placeholder: \"Phone\",\n      value: this.state.phone,\n      onChange: event => this.setState({\n        phone: event.target.value\n      })\n    }))), __jsx(Form.Group, {\n      widths: \"equal\"\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Password\"), __jsx(Input, {\n      placeholder: \"Password\",\n      type: \"password\",\n      value: this.state.password,\n      onChange: event => this.setState({\n        password: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Confirm Password\"), __jsx(Input, {\n      placeholder: \"Confirm Password\",\n      type: \"password\",\n      value: this.state.confirm_pass,\n      onChange: event => this.setState({\n        confirm_pass: event.target.value\n      })\n    }))), __jsx(Button, {\n      primary: true\n    }, \"Submit\"))), __jsx(Grid.Column, {\n      width: 2\n    })));\n  }\n\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/pages/user/register.js"],"names":["React","Component","Button","Form","Grid","Header","Image","Message","Segment","Input","GridColumn","Select","Layout","Link","Router","post","getBlocksList","getCountryList","getStateList","matchCity","matchCountry","matchState","getCityList","RegisterForm","pin","house","area","district","state","phone","country","first","middle","last","password","confirm_pass","email","ration","gender","event","preventDefault","data","name","address","headers","console","log","text","status","pushRoute","key","value","render","margin","res","onSubmit","setState","target","id","toString","getGenderOption"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Input, GridColumn, Select } from 'semantic-ui-react';\nimport Layout from '../../components/layout.js'\nimport { Link, Router } from '../../routes';\nimport post from '../../localmodules/express_post'; \nimport { getBlocksList, getCountryList, getStateList, matchCity, matchCountry, matchState, getCityList }  from '../../localmodules/location/location_dropdown';\n\n\nclass RegisterForm extends Component {\n    state = {\n            pin :'',\n            house:'',\n            area:'',\n            district:'',\n            state:'',\n            phone:'',\n            country: '',\n\n            first : '',\n            middle : '',\n            last : '',\n\n\n        password : '',\n        confirm_pass:'',\n        email : '',\n        ration : '',\n        gender : ''\n    };\n\n    onSubmit = async (event) => {\n        event.preventDefault();\n        const {password, confirm_pass, email, pin, house, area, district, state, phone, first, middle, last, ration, country,} = this.state;\n\n        const data = {\n            name : { first, middle, last }, \n            password, \n            confirm_pass, \n            email, \n            address : { house, area, district, state, pin, phone, country }, \n            ration,\n            gender\n        };\n\n        if(this.state.middle === '')\n            delete data.name.middle;\n        const headers = { 'Content-Type':'application/json' };\n        console.log(data);\n        const { text, status } = await post('/user/register', headers, data);\n        console.log(\"Status\", status);\n        console.log(text);\n        if(status === 200){\n            console.log('Successfully posted...');\n            Router.pushRoute('/user/success');\n        }\n    }\n\n    getGenderOption = () => {\n        return ([\n            { key:'m', value:'Male', text:'Male' },\n            { key:'f', value:'Female', text:'Female'}\n        ]);\n    }\n\n    render() {\n        return (\n            <Layout>\n                <Grid verticalAlign='middle' >\n                    <Grid.Column width={2}></Grid.Column>\n                    <Grid.Column width={12}>\n                        <Header as='h2' color='blue' textAlign='center' style={{margin : '35px 35px'}}>\n                            {this.state.res}\n                        </Header>\n                        <Form onSubmit={this.onSubmit}>\n                            <Form.Group widths='equal'>\n                                <Form.Field>\n                                    <label>First Name</label>\n                                    <Input\n                                        type='text'\n                                        placeholder = 'First Name'\n                                        value={this.state.first}\n                                        onChange={event => this.setState({ first : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Middle Name</label>\n                                    <Input\n                                        type='text'\n                                        placeholder = 'Middle Name'\n                                        value={this.state.middle}\n                                        onChange={event => this.setState({middle: event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Last Name</label>\n                                    <Input\n                                        placeholder = 'Last Name'\n                                        type='text'\n                                        value={this.state.last}\n                                        onChange={event => this.setState({last: event.target.value })}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n\n                            <Form.Group widths='equal'>\n                                <Form.Field>\n                                    <label>Country</label>\n                                    <Select\n                                        placeholder = 'Country'\n                                        options = {getCountryList()}\n                                        defaultValue={this.state.country}\n                                        onChange={(event, data) => this.setState({country : data.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>State</label>\n                                    <Select\n                                        placeholder = 'State'\n                                        options = {getStateList(matchCountry('India').id.toString())}\n                                        defaultValue={this.state.state}\n                                        onChange={(event, data) => this.setState({state : data.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>District</label>\n                                    <Select\n                                        placeholder = 'District'\n                                        options = {getCityList(matchState(this.state.state, matchCountry('India').id.toString()).id)}\n                                        defaultValue={this.state.district}\n                                        onChange={(event, data) => this.setState({district : data.value })}\n                                    />\n                                </Form.Field>\n                                \n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Field>\n                                    <label>Block</label>\n                                    <Select\n                                        placeholder='Block'\n                                        options={getBlocksList()}\n                                        defaultValue={this.state.area}\n                                        onChange={(event, data) => this.setState({ area : data.value })}\n                                    />\n\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>House</label>\n                                    <Input\n                                        placeholder = 'House'\n                                        type='text'\n                                        value={this.state.house}\n                                        onChange={event => this.setState({house : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Pin</label>\n                                    <Input\n                                        type='number'\n                                        placeholder = 'Pin'\n                                        value={this.state.pin}\n                                        onChange={event => this.setState({ pin : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Gender</label>\n                                    <Select\n                                        placeholder='Gender'\n                                        options={this.getGenderOption()}\n                                        defaultValue={this.state.gender}\n                                        onChange={(event, data) => this.setState({ gender : data.value })}\n                                    />\n\n                                </Form.Field>\n                                \n                            </Form.Group>\n\n                            {/* <Form.Group>\n                                <Form.Field width={8}>\n                                    <label>House</label>\n                                    <Input\n                                        placeholder = 'House'\n                                        value={this.state.address.house}\n                                        onChange={event => this.setState({ address : { house : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                <Form.Field width={8}>\n                                    <label>Area</label>\n                                    <Input\n                                        placeholder = 'Area'\n                                        value={this.state.address.area}\n                                        onChange={event => this.setState({ address : { area : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                \n                            </Form.Group> */}\n\n                            <Form.Group widths='equal'>\n                                <Form.Field >\n                                    <label>Email</label>\n                                    <Input\n                                        placeholder = 'Email'\n                                        type = 'email'\n                                        value={this.state.email}\n                                        onChange={event => this.setState({ email : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Ration Card Number</label>\n                                    <Input\n                                        placeholder = 'Ration Card Number'\n                                        value={this.state.ration}\n                                        onChange={event => this.setState({ ration : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Phone</label>\n                                    <Input\n                                        placeholder = 'Phone'\n                                        value={this.state.phone}\n                                        onChange={event => this.setState({phone : event.target.value })}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n                            <Form.Group widths='equal'>\n                                <Form.Field >\n                                    <label>Password</label>\n                                    <Input\n                                        placeholder = 'Password'\n                                        type = 'password'\n                                        value={this.state.password}\n                                        onChange={event => this.setState({ password : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Confirm Password</label>\n                                    <Input\n                                        placeholder = 'Confirm Password'\n                                        type = 'password'\n                                        value={this.state.confirm_pass}\n                                        onChange={event => this.setState({ confirm_pass : event.target.value })}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n                            <Button primary>Submit</Button>\n                            \n                        </Form>\n                    </Grid.Column>\n                    <Grid.Column width={2}></Grid.Column>\n                </Grid>\n            </Layout>\n        );\n    }\n}\n\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}