{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../../components/layout';\nimport Shop from '../../ethereum/shop';\nimport { Card } from 'semantic-ui-react';\n\nclass ShopShow extends Component {\n  static async getInitialProps(props) {\n    const address = props.query.address;\n    console.log(address);\n    const s = Shop(address);\n    const details = await s.methods.getDetails().call();\n    console.log(details);\n    return {\n      managerName: details[0],\n      rice: details[1],\n      wheat: details[2],\n      arhad: details[3],\n      fpdName: details[4],\n      shopName: details[5],\n      manager: details[6],\n      addr: details[7]\n    };\n  }\n\n  renderCard() {\n    const items = [{\n      header: this.props.shopName,\n      description: 'SHOP NAME',\n      meta: 'This is the name of the shop.'\n    }, {\n      header: this.props.fpdName,\n      description: 'FDP NUMBER',\n      meta: 'This is the name of the shop.'\n    }, {\n      header: this.props.managerName,\n      description: 'MANAGER NAME',\n      meta: 'This is the name of the shop.'\n    }, {\n      header: this.props.addr,\n      description: 'SHOP ADDRESS',\n      meta: 'This is the name of the shop.'\n    }, {\n      header: this.props.rice,\n      description: 'RICE STOCK',\n      meta: 'This is the name of the shop.'\n    }, {\n      header: this.props.wheat,\n      description: 'WHEAT STOCK',\n      meta: 'This is the name of the shop.'\n    }, {\n      header: this.props.arhad,\n      description: 'ARHAD STOCK',\n      meta: 'This is the name of the shop.'\n    }];\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, this.renderCard());\n  }\n\n}\n\nexport default ShopShow;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/pages/shops/show.js"],"names":["React","Component","Layout","Shop","Card","ShopShow","getInitialProps","props","address","query","console","log","s","details","methods","getDetails","call","managerName","rice","wheat","arhad","fpdName","shopName","manager","addr","renderCard","items","header","description","meta","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAGA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAE7B,eAAaK,eAAb,CAA6BC,KAA7B,EAAoC;AAChC,UAAMC,OAAO,GAAGD,KAAK,CAACE,KAAN,CAAYD,OAA5B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,UAAMI,CAAC,GAAGT,IAAI,CAACK,OAAD,CAAd;AACA,UAAMK,OAAO,GAAG,MAAMD,CAAC,CAACE,OAAF,CAAUC,UAAV,GAAuBC,IAAvB,EAAtB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACA,WAAO;AACHI,MAAAA,WAAW,EAAGJ,OAAO,CAAC,CAAD,CADlB;AAEHK,MAAAA,IAAI,EAAGL,OAAO,CAAC,CAAD,CAFX;AAGHM,MAAAA,KAAK,EAAGN,OAAO,CAAC,CAAD,CAHZ;AAIHO,MAAAA,KAAK,EAAGP,OAAO,CAAC,CAAD,CAJZ;AAKHQ,MAAAA,OAAO,EAAGR,OAAO,CAAC,CAAD,CALd;AAMHS,MAAAA,QAAQ,EAAGT,OAAO,CAAC,CAAD,CANf;AAOHU,MAAAA,OAAO,EAAGV,OAAO,CAAC,CAAD,CAPd;AAQHW,MAAAA,IAAI,EAAGX,OAAO,CAAC,CAAD;AARX,KAAP;AAUH;;AAEDY,EAAAA,UAAU,GAAG;AACT,UAAMC,KAAK,GAAG,CACV;AACIC,MAAAA,MAAM,EAAG,KAAKpB,KAAL,CAAWe,QADxB;AAEIM,MAAAA,WAAW,EAAG,WAFlB;AAGIC,MAAAA,IAAI,EAAG;AAHX,KADU,EAMV;AACIF,MAAAA,MAAM,EAAG,KAAKpB,KAAL,CAAWc,OADxB;AAEIO,MAAAA,WAAW,EAAG,YAFlB;AAGIC,MAAAA,IAAI,EAAG;AAHX,KANU,EAWV;AACIF,MAAAA,MAAM,EAAG,KAAKpB,KAAL,CAAWU,WADxB;AAEIW,MAAAA,WAAW,EAAG,cAFlB;AAGIC,MAAAA,IAAI,EAAG;AAHX,KAXU,EAgBV;AACIF,MAAAA,MAAM,EAAG,KAAKpB,KAAL,CAAWiB,IADxB;AAEII,MAAAA,WAAW,EAAG,cAFlB;AAGIC,MAAAA,IAAI,EAAG;AAHX,KAhBU,EAqBV;AACIF,MAAAA,MAAM,EAAG,KAAKpB,KAAL,CAAWW,IADxB;AAEIU,MAAAA,WAAW,EAAG,YAFlB;AAGIC,MAAAA,IAAI,EAAG;AAHX,KArBU,EA0BV;AACIF,MAAAA,MAAM,EAAG,KAAKpB,KAAL,CAAWY,KADxB;AAEIS,MAAAA,WAAW,EAAG,aAFlB;AAGIC,MAAAA,IAAI,EAAG;AAHX,KA1BU,EA+BV;AACIF,MAAAA,MAAM,EAAG,KAAKpB,KAAL,CAAWa,KADxB;AAEIQ,MAAAA,WAAW,EAAG,aAFlB;AAGIC,MAAAA,IAAI,EAAG;AAHX,KA/BU,CAAd;AAsCA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAIH;AAArB,MAAP;AACH;;AAGDI,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,MAAD,QACK,KAAKL,UAAL,EADL,CADJ;AAKH;;AArE4B;;AAyEjC,eAAepB,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../../components/layout';\nimport Shop from '../../ethereum/shop';\nimport { Card } from 'semantic-ui-react';\n\n\nclass ShopShow extends Component {\n\n    static async getInitialProps(props) {\n        const address = props.query.address;\n        console.log(address);\n        const s = Shop(address);\n        const details = await s.methods.getDetails().call();\n        console.log(details);\n        return { \n            managerName : details[0],\n            rice : details[1],\n            wheat : details[2],\n            arhad : details[3],\n            fpdName : details[4],\n            shopName : details[5],\n            manager : details[6],\n            addr : details[7]\n        };\n    }\n\n    renderCard() {\n        const items = [\n            {\n                header : this.props.shopName,\n                description : 'SHOP NAME',\n                meta : 'This is the name of the shop.'\n            },\n            {\n                header : this.props.fpdName,\n                description : 'FDP NUMBER',\n                meta : 'This is the name of the shop.'\n            },\n            {\n                header : this.props.managerName,\n                description : 'MANAGER NAME',\n                meta : 'This is the name of the shop.'\n            },\n            {\n                header : this.props.addr,\n                description : 'SHOP ADDRESS',\n                meta : 'This is the name of the shop.'\n            },\n            {\n                header : this.props.rice,\n                description : 'RICE STOCK',\n                meta : 'This is the name of the shop.'\n            },\n            {\n                header : this.props.wheat,\n                description : 'WHEAT STOCK',\n                meta : 'This is the name of the shop.'\n            },\n            {\n                header : this.props.arhad,\n                description : 'ARHAD STOCK',\n                meta : 'This is the name of the shop.'\n            },\n        ];\n\n        return <Card.Group items = {items} />;\n    }\n\n\n    render() {\n        return (\n            <Layout>\n                {this.renderCard()}\n            </Layout>\n        );\n    }\n}\n\n\nexport default ShopShow;"]},"metadata":{},"sourceType":"module"}