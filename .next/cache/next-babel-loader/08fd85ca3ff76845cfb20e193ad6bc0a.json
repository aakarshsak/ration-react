{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../../components/layout';\nimport Shop from '../../ethereum/shop';\nimport { Card, Table, Grid, Button } from 'semantic-ui-react';\nimport { Link, Router } from '../../routes';\nimport validate from '../../localmodules/token_validate';\n\nclass ShopShow extends Component {\n  static async getInitialProps(props) {\n    const {\n      headerToken,\n      loggedIn\n    } = validate(props.query.headerToken);\n    const address = props.query.address;\n    const s = Shop(address);\n    const details = await s.methods.getDetails().call();\n    const blockName = await s.methods.blockName().call();\n    return {\n      managerName: details[0],\n      items: [{\n        quantity: details[1],\n        name: 'Rice'\n      }, {\n        quantity: details[2],\n        name: 'Wheat'\n      }, {\n        quantity: details[3],\n        name: 'Arhad'\n      }, {\n        quantity: details[4],\n        name: 'Kerosene'\n      }],\n      fpdName: details[5],\n      shopName: details[6],\n      manager: details[7],\n      addr: details[8],\n      currentAddress: address,\n      headerToken,\n      loggedIn\n    };\n  }\n\n  renderTable() {\n    const tableRows = this.props.items.map(item => {\n      return __jsx(Table.Row, null, __jsx(Table.Cell, null, item.name), __jsx(Table.Cell, null, item.quantity), __jsx(Table.Cell, null, 10));\n    });\n    return __jsx(\"div\", null, __jsx(\"h3\", null, __jsx(\"strong\", null, \"STOCK STATEMENT\")), __jsx(Table, null, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, null, \"Item Name\"), __jsx(Table.HeaderCell, null, \"Stock\"), __jsx(Table.HeaderCell, null, \"Price(per KG)\"))), __jsx(Table.Body, null, tableRows)));\n  }\n\n  renderCard() {\n    const items = [{\n      header: this.props.shopName,\n      description: 'SHOP NAME',\n      meta: 'This is the name of the shop.'\n    }, {\n      header: this.props.fpdName,\n      description: 'FDP NUMBER',\n      meta: 'This is the name of the shop.'\n    }, {\n      header: this.props.managerName,\n      description: 'MANAGER NAME',\n      meta: 'This is the name of the shop.'\n    }];\n    const desc = [{\n      header: this.props.addr,\n      description: 'SHOP ADDRESS',\n      meta: 'This is the name of the shop.',\n      fluid: true\n    }];\n    return __jsx(\"div\", null, __jsx(Card.Group, {\n      items: items,\n      itemsPerRow: 3\n    }), __jsx(Card.Group, {\n      items: desc\n    }));\n  }\n\n  renderButton() {\n    return __jsx(Link, {\n      route: `/shops/${this.props.currentAddress}/payment`\n    }, __jsx(\"a\", null, __jsx(Button, {\n      color: \"blue\"\n    }, \"Make Payment\")));\n  }\n\n  render() {\n    return __jsx(Layout, {\n      headerToken: this.props.headerToken,\n      loggedIn: this.props.loggedIn\n    }, __jsx(Grid, {\n      style: {\n        color: '#2185D0'\n      },\n      columns: 1\n    }, __jsx(Grid.Row, null, __jsx(Grid.Column, null, this.renderCard())), __jsx(Grid.Row, {\n      textAlign: \"center\"\n    }, __jsx(Grid.Column, null, this.renderTable())), __jsx(Grid.Row, {\n      textAlign: \"center\"\n    }, __jsx(Grid.Column, null, this.renderButton()))));\n  }\n\n}\n\nexport default ShopShow;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/pages/shops/show.js"],"names":["React","Component","Layout","Shop","Card","Table","Grid","Button","Link","Router","validate","ShopShow","getInitialProps","props","headerToken","loggedIn","query","address","s","details","methods","getDetails","call","blockName","managerName","items","quantity","name","fpdName","shopName","manager","addr","currentAddress","renderTable","tableRows","map","item","renderCard","header","description","meta","desc","fluid","renderButton","render","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../../components/layout';\nimport Shop from '../../ethereum/shop';\nimport { Card, Table, Grid, Button } from 'semantic-ui-react';\nimport {  Link, Router } from '../../routes';\nimport validate from '../../localmodules/token_validate';\n\n\nclass ShopShow extends Component {\n\n    static async getInitialProps(props) {\n        const { headerToken, loggedIn } = validate(props.query.headerToken);\n        const address = props.query.address;\n        const s = Shop(address);\n        const details = await s.methods.getDetails().call();\n        const blockName = await s.methods.blockName().call();\n        return { \n            managerName : details[0],\n            items : [{quantity : details[1], name : 'Rice'},\n                    {quantity: details[2], name : 'Wheat'},\n                    {quantity : details[3], name : 'Arhad'},\n                    {quantity : details[4], name : 'Kerosene'}],\n            fpdName : details[5],\n            shopName : details[6],\n            manager : details[7],\n            addr : details[8],\n            currentAddress : address,\n            headerToken,\n            loggedIn\n        };\n    }\n\n    renderTable() {\n        const tableRows = this.props.items.map(item => {\n            return (\n                <Table.Row>\n                    <Table.Cell>{item.name}</Table.Cell>\n                    <Table.Cell>{item.quantity}</Table.Cell>\n                    <Table.Cell>{10}</Table.Cell>\n                </Table.Row>\n            );\n        });\n        return (\n            <div>\n                <h3><strong>STOCK STATEMENT</strong></h3>\n                <Table>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Item Name</Table.HeaderCell>\n                            <Table.HeaderCell>Stock</Table.HeaderCell>\n                            <Table.HeaderCell>Price(per KG)</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {tableRows}\n                    </Table.Body>\n                </Table>\n            </div>\n        );\n    }\n\n    renderCard() {\n        const items = [\n            {\n                header : this.props.shopName,\n                description : 'SHOP NAME',\n                meta : 'This is the name of the shop.'\n            },\n            {\n                header : this.props.fpdName,\n                description : 'FDP NUMBER',\n                meta : 'This is the name of the shop.'\n            },\n            {\n                header : this.props.managerName,\n                description : 'MANAGER NAME',\n                meta : 'This is the name of the shop.'\n            }\n        ];\n        const desc = [\n            {       \n                header : this.props.addr,\n                description : 'SHOP ADDRESS',\n                meta : 'This is the name of the shop.',\n                fluid : true\n            }\n        ];\n\n        return (\n            <div>\n                <Card.Group items = {items} itemsPerRow = {3}/>\n                <Card.Group items = {desc}/>\n            </div>\n        );\n    }\n\n    renderButton(){\n        return (\n            <Link route={`/shops/${this.props.currentAddress}/payment`}>\n                <a>\n                    <Button color='blue'>\n                     Make Payment\n                    </Button>\n                </a>\n            </Link>\n        );\n    }\n\n\n    render() {\n        return (\n            <Layout headerToken={this.props.headerToken} loggedIn={this.props.loggedIn}>\n                <Grid style={{color:'#2185D0'}} columns={1}>\n                    <Grid.Row>\n                        <Grid.Column>\n                            {this.renderCard()}\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row textAlign='center'>\n                        <Grid.Column>\n                            {this.renderTable()}\n                        </Grid.Column>  \n                    </Grid.Row>\n                    <Grid.Row textAlign='center'>\n                        <Grid.Column>\n                            {this.renderButton()}\n                        </Grid.Column>  \n                    </Grid.Row>\n                </Grid>\n            </Layout>\n        );\n    }\n}\n\n\nexport default ShopShow;"]},"metadata":{},"sourceType":"module"}