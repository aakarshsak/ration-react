{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime-corejs2/regenerator\");\n\nvar Web3 = require('web3');\n\nvar func = function func() {\n  var _web, provider, _web2;\n\n  return _regeneratorRuntime.async(function func$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(true && typeof window.web3 !== 'undefined')) {\n            _context.next = 16;\n            break;\n          }\n\n          // We are in the browser and metamask is running.\n          console.log(' We are in the browser and metamask is running.');\n          _web = new Web3(window.web3.currentProvider);\n          console.log(ethereum);\n          _context.prev = 4;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(ethereum.enable());\n\n        case 7:\n          _context.next = 12;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](4);\n          console.log(_context.t0);\n\n        case 12:\n          console.log(_web);\n          return _context.abrupt(\"return\", _web);\n\n        case 16:\n          // We are on the server *OR* the user is not running metamask\n          console.log('We are on the server *OR* the user is not running metamask');\n          provider = new Web3.providers.HttpProvider('https://rinkeby.infura.io/v3/42d235c7d6304509a63bec8b043c9bc2');\n          _web2 = new Web3(provider);\n          console.log(_web2);\n          return _context.abrupt(\"return\", _web2);\n\n        case 21:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[4, 9]]);\n};\n\nvar web3 = func();\nmodule.exports = web3;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/ethereum/web3.js"],"names":["Web3","require","func","window","web3","console","log","currentProvider","ethereum","enable","provider","providers","HttpProvider","module","exports"],"mappings":";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gBACP,QAAiC,OAAOC,MAAM,CAACC,IAAd,KAAuB,WADjD;AAAA;AAAA;AAAA;;AAET;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ;AACMF,UAAAA,IAJG,GAII,IAAIJ,IAAJ,CAASG,MAAM,CAACC,IAAP,CAAYG,eAArB,CAJJ;AAKTF,UAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AALS;AAAA;AAAA,2CAODA,QAAQ,CAACC,MAAT,EAPC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AASPJ,UAAAA,OAAO,CAACC,GAAR;;AATO;AAWTD,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAXS,2CAYFA,IAZE;;AAAA;AAcT;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,4DAAZ;AACMI,UAAAA,QAhBG,GAgBQ,IAAIV,IAAI,CAACW,SAAL,CAAeC,YAAnB,CACf,+DADe,CAhBR;AAmBHR,UAAAA,KAnBG,GAmBI,IAAIJ,IAAJ,CAASU,QAAT,CAnBJ;AAoBTL,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AApBS,2CAqBFA,KArBE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAb;;AA0BA,IAAIA,IAAI,GAAGF,IAAI,EAAf;AACAW,MAAM,CAACC,OAAP,GAAiBV,IAAjB","sourcesContent":["const Web3 = require('web3');\n\nconst func = async () => {\n  if (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n    // We are in the browser and metamask is running.\n    console.log(' We are in the browser and metamask is running.');\n    const web3 = new Web3(window.web3.currentProvider);\n    console.log(ethereum);\n    try {\n      await ethereum.enable();\n    } catch(e) {\n      console.log(e);\n    }\n    console.log(web3);\n    return web3;\n  } else {\n    // We are on the server *OR* the user is not running metamask\n    console.log('We are on the server *OR* the user is not running metamask')\n    const provider = new Web3.providers.HttpProvider(\n      'https://rinkeby.infura.io/v3/42d235c7d6304509a63bec8b043c9bc2'\n    );\n    const web3 = new Web3(provider);\n    console.log(web3);\n    return web3;\n  }\n}\n\n\nlet web3 = func();\nmodule.exports = web3;"]},"metadata":{},"sourceType":"script"}