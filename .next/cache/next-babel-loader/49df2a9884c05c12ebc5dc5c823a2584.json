{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Input, GridColumn } from 'semantic-ui-react';\nimport Layout from '../../components/layout.js';\nimport { Link } from '../../routes';\n\nvar RegisterForm = /*#__PURE__*/function (_Component) {\n  _inherits(RegisterForm, _Component);\n\n  function RegisterForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegisterForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegisterForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      address: {\n        pin: '',\n        house: '',\n        area: '',\n        district: '',\n        state: ''\n      },\n      name: {\n        firstName: '',\n        middleName: '',\n        lastName: ''\n      },\n      email: '',\n      aadhar: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function (event) {\n      event.preventDefault();\n    });\n\n    return _this;\n  }\n\n  _createClass(RegisterForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(Grid, {\n        verticalAlign: \"middle\"\n      }, __jsx(Grid.Column, {\n        width: 2\n      }), __jsx(Grid.Column, {\n        width: 12\n      }, __jsx(Header, {\n        as: \"h2\",\n        color: \"blue\",\n        textAlign: \"center\",\n        style: {\n          margin: '35px 35px'\n        }\n      }, \"Register a new account\"), __jsx(Form, {\n        onSubmit: this.onSubmit\n      }, __jsx(Form.Group, {\n        widths: \"equal\"\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"First Name\"), __jsx(Input, {\n        placeholder: \"First Name\",\n        value: this.state.name.firstName,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            name: {\n              firstName: event.target.value\n            }\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Middle Name\"), __jsx(Input, {\n        placeholder: \"Middle Name\",\n        value: this.state.name.middleName,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            name: {\n              middleName: event.target.value\n            }\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Last Name\"), __jsx(Input, {\n        placeholder: \"Last Name\",\n        value: this.state.name.lastName,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            name: {\n              lastName: event.target.value\n            }\n          });\n        }\n      }))), __jsx(Form.Group, null, __jsx(Form.Field, {\n        width: 8\n      }, __jsx(\"label\", null, \"House\"), __jsx(Input, {\n        placeholder: \"House\",\n        value: this.state.address.house,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            address: {\n              house: event.target.value\n            }\n          });\n        }\n      })), __jsx(Form.Field, {\n        width: 8\n      }, __jsx(\"label\", null, \"Area\"), __jsx(Input, {\n        placeholder: \"Area\",\n        value: this.state.address.area,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            address: {\n              area: event.target.value\n            }\n          });\n        }\n      }))), __jsx(Form.Group, null, __jsx(Form.Field, {\n        width: 6\n      }, __jsx(\"label\", null, \"District\"), __jsx(Input, {\n        placeholder: \"District\",\n        value: this.state.address.district,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            address: {\n              district: event.target.value\n            }\n          });\n        }\n      })), __jsx(Form.Field, {\n        width: 6\n      }, __jsx(\"label\", null, \"State\"), __jsx(Input, {\n        placeholder: \"State\",\n        value: this.state.address.state,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            address: {\n              state: event.target.value\n            }\n          });\n        }\n      })), __jsx(Form.Field, {\n        width: 4\n      }, __jsx(\"label\", null, \"Pin\"), __jsx(Input, {\n        placeholder: \"Pin\",\n        value: this.state.address.pin,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            address: {\n              pin: event.target.value\n            }\n          });\n        }\n      }))), __jsx(Form.Group, null, __jsx(Form.Field, {\n        width: 8\n      }, __jsx(\"label\", null, \"House\"), __jsx(Input, {\n        placeholder: \"House\",\n        value: this.state.address.house,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            address: {\n              house: event.target.value\n            }\n          });\n        }\n      })), __jsx(Form.Field, {\n        width: 8\n      }, __jsx(\"label\", null, \"Area\"), __jsx(Input, {\n        placeholder: \"Area\",\n        value: this.state.address.area,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            address: {\n              area: event.target.value\n            }\n          });\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\"\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Email\"), __jsx(Input, {\n        placeholder: \"Email\",\n        type: \"email\",\n        value: this.state.address.email,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            email: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Aadhar\"), __jsx(Input, {\n        placeholder: \"Aadhar\",\n        value: this.state.address.aadhar,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            aadhar: event.target.value\n          });\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\"\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Password\"), __jsx(Input, {\n        placeholder: \"Password\",\n        type: \"password\",\n        value: this.state.address.password,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            password: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Confirm Password\"), __jsx(Input, {\n        placeholder: \"Confirm Password\",\n        type: \"password\",\n        value: this.state.address.confirmPassword,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            confirmPassword: event.target.value\n          });\n        }\n      }))), __jsx(Button, {\n        primary: true\n      }, \"Submit\"))), __jsx(Grid.Column, {\n        width: 2\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      var res;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:7800/registration_page'));\n\n            case 2:\n              res = _context.sent;\n              console.log(res);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return RegisterForm;\n}(Component);\n\nexport default RegisterForm;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/pages/user/register.js"],"names":["React","Component","Button","Form","Grid","Header","Image","Message","Segment","Input","GridColumn","Layout","Link","RegisterForm","address","pin","house","area","district","state","name","firstName","middleName","lastName","email","aadhar","event","preventDefault","margin","onSubmit","setState","target","value","password","confirmPassword","fetch","res","console","log"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqCC,KAArC,EAA4CC,OAA5C,EAAqDC,OAArD,EAA8DC,KAA9D,EAAqEC,UAArE,QAAuF,mBAAvF;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,IAAT,QAAqB,cAArB;;IAGMC,Y;;;;;;;;;;;;;;;;4DAEM;AACJC,MAAAA,OAAO,EAAG;AACNC,QAAAA,GAAG,EAAE,EADC;AAENC,QAAAA,KAAK,EAAC,EAFA;AAGNC,QAAAA,IAAI,EAAC,EAHC;AAINC,QAAAA,QAAQ,EAAC,EAJH;AAKNC,QAAAA,KAAK,EAAC;AALA,OADN;AAQJC,MAAAA,IAAI,EAAG;AACHC,QAAAA,SAAS,EAAG,EADT;AAEHC,QAAAA,UAAU,EAAG,EAFV;AAGHC,QAAAA,QAAQ,EAAG;AAHR,OARH;AAaJC,MAAAA,KAAK,EAAG,EAbJ;AAcJC,MAAAA,MAAM,EAAG;AAdL,K;;+DAuBG,UAACC,KAAD,EAAW;AAClBA,MAAAA,KAAK,CAACC,cAAN;AACH,K;;;;;;;6BAGQ;AAAA;;AACL,aACI,MAAC,MAAD,QACI,MAAC,IAAD;AAAM,QAAA,aAAa,EAAC;AAApB,SACI,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAApB,QADJ,EAEI,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAApB,SACI,MAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,KAAK,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAC,QAAvC;AAAgD,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAG;AAAV;AAAvD,kCADJ,EAII,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKC;AAArB,SACI,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,MAAM,EAAC;AAAnB,SACI,MAAC,IAAD,CAAM,KAAN,QACI,kCADJ,EAEI,MAAC,KAAD;AACI,QAAA,WAAW,EAAG,YADlB;AAEI,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,IAAX,CAAgBC,SAF3B;AAGI,QAAA,QAAQ,EAAE,kBAAAK,KAAK;AAAA,iBAAI,MAAI,CAACI,QAAL,CAAc;AAAEV,YAAAA,IAAI,EAAE;AAAEC,cAAAA,SAAS,EAAEK,KAAK,CAACK,MAAN,CAAaC;AAA1B;AAAR,WAAd,CAAJ;AAAA;AAHnB,QAFJ,CADJ,EASI,MAAC,IAAD,CAAM,KAAN,QACI,mCADJ,EAEI,MAAC,KAAD;AACI,QAAA,WAAW,EAAG,aADlB;AAEI,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC,IAAX,CAAgBE,UAF3B;AAGI,QAAA,QAAQ,EAAE,kBAAAI,KAAK;AAAA,iBAAI,MAAI,CAACI,QAAL,CAAc;AAACV,YAAAA,IAAI,EAAG;AAAEE,cAAAA,UAAU,EAAEI,KAAK,CAACK,MAAN,CAAaC;AAA3B;AAAR,WAAd,CAAJ;AAAA;AAHnB,QAFJ,CATJ,EAiBI,MAAC,IAAD,CAAM,KAAN,QACI,iCADJ,EAEI,MAAC,KAAD;AACI,QAAA,WAAW,EAAG,WADlB;AAEI,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC,IAAX,CAAgBG,QAF3B;AAGI,QAAA,QAAQ,EAAE,kBAAAG,KAAK;AAAA,iBAAI,MAAI,CAACI,QAAL,CAAc;AAAEV,YAAAA,IAAI,EAAG;AAAEG,cAAAA,QAAQ,EAAEG,KAAK,CAACK,MAAN,CAAaC;AAAzB;AAAT,WAAd,CAAJ;AAAA;AAHnB,QAFJ,CAjBJ,CADJ,EA2BI,MAAC,IAAD,CAAM,KAAN,QACI,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAE;AAAnB,SACI,6BADJ,EAEI,MAAC,KAAD;AACI,QAAA,WAAW,EAAG,OADlB;AAEI,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWL,OAAX,CAAmBE,KAF9B;AAGI,QAAA,QAAQ,EAAE,kBAAAU,KAAK;AAAA,iBAAI,MAAI,CAACI,QAAL,CAAc;AAAEhB,YAAAA,OAAO,EAAG;AAAEE,cAAAA,KAAK,EAAGU,KAAK,CAACK,MAAN,CAAaC;AAAvB;AAAZ,WAAd,CAAJ;AAAA;AAHnB,QAFJ,CADJ,EASI,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAE;AAAnB,SACI,4BADJ,EAEI,MAAC,KAAD;AACI,QAAA,WAAW,EAAG,MADlB;AAEI,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWL,OAAX,CAAmBG,IAF9B;AAGI,QAAA,QAAQ,EAAE,kBAAAS,KAAK;AAAA,iBAAI,MAAI,CAACI,QAAL,CAAc;AAAEhB,YAAAA,OAAO,EAAG;AAAEG,cAAAA,IAAI,EAAGS,KAAK,CAACK,MAAN,CAAaC;AAAtB;AAAZ,WAAd,CAAJ;AAAA;AAHnB,QAFJ,CATJ,CA3BJ,EA+CI,MAAC,IAAD,CAAM,KAAN,QACI,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAE;AAAnB,SACI,gCADJ,EAEI,MAAC,KAAD;AACI,QAAA,WAAW,EAAG,UADlB;AAEI,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWL,OAAX,CAAmBI,QAF9B;AAGI,QAAA,QAAQ,EAAE,kBAAAQ,KAAK;AAAA,iBAAI,MAAI,CAACI,QAAL,CAAc;AAAEhB,YAAAA,OAAO,EAAG;AAAEI,cAAAA,QAAQ,EAAGQ,KAAK,CAACK,MAAN,CAAaC;AAA1B;AAAZ,WAAd,CAAJ;AAAA;AAHnB,QAFJ,CADJ,EASI,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAE;AAAnB,SACI,6BADJ,EAEI,MAAC,KAAD;AACI,QAAA,WAAW,EAAG,OADlB;AAEI,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWL,OAAX,CAAmBK,KAF9B;AAGI,QAAA,QAAQ,EAAE,kBAAAO,KAAK;AAAA,iBAAI,MAAI,CAACI,QAAL,CAAc;AAAEhB,YAAAA,OAAO,EAAG;AAAEK,cAAAA,KAAK,EAAGO,KAAK,CAACK,MAAN,CAAaC;AAAvB;AAAZ,WAAd,CAAJ;AAAA;AAHnB,QAFJ,CATJ,EAiBI,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAE;AAAnB,SACI,2BADJ,EAEI,MAAC,KAAD;AACI,QAAA,WAAW,EAAG,KADlB;AAEI,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWL,OAAX,CAAmBC,GAF9B;AAGI,QAAA,QAAQ,EAAE,kBAAAW,KAAK;AAAA,iBAAI,MAAI,CAACI,QAAL,CAAc;AAAEhB,YAAAA,OAAO,EAAG;AAAEC,cAAAA,GAAG,EAAGW,KAAK,CAACK,MAAN,CAAaC;AAArB;AAAZ,WAAd,CAAJ;AAAA;AAHnB,QAFJ,CAjBJ,CA/CJ,EA0EI,MAAC,IAAD,CAAM,KAAN,QACI,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAE;AAAnB,SACI,6BADJ,EAEI,MAAC,KAAD;AACI,QAAA,WAAW,EAAG,OADlB;AAEI,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWL,OAAX,CAAmBE,KAF9B;AAGI,QAAA,QAAQ,EAAE,kBAAAU,KAAK;AAAA,iBAAI,MAAI,CAACI,QAAL,CAAc;AAAEhB,YAAAA,OAAO,EAAG;AAAEE,cAAAA,KAAK,EAAGU,KAAK,CAACK,MAAN,CAAaC;AAAvB;AAAZ,WAAd,CAAJ;AAAA;AAHnB,QAFJ,CADJ,EASI,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAE;AAAnB,SACI,4BADJ,EAEI,MAAC,KAAD;AACI,QAAA,WAAW,EAAG,MADlB;AAEI,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWL,OAAX,CAAmBG,IAF9B;AAGI,QAAA,QAAQ,EAAE,kBAAAS,KAAK;AAAA,iBAAI,MAAI,CAACI,QAAL,CAAc;AAAEhB,YAAAA,OAAO,EAAG;AAAEG,cAAAA,IAAI,EAAGS,KAAK,CAACK,MAAN,CAAaC;AAAtB;AAAZ,WAAd,CAAJ;AAAA;AAHnB,QAFJ,CATJ,CA1EJ,EA8FI,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,MAAM,EAAC;AAAnB,SACI,MAAC,IAAD,CAAM,KAAN,QACI,6BADJ,EAEI,MAAC,KAAD;AACI,QAAA,WAAW,EAAG,OADlB;AAEI,QAAA,IAAI,EAAG,OAFX;AAGI,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWL,OAAX,CAAmBU,KAH9B;AAII,QAAA,QAAQ,EAAE,kBAAAE,KAAK;AAAA,iBAAI,MAAI,CAACI,QAAL,CAAc;AAAEN,YAAAA,KAAK,EAAGE,KAAK,CAACK,MAAN,CAAaC;AAAvB,WAAd,CAAJ;AAAA;AAJnB,QAFJ,CADJ,EAUI,MAAC,IAAD,CAAM,KAAN,QACI,8BADJ,EAEI,MAAC,KAAD;AACI,QAAA,WAAW,EAAG,QADlB;AAEI,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWL,OAAX,CAAmBW,MAF9B;AAGI,QAAA,QAAQ,EAAE,kBAAAC,KAAK;AAAA,iBAAI,MAAI,CAACI,QAAL,CAAc;AAAEL,YAAAA,MAAM,EAAGC,KAAK,CAACK,MAAN,CAAaC;AAAxB,WAAd,CAAJ;AAAA;AAHnB,QAFJ,CAVJ,CA9FJ,EAiHI,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,MAAM,EAAC;AAAnB,SACI,MAAC,IAAD,CAAM,KAAN,QACI,gCADJ,EAEI,MAAC,KAAD;AACI,QAAA,WAAW,EAAG,UADlB;AAEI,QAAA,IAAI,EAAG,UAFX;AAGI,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWL,OAAX,CAAmBmB,QAH9B;AAII,QAAA,QAAQ,EAAE,kBAAAP,KAAK;AAAA,iBAAI,MAAI,CAACI,QAAL,CAAc;AAAEG,YAAAA,QAAQ,EAAGP,KAAK,CAACK,MAAN,CAAaC;AAA1B,WAAd,CAAJ;AAAA;AAJnB,QAFJ,CADJ,EAUI,MAAC,IAAD,CAAM,KAAN,QACI,wCADJ,EAEI,MAAC,KAAD;AACI,QAAA,WAAW,EAAG,kBADlB;AAEI,QAAA,IAAI,EAAG,UAFX;AAGI,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWL,OAAX,CAAmBoB,eAH9B;AAII,QAAA,QAAQ,EAAE,kBAAAR,KAAK;AAAA,iBAAI,MAAI,CAACI,QAAL,CAAc;AAAEI,YAAAA,eAAe,EAAGR,KAAK,CAACK,MAAN,CAAaC;AAAjC,WAAd,CAAJ;AAAA;AAJnB,QAFJ,CAVJ,CAjHJ,EAqII,MAAC,MAAD;AAAQ,QAAA,OAAO;AAAf,kBArIJ,CAJJ,CAFJ,EA+II,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAApB,QA/IJ,CADJ,CADJ;AAqJH;;;;;;;;;;+CAhKqBG,KAAK,CAAC,yCAAD,C;;;AAAjBC,cAAAA,G;AACNC,cAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;;;;;;;;;;;EArBmBnC,S;;AAuL3B,eAAeY,YAAf","sourcesContent":["import React, {Component} from 'react';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Input, GridColumn } from 'semantic-ui-react';\nimport Layout from '../../components/layout.js'\nimport { Link } from '../../routes';\n\n\nclass RegisterForm extends Component {\n\n    state = {\n        address : {\n            pin :'',\n            house:'',\n            area:'',\n            district:'',\n            state:'',\n        },\n        name : {\n            firstName : '',\n            middleName : '',\n            lastName : ''\n        },\n        email : '',\n        aadhar : ''\n    };\n\n    static async getInitialProps(){\n        const res = await fetch('http://localhost:7800/registration_page');\n        console.log(res);\n\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n    }\n\n\n    render() {\n        return (\n            <Layout>\n                <Grid verticalAlign='middle' >\n                    <Grid.Column width={2}></Grid.Column>\n                    <Grid.Column width={12}>\n                        <Header as='h2' color='blue' textAlign='center' style={{margin : '35px 35px'}}>\n                            Register a new account\n                        </Header>\n                        <Form onSubmit={this.onSubmit}>\n                            <Form.Group widths='equal'>\n                                <Form.Field>\n                                    <label>First Name</label>\n                                    <Input\n                                        placeholder = 'First Name'\n                                        value={this.state.name.firstName}\n                                        onChange={event => this.setState({ name: { firstName: event.target.value }})}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Middle Name</label>\n                                    <Input\n                                        placeholder = 'Middle Name'\n                                        value={this.state.name.middleName}\n                                        onChange={event => this.setState({name : { middleName: event.target.value }})}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Last Name</label>\n                                    <Input\n                                        placeholder = 'Last Name'\n                                        value={this.state.name.lastName}\n                                        onChange={event => this.setState({ name : { lastName: event.target.value }})}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Field width={8}>\n                                    <label>House</label>\n                                    <Input\n                                        placeholder = 'House'\n                                        value={this.state.address.house}\n                                        onChange={event => this.setState({ address : { house : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                <Form.Field width={8}>\n                                    <label>Area</label>\n                                    <Input\n                                        placeholder = 'Area'\n                                        value={this.state.address.area}\n                                        onChange={event => this.setState({ address : { area : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                \n                            </Form.Group>\n\n                            <Form.Group>\n                                <Form.Field width={6}>\n                                    <label>District</label>\n                                    <Input\n                                        placeholder = 'District'\n                                        value={this.state.address.district}\n                                        onChange={event => this.setState({ address : { district : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                <Form.Field width={6}>\n                                    <label>State</label>\n                                    <Input\n                                        placeholder = 'State'\n                                        value={this.state.address.state}\n                                        onChange={event => this.setState({ address : { state : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                <Form.Field width={4}>\n                                    <label>Pin</label>\n                                    <Input\n                                        placeholder = 'Pin'\n                                        value={this.state.address.pin}\n                                        onChange={event => this.setState({ address : { pin : event.target.value }})}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n\n                            <Form.Group>\n                                <Form.Field width={8}>\n                                    <label>House</label>\n                                    <Input\n                                        placeholder = 'House'\n                                        value={this.state.address.house}\n                                        onChange={event => this.setState({ address : { house : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                <Form.Field width={8}>\n                                    <label>Area</label>\n                                    <Input\n                                        placeholder = 'Area'\n                                        value={this.state.address.area}\n                                        onChange={event => this.setState({ address : { area : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                \n                            </Form.Group>\n\n                            <Form.Group widths='equal'>\n                                <Form.Field >\n                                    <label>Email</label>\n                                    <Input\n                                        placeholder = 'Email'\n                                        type = 'email'\n                                        value={this.state.address.email}\n                                        onChange={event => this.setState({ email : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Aadhar</label>\n                                    <Input\n                                        placeholder = 'Aadhar'\n                                        value={this.state.address.aadhar}\n                                        onChange={event => this.setState({ aadhar : event.target.value })}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n                            <Form.Group widths='equal'>\n                                <Form.Field >\n                                    <label>Password</label>\n                                    <Input\n                                        placeholder = 'Password'\n                                        type = 'password'\n                                        value={this.state.address.password}\n                                        onChange={event => this.setState({ password : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Confirm Password</label>\n                                    <Input\n                                        placeholder = 'Confirm Password'\n                                        type = 'password'\n                                        value={this.state.address.confirmPassword}\n                                        onChange={event => this.setState({ confirmPassword : event.target.value })}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n                            <Button primary>Submit</Button>\n                            \n                        </Form>\n                    </Grid.Column>\n                    <Grid.Column width={2}></Grid.Column>\n                </Grid>\n            </Layout>\n        );\n    }\n}\n\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}