{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime-corejs2/regenerator\");\n\nvar factory = require('../ethereum/factory');\n\nvar web3 = require('../ethereum/web3');\n\nvar SHOP_NUMBER = 'Shop Number';\nvar SHOP_NAME = 'Shop Name';\nvar ADDRESS = 'Address';\nvar MANAGER_NAME = 'Manager Name';\nvar RICE_STOCK = 'Rice Stock Available';\nvar WHEAT_STOCK = 'Wheat Stock Available';\nvar KEROSENE_STOCK = 'Kerosene Stock Available';\nvar DAL_STOCK = 'Dal Stock Available';\nvar RICE_PRICE = 'Rice Price';\nvar WHEAT_PRICE = 'Wheat Price';\nvar KEROSENE_PRICE = 'Kerosene Price';\nvar DAL_PRICE = 'Dal Price';\n\nvar saveToEthereum = function saveToEthereum(obj) {\n  var accounts;\n  return _regeneratorRuntime.async(function saveToEthereum$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n        case 2:\n          accounts = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(factory.methods.createShop(obj.managerName, obj.rice, obj.wheat, obj.arhad, obj.fpdName, obj.shopName, obj.addr).send({\n            from: accounts[0],\n            gas: '1000000'\n          }));\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nmodule.exports = saveToEthereum;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/localmodules/data_initialization.js"],"names":["factory","require","web3","SHOP_NUMBER","SHOP_NAME","ADDRESS","MANAGER_NAME","RICE_STOCK","WHEAT_STOCK","KEROSENE_STOCK","DAL_STOCK","RICE_PRICE","WHEAT_PRICE","KEROSENE_PRICE","DAL_PRICE","saveToEthereum","obj","eth","getAccounts","accounts","methods","createShop","managerName","rice","wheat","arhad","fpdName","shopName","addr","send","from","gas","module","exports"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,kBAAD,CAApB;;AAEA,IAAME,WAAW,GAAG,aAApB;AACA,IAAMC,SAAS,GAAG,WAAlB;AACA,IAAMC,OAAO,GAAG,SAAhB;AACA,IAAMC,YAAY,GAAG,cAArB;AACA,IAAMC,UAAU,GAAG,sBAAnB;AACA,IAAMC,WAAW,GAAG,uBAApB;AACA,IAAMC,cAAc,GAAG,0BAAvB;AACA,IAAMC,SAAS,GAAG,qBAAlB;AACA,IAAMC,UAAU,GAAG,YAAnB;AACA,IAAMC,WAAW,GAAG,aAApB;AACA,IAAMC,cAAc,GAAG,gBAAvB;AACA,IAAMC,SAAS,GAAG,WAAlB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACAd,IAAI,CAACe,GAAL,CAASC,WAAT,EADA;;AAAA;AACjBC,UAAAA,QADiB;AAAA;AAAA,2CAEfnB,OAAO,CAACoB,OAAR,CACHC,UADG,CACQL,GAAG,CAACM,WADZ,EACyBN,GAAG,CAACO,IAD7B,EACmCP,GAAG,CAACQ,KADvC,EAC8CR,GAAG,CAACS,KADlD,EACyDT,GAAG,CAACU,OAD7D,EACsEV,GAAG,CAACW,QAD1E,EACoFX,GAAG,CAACY,IADxF,EAEHC,IAFG,CAEE;AACJC,YAAAA,IAAI,EAAEX,QAAQ,CAAC,CAAD,CADV;AAEJY,YAAAA,GAAG,EAAE;AAFD,WAFF,CAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAWAC,MAAM,CAACC,OAAP,GAAiBlB,cAAjB","sourcesContent":["const factory = require('../ethereum/factory');\nconst web3 = require('../ethereum/web3');\n\nconst SHOP_NUMBER = 'Shop Number';\nconst SHOP_NAME = 'Shop Name';\nconst ADDRESS = 'Address';\nconst MANAGER_NAME = 'Manager Name';\nconst RICE_STOCK = 'Rice Stock Available';\nconst WHEAT_STOCK = 'Wheat Stock Available';\nconst KEROSENE_STOCK = 'Kerosene Stock Available';\nconst DAL_STOCK = 'Dal Stock Available';\nconst RICE_PRICE = 'Rice Price';\nconst WHEAT_PRICE = 'Wheat Price';\nconst KEROSENE_PRICE = 'Kerosene Price';\nconst DAL_PRICE = 'Dal Price';\n\nconst saveToEthereum = async (obj) => {\n  let accounts = await web3.eth.getAccounts();\n  await factory.methods\n    .createShop(obj.managerName, obj.rice, obj.wheat, obj.arhad, obj.fpdName, obj.shopName, obj.addr)\n    .send({\n      from: accounts[0],\n      gas: '1000000'\n    });\n\n}\n\nmodule.exports = saveToEthereum;"]},"metadata":{},"sourceType":"script"}