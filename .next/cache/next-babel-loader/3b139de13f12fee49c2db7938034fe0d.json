{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react';\nimport Layout from '../../components/layout.js';\nimport { Link } from '../../routes';\nimport fetch from 'cross-fetch';\n\nvar LoginForm = /*#__PURE__*/function (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      email: '',\n      password: '',\n      res: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"callAPI\", function _callee() {\n      var data, options;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              data = {\n                email: _this.state.email,\n                password: _this.state.password\n              };\n              options = {\n                method: 'post',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: _JSON$stringify(data)\n              }; //const req = new Request('http://localhost:7800/user/login', options);\n\n              fetch('https://localhost:7800/user/login', options).then(function (res) {\n                return console.log(res.status);\n              }); // fetch('https://jsonplaceholder.typicode.com/posts', {\n              //     method : 'post',\n              //     body : JSON.stringify({\n              //         body : 'This is a body',\n              //         title : 'This is a title'\n              //     })\n              // })\n              // .then((res) => console.log(res.status))\n              // .then((res) => console.log(res.json()));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function (event) {\n      event.preventDefault();\n\n      _this.callAPI(); //console.log(this.state);\n\n    });\n\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(Grid, {\n        textAlign: \"center\",\n        style: {\n          height: '100vh'\n        },\n        verticalAlign: \"middle\"\n      }, __jsx(Grid.Column, {\n        style: {\n          maxWidth: 450\n        }\n      }, __jsx(Header, {\n        as: \"h2\",\n        color: \"blue\",\n        textAlign: \"center\"\n      }, \"Log-in to your account\"), __jsx(Form, {\n        size: \"large\",\n        onSubmit: this.onSubmit\n      }, __jsx(Segment, {\n        stacked: true\n      }, __jsx(Form.Input, {\n        val: this.state.email,\n        onChange: function onChange(event) {\n          _this2.setState({\n            email: event.target.value\n          });\n        },\n        type: \"email\",\n        fluid: true,\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"E-mail address\"\n      }), __jsx(Form.Input, {\n        val: this.state.password,\n        onChange: function onChange(event) {\n          _this2.setState({\n            password: event.target.value\n          });\n        },\n        fluid: true,\n        icon: \"lock\",\n        iconPosition: \"left\",\n        placeholder: \"Password\",\n        type: \"password\"\n      }), __jsx(Button, {\n        color: \"blue\",\n        fluid: true,\n        size: \"large\"\n      }, \"Login\"))), __jsx(Message, null, \"New to us? \", __jsx(Link, {\n        route: \"/user/register\"\n      }, __jsx(\"a\", null, \"Sign Up\"))))));\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nexport default LoginForm;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/pages/user/login.js"],"names":["React","Component","Button","Form","Grid","Header","Image","Message","Segment","Layout","Link","fetch","LoginForm","email","password","res","data","state","options","method","headers","body","then","console","log","status","event","preventDefault","callAPI","height","maxWidth","onSubmit","setState","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react';\nimport Layout from '../../components/layout.js'\nimport { Link } from '../../routes';\nimport fetch from 'cross-fetch';\n\nclass LoginForm extends Component {\n\n    state = {\n        email : '',\n        password : '',\n        res : ''\n    }\n\n    callAPI = async () => {\n\n        const data = {\n            email : this.state.email,\n            password : this.state.password\n        };\n\n        const options = {\n            method : 'post',\n            headers: { 'Content-Type':'application/json' },\n            body : JSON.stringify(data)\n        };\n\n        \n        //const req = new Request('http://localhost:7800/user/login', options);\n        fetch('https://localhost:7800/user/login', options)\n        .then((res) => console.log(res.status))\n        \n        // fetch('https://jsonplaceholder.typicode.com/posts', {\n        //     method : 'post',\n        //     body : JSON.stringify({\n        //         body : 'This is a body',\n        //         title : 'This is a title'\n        //     })\n        // })\n        // .then((res) => console.log(res.status))\n        // .then((res) => console.log(res.json()));\n\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        this.callAPI();\n        //console.log(this.state);\n    }\n\n\n    render(){\n        return (\n            <Layout>\n                <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n                    <Grid.Column style={{ maxWidth: 450 }}>\n                    <Header as='h2' color='blue' textAlign='center'>\n                         Log-in to your account\n                    </Header>\n                    <Form size='large' onSubmit={this.onSubmit}>\n                        <Segment stacked>\n                        <Form.Input \n                            val = {this.state.email}\n                            onChange = { event => {this.setState({email : event.target.value})}} \n                            type = 'email'\n                            fluid \n                            icon='user' \n                            iconPosition='left' \n                            placeholder='E-mail address' />\n                        <Form.Input\n                            val = {this.state.password}\n                            onChange = { event => {this.setState({password : event.target.value})}} \n                            fluid\n                            icon='lock'\n                            iconPosition='left'\n                            placeholder='Password'\n                            type='password'\n                        />\n\n                        <Button color='blue' fluid size='large'>\n                            Login\n                        </Button>\n                        </Segment>\n                    </Form>\n                    <Message>\n                        New to us? <Link route='/user/register'><a>Sign Up</a></Link>\n                    </Message>\n                    </Grid.Column>\n                </Grid>\n            </Layout>\n        );\n    }\n\n}\n\nexport default LoginForm"]},"metadata":{},"sourceType":"module"}