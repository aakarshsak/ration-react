{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport validate from '../../localmodules/token_validate';\nimport get from '../../localmodules/express_get';\nimport { Card, Grid, Image } from 'semantic-ui-react';\nimport Layout from '../../components/layout';\nexport default class UserDetails extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      data: null\n    });\n\n    _defineProperty(this, \"component\", async () => {\n      const headers = {\n        'Content-Type': 'application/json',\n        'x-auth-token': this.props.headerToken\n      };\n\n      if (this.props.loggedIn) {\n        const {\n          data,\n          status\n        } = await get('/user/login/me', headers);\n        this.setState({\n          data\n        });\n      }\n    });\n\n    _defineProperty(this, \"renderEachCard\", () => {\n      return __jsx(Card.Content, null, __jsx(Card.Header, null, \"Details\"), __jsx(Card.Description, null, \"This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.\"), __jsx(Card.Meta, null, \"Description\"));\n    });\n\n    _defineProperty(this, \"renderCard\", () => {\n      return __jsx(Grid, null, __jsx(Grid.Column, {\n        width: 4\n      }, __jsx(Grid.Row, null, __jsx(Card, {\n        fluid: true,\n        style: {\n          marginBottom: '30px'\n        }\n      }, __jsx(Card.Content, null, __jsx(Grid.Column, null, __jsx(Image, {\n        src: \"https://img1a.flixcart.com/www/linchpin/fk-cp-zion/img/profile-pic-male_2fd3e8.svg\",\n        circular: true,\n        size: \"mini\"\n      })), __jsx(Grid.Column, null, __jsx(\"div\", null, \"Hello,\"), __jsx(\"div\", null, this.state.data.name.first))))), __jsx(Grid.Row, null, __jsx(Card, {\n        fluid: true\n      }, this.renderEachCard()))), __jsx(Grid.Column, {\n        width: 12\n      }, __jsx(Card, {\n        fluid: true\n      }, this.renderEachCard(), this.renderEachCard(), this.renderEachCard(), this.renderEachCard(), this.renderEachCard(), this.renderEachCard())));\n    });\n  }\n\n  static getInitialProps(props) {\n    return validate(props.query.headerToken);\n  }\n\n  render() {\n    return __jsx(Layout, null, this.renderCard());\n  }\n\n}","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/pages/user/details.js"],"names":["React","Component","validate","get","Card","Grid","Image","Layout","UserDetails","data","headers","props","headerToken","loggedIn","status","setState","marginBottom","state","name","first","renderEachCard","getInitialProps","query","render","renderCard"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,OAAOC,GAAP,MAAgB,gCAAhB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,QAAkC,mBAAlC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,eAAe,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mCAEvC;AACJQ,MAAAA,IAAI,EAAG;AADH,KAFuC;;AAAA,uCASnC,YAAY;AACpB,YAAMC,OAAO,GAAG;AAAE,wBAAe,kBAAjB;AAAqC,wBAAiB,KAAKC,KAAL,CAAWC;AAAjE,OAAhB;;AACA,UAAG,KAAKD,KAAL,CAAWE,QAAd,EAAuB;AACnB,cAAM;AAACJ,UAAAA,IAAD;AAAOK,UAAAA;AAAP,YAAiB,MAAMX,GAAG,CAAC,gBAAD,EAAmBO,OAAnB,CAAhC;AACA,aAAKK,QAAL,CAAc;AAAEN,UAAAA;AAAF,SAAd;AACH;AACJ,KAf8C;;AAAA,4CAiB9B,MAAM;AACnB,aACI,MAAC,IAAD,CAAM,OAAN,QACI,MAAC,IAAD,CAAM,MAAN,kBADJ,EAEI,MAAC,IAAD,CAAM,WAAN,wmBAFJ,EAGI,MAAC,IAAD,CAAM,IAAN,sBAHJ,CADJ;AAOH,KAzB8C;;AAAA,wCA2BlC,MAAM;AACf,aACI,MAAC,IAAD,QACI,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAApB,SACI,MAAC,IAAD,CAAM,GAAN,QACI,MAAC,IAAD;AAAM,QAAA,KAAK,MAAX;AAAY,QAAA,KAAK,EAAE;AAACO,UAAAA,YAAY,EAAG;AAAhB;AAAnB,SACI,MAAC,IAAD,CAAM,OAAN,QACI,MAAC,IAAD,CAAM,MAAN,QACI,MAAC,KAAD;AAAO,QAAA,GAAG,EAAC,oFAAX;AAAgG,QAAA,QAAQ,MAAxG;AAAyG,QAAA,IAAI,EAAC;AAA9G,QADJ,CADJ,EAII,MAAC,IAAD,CAAM,MAAN,QACI,4BADJ,EAEI,mBAAM,KAAKC,KAAL,CAAWR,IAAX,CAAgBS,IAAhB,CAAqBC,KAA3B,CAFJ,CAJJ,CADJ,CADJ,CADJ,EAcI,MAAC,IAAD,CAAM,GAAN,QACI,MAAC,IAAD;AAAM,QAAA,KAAK;AAAX,SACK,KAAKC,cAAL,EADL,CADJ,CAdJ,CADJ,EAqBI,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAApB,SACI,MAAC,IAAD;AAAM,QAAA,KAAK;AAAX,SACK,KAAKA,cAAL,EADL,EAEK,KAAKA,cAAL,EAFL,EAGK,KAAKA,cAAL,EAHL,EAIK,KAAKA,cAAL,EAJL,EAKK,KAAKA,cAAL,EALL,EAMK,KAAKA,cAAL,EANL,CADJ,CArBJ,CADJ;AAkCH,KA9D8C;AAAA;;AAM/C,SAAOC,eAAP,CAAuBV,KAAvB,EAA8B;AAC1B,WAAOT,QAAQ,CAACS,KAAK,CAACW,KAAN,CAAYV,WAAb,CAAf;AACH;;AAwDDW,EAAAA,MAAM,GAAE;AACJ,WAAO,MAAC,MAAD,QAAS,KAAKC,UAAL,EAAT,CAAP;AACH;;AAlE8C","sourcesContent":["import React, {Component} from 'react';\nimport validate from '../../localmodules/token_validate';\nimport get from '../../localmodules/express_get';\nimport { Card, Grid, Image } from 'semantic-ui-react';\nimport Layout from '../../components/layout';\n\nexport default class UserDetails extends Component {\n\n    state = {\n        data : null\n    }\n\n    static getInitialProps(props) {\n        return validate(props.query.headerToken);\n    }\n    component = async () => {\n        const headers = { 'Content-Type':'application/json', 'x-auth-token' : this.props.headerToken};\n        if(this.props.loggedIn){\n            const {data, status} = await get('/user/login/me', headers);\n            this.setState({ data });\n        }\n    }\n\n    renderEachCard = () => {\n        return (\n            <Card.Content>\n                <Card.Header>Details</Card.Header>\n                <Card.Description>This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.</Card.Description>\n                <Card.Meta>Description</Card.Meta>\n            </Card.Content>\n        );\n    }\n\n    renderCard = () => {\n        return (\n            <Grid>\n                <Grid.Column width={4}>\n                    <Grid.Row>\n                        <Card fluid style={{marginBottom : '30px'}}>\n                            <Card.Content>\n                                <Grid.Column>\n                                    <Image src='https://img1a.flixcart.com/www/linchpin/fk-cp-zion/img/profile-pic-male_2fd3e8.svg' circular size='mini' />\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <div>Hello,</div>\n                                    <div>{this.state.data.name.first}</div>\n                                </Grid.Column>\n                            </Card.Content>\n                        </Card>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Card fluid>\n                            {this.renderEachCard()}\n                        </Card>\n                    </Grid.Row>\n                </Grid.Column>\n                <Grid.Column width={12}>\n                    <Card fluid>\n                        {this.renderEachCard()}\n                        {this.renderEachCard()}\n                        {this.renderEachCard()}\n                        {this.renderEachCard()}\n                        {this.renderEachCard()}\n                        {this.renderEachCard()}\n                    </Card>\n                </Grid.Column>\n            </Grid>\n        );\n    }\n\n    render(){\n        return <Layout>{this.renderCard()}</Layout> \n    }\n\n\n\n}"]},"metadata":{},"sourceType":"module"}