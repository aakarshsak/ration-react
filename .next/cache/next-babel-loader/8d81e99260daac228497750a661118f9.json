{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime-corejs2/regenerator\");\n\nvar Web3 = require('web3');\n\nvar web3;\n\nvar funct = function funct(web) {\n  return _regeneratorRuntime.async(function funct$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nif (true && typeof window.web3 !== 'undefined') {\n  // We are in the browser and metamask is running.\n  console.log(' We are in the browser and metamask is running.', window);\n  web3 = new Web3(window.web3.currentProvider);\n} else {\n  // We are on the server *OR* the user is not running metamask\n  console.log('We are on the server *OR* the user is not running metamask');\n  var provider = new Web3.providers.HttpProvider('https://rinkeby.infura.io/v3/42d235c7d6304509a63bec8b043c9bc2');\n  web3 = new Web3(provider);\n}\n\nmodule.exports = web3;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/ethereum/web3.js"],"names":["Web3","require","web3","funct","web","window","console","log","currentProvider","provider","providers","HttpProvider","module","exports"],"mappings":";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAIC,IAAJ;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd;;AAIA,IAAI,QAAiC,OAAOC,MAAM,CAACH,IAAd,KAAuB,WAA5D,EAAyE;AACvE;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ,EAA+DF,MAA/D;AACAH,EAAAA,IAAI,GAAG,IAAIF,IAAJ,CAASK,MAAM,CAACH,IAAP,CAAYM,eAArB,CAAP;AACD,CAJD,MAIO;AACL;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,4DAAZ;AACA,MAAME,QAAQ,GAAG,IAAIT,IAAI,CAACU,SAAL,CAAeC,YAAnB,CACf,+DADe,CAAjB;AAGAT,EAAAA,IAAI,GAAG,IAAIF,IAAJ,CAASS,QAAT,CAAP;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiBX,IAAjB","sourcesContent":["const Web3 = require('web3');\n\nlet web3;\n\nconst funct = async (web) => {\n\n}\n\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n  // We are in the browser and metamask is running.\n  console.log(' We are in the browser and metamask is running.', window);\n  web3 = new Web3(window.web3.currentProvider);\n} else {\n  // We are on the server *OR* the user is not running metamask\n  console.log('We are on the server *OR* the user is not running metamask')\n  const provider = new Web3.providers.HttpProvider(\n    'https://rinkeby.infura.io/v3/42d235c7d6304509a63bec8b043c9bc2'\n  );\n  web3 = new Web3(provider);\n}\n\nmodule.exports = web3;"]},"metadata":{},"sourceType":"script"}