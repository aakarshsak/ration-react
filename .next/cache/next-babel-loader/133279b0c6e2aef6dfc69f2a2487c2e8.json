{"ast":null,"code":"var csv = require('csv-parser');\n\nvar fs = require('fs-extra');\n\nvar NAME = 'Name';\nvar list = [];\n\nvar getStatesList = function getStatesList() {\n  var x = 0;\n  var l = [];\n  fs.createReadStream('states-list.csv').pipe(csv()).on('data', function (row) {\n    l.push(row[NAME]);\n    x += 1;\n  }).on('end', function () {\n    console.log('Successfully loaded states...');\n    list = l;\n  });\n};\n\ngetStatesList().on('end', function () {\n  module.exports = list;\n}); //console.log('nd', getStatesList());","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/localmodules/fetch-states.js"],"names":["csv","require","fs","NAME","list","getStatesList","x","l","createReadStream","pipe","on","row","push","console","log","module","exports"],"mappings":"AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,YAAD,CAAnB;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAAC,UAAD,CAAlB;;AAEA,IAAME,IAAI,GAAG,MAAb;AACA,IAAIC,IAAI,GAAG,EAAX;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,CAAC,GAAG,EAAR;AACAL,EAAAA,EAAE,CAACM,gBAAH,CAAoB,iBAApB,EACCC,IADD,CACMT,GAAG,EADT,EAECU,EAFD,CAEI,MAFJ,EAEY,UAACC,GAAD,EAAS;AACnBJ,IAAAA,CAAC,CAACK,IAAF,CAAOD,GAAG,CAACR,IAAD,CAAV;AACAG,IAAAA,CAAC,IAAE,CAAH;AACD,GALD,EAMCI,EAND,CAMI,KANJ,EAMW,YAAM;AACfG,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAV,IAAAA,IAAI,GAAGG,CAAP;AACD,GATD;AAUD,CAbD;;AAcAF,aAAa,GACZK,EADD,CACI,KADJ,EACW,YAAM;AACbK,EAAAA,MAAM,CAACC,OAAP,GAAiBZ,IAAjB;AACH,CAHD,E,CAIA","sourcesContent":["const csv = require('csv-parser');\nconst fs = require('fs-extra');\n\nconst NAME = 'Name';\nlet list = [];\nconst getStatesList = () => {\n  let x = 0; \n  let l = [];\n  fs.createReadStream('states-list.csv')\n  .pipe(csv())\n  .on('data', (row) => {\n    l.push(row[NAME]);\n    x+=1;\n  })\n  .on('end', () => {\n    console.log('Successfully loaded states...');\n    list = l;\n  });\n}\ngetStatesList()\n.on('end', () => {\n    module.exports = list;\n});\n//console.log('nd', getStatesList());\n"]},"metadata":{},"sourceType":"script"}