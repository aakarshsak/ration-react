{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../../components/layout';\nimport Shop from '../../ethereum/shop';\nimport { Card, Table } from 'semantic-ui-react';\n\nclass ShopShow extends Component {\n  static async getInitialProps(props) {\n    const address = props.query.address;\n    console.log(address);\n    const s = Shop(address);\n    const details = await s.methods.getDetails().call();\n    console.log(details);\n    return {\n      managerName: details[0],\n      items: [{\n        rice: details[1]\n      }, {\n        wheat: details[2]\n      }, {\n        arhad: details[3]\n      }],\n      fpdName: details[4],\n      shopName: details[5],\n      manager: details[6],\n      addr: details[7]\n    };\n  }\n\n  renderTable() {\n    const tableRows = this.props.items.map(item => {\n      return __jsx(Table.Row, null, __jsx(Table.Cell, null, \"Aakarsh\"), __jsx(Table.Cell, null, \"Patna\"), __jsx(Table.Cell, null, \"Tiger\"), __jsx(Table.Cell, null, \"Lamp\"), __jsx(Table.Cell, null, \"First\"));\n    });\n    return __jsx(Table, null, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, null, \"Name\"), __jsx(Table.HeaderCell, null, \"Place\"), __jsx(Table.HeaderCell, null, \"Animal\"), __jsx(Table.HeaderCell, null, \"Thing\"), __jsx(Table.HeaderCell, null, \"Cell\"))), __jsx(Table.Body, null, tableRows));\n  }\n\n  renderCard() {\n    const items = [{\n      header: this.props.shopName,\n      description: 'SHOP NAME',\n      meta: 'This is the name of the shop.'\n    }, {\n      header: this.props.fpdName,\n      description: 'FDP NUMBER',\n      meta: 'This is the name of the shop.'\n    }, {\n      header: this.props.managerName,\n      description: 'MANAGER NAME',\n      meta: 'This is the name of the shop.'\n    }, {\n      header: this.props.addr,\n      description: 'SHOP ADDRESS',\n      meta: 'This is the name of the shop.'\n    }, {\n      header: this.props.rice,\n      description: 'RICE STOCK',\n      meta: 'This is the name of the shop.'\n    }, {\n      header: this.props.wheat,\n      description: 'WHEAT STOCK',\n      meta: 'This is the name of the shop.'\n    }, {\n      header: this.props.arhad,\n      description: 'ARHAD STOCK',\n      meta: 'This is the name of the shop.'\n    }];\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, this.renderCard(), this.renderTable());\n  }\n\n}\n\nexport default ShopShow;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/pages/shops/show.js"],"names":["React","Component","Layout","Shop","Card","Table","ShopShow","getInitialProps","props","address","query","console","log","s","details","methods","getDetails","call","managerName","items","rice","wheat","arhad","fpdName","shopName","manager","addr","renderTable","tableRows","map","item","renderCard","header","description","meta","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../../components/layout';\nimport Shop from '../../ethereum/shop';\nimport { Card, Table } from 'semantic-ui-react';\n\n\nclass ShopShow extends Component {\n\n    static async getInitialProps(props) {\n        const address = props.query.address;\n        console.log(address);\n        const s = Shop(address);\n        const details = await s.methods.getDetails().call();\n        console.log(details);\n        return { \n            managerName : details[0],\n            items : [{rice : details[1]}, {wheat: details[2]}, {arhad : details[3]}],\n            fpdName : details[4],\n            shopName : details[5],\n            manager : details[6],\n            addr : details[7]\n        };\n    }\n\n    renderTable() {\n\n        const tableRows = this.props.items.map(item => {\n            return (\n                <Table.Row>\n                    <Table.Cell>Aakarsh</Table.Cell>\n                    <Table.Cell>Patna</Table.Cell>\n                    <Table.Cell>Tiger</Table.Cell>\n                    <Table.Cell>Lamp</Table.Cell>\n                    <Table.Cell>First</Table.Cell>\n                </Table.Row>\n            );\n        });\n        return (\n            <Table>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Name</Table.HeaderCell>\n                        <Table.HeaderCell>Place</Table.HeaderCell>\n                        <Table.HeaderCell>Animal</Table.HeaderCell>\n                        <Table.HeaderCell>Thing</Table.HeaderCell>\n                        <Table.HeaderCell>Cell</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {tableRows}\n                </Table.Body>\n            </Table>\n\n        );\n    }\n\n    renderCard() {\n        const items = [\n            {\n                header : this.props.shopName,\n                description : 'SHOP NAME',\n                meta : 'This is the name of the shop.'\n            },\n            {\n                header : this.props.fpdName,\n                description : 'FDP NUMBER',\n                meta : 'This is the name of the shop.'\n            },\n            {\n                header : this.props.managerName,\n                description : 'MANAGER NAME',\n                meta : 'This is the name of the shop.'\n            },\n            {\n                header : this.props.addr,\n                description : 'SHOP ADDRESS',\n                meta : 'This is the name of the shop.'\n            },\n            {\n                header : this.props.rice,\n                description : 'RICE STOCK',\n                meta : 'This is the name of the shop.'\n            },\n            {\n                header : this.props.wheat,\n                description : 'WHEAT STOCK',\n                meta : 'This is the name of the shop.'\n            },\n            {\n                header : this.props.arhad,\n                description : 'ARHAD STOCK',\n                meta : 'This is the name of the shop.'\n            },\n        ];\n\n        return <Card.Group items = {items} />;\n    }\n\n\n    render() {\n        return (\n            <Layout>\n                {this.renderCard()}\n                {this.renderTable()}\n            </Layout>\n        );\n    }\n}\n\n\nexport default ShopShow;"]},"metadata":{},"sourceType":"module"}