{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../../components/layout';\nimport validate from '../../localmodules/token_validate';\nimport { Header, Table, Button } from 'semantic-ui-react';\nimport post from '../../localmodules/express_post';\nimport getWithData from '../../localmodules/express_get_data';\nimport Shop from '../../ethereum/shop';\n\nvar PreviousRecord = /*#__PURE__*/function (_Component) {\n  _inherits(PreviousRecord, _Component);\n\n  function PreviousRecord() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PreviousRecord);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PreviousRecord)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"getHolderName\", function _callee(aadhar) {\n      var data, headers, _ref, text, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              data = {\n                aadhar: aadhar\n              };\n              headers = {\n                'Content-Type': 'application/json'\n              };\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(post('/user/login/me/name', headers, data));\n\n            case 4:\n              _ref = _context.sent;\n              text = _ref.text;\n              status = _ref.status;\n              return _context.abrupt(\"return\", \"Name\");\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(PreviousRecord, [{\n    key: \"renderTable\",\n    value: function renderTable() {\n      var _this2 = this;\n\n      var tableRows = this.props.records.map(function (item, index) {\n        // const name = await this.getHolderName(item.aadhar);\n        var rice = Number(_this2.props.rice) + (Number(_this2.props.recordLength) - Number(index)) * 5;\n        var wheat = Number(_this2.props.wheat) + (Number(_this2.props.recordLength) - Number(index)) * 5;\n        var arhad = Number(_this2.props.arhad) + (Number(_this2.props.recordLength) - Number(index)) * 5;\n        var kerosene = Number(_this2.props.kerosene) + (Number(_this2.props.recordLength) - Number(index)) * 5;\n        return __jsx(Table.Row, {\n          key: index\n        }, __jsx(Table.Cell, null, index + 1), __jsx(Table.Cell, null, _this2.props.nameList[index]), __jsx(Table.Cell, null, rice), __jsx(Table.Cell, null, wheat), __jsx(Table.Cell, null, arhad), __jsx(Table.Cell, null, kerosene), __jsx(Table.Cell, null, item.time), __jsx(Table.Cell, null, item.orderId));\n      });\n      return __jsx(\"div\", null, __jsx(Table, null, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, null, \"SLNO.\"), __jsx(Table.HeaderCell, null, \"Holder Name\"), __jsx(Table.HeaderCell, null, \"Rice\"), __jsx(Table.HeaderCell, null, \"Wheat\"), __jsx(Table.HeaderCell, null, \"Arhad\"), __jsx(Table.HeaderCell, null, \"Kerosene\"), __jsx(Table.HeaderCell, null, \"Date(Time)\"), __jsx(Table.HeaderCell, null, \"Order Id\"))), __jsx(Table.Body, null, tableRows)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        loggedIn: this.props.loggedIn,\n        headerToken: this.props.headerToken\n      }, __jsx(Header, {\n        as: \"h2\",\n        textAlign: \"center\",\n        style: {\n          color: '#2185d0'\n        }\n      }, \"RECORD TIMESTAMP\"), this.renderTable());\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      var _validate, headerToken, loggedIn, address, shop, fpdNameValue, dataInp, headers, _ref2, data, status, nameList, i, _data, _headers, _ref3, text, _status;\n\n      return _regeneratorRuntime.async(function getInitialProps$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _validate = validate(props.query.headerToken), headerToken = _validate.headerToken, loggedIn = _validate.loggedIn;\n              address = props.query.address;\n              shop = Shop(address); // const recordLength = await shop.methods.recordCount().call();\n              // const rice = await shop.methods.rice().call();\n              // const wheat = await shop.methods.wheat().call();\n              // const arhad = await shop.methods.arhad().call();\n              // const kerosene = await shop.methods.kerosene().call();\n              // console.log(rice, wheat, arhad, kerosene);\n              // const records = await Promise.all(\n              //     Array(parseInt(recordLength))\n              //       .fill()\n              //       .map((element, index) => {\n              //         return shop.methods.recordList(index).call();\n              //       })\n              //   );\n\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(shop.methods.fpdName().call());\n\n            case 5:\n              fpdNameValue = _context2.sent;\n              dataInp = {\n                fpdName: fpdNameValue\n              };\n              headers = {\n                'Content-Type': 'application/json'\n              };\n              _context2.next = 10;\n              return _regeneratorRuntime.awrap(getWithData('/record/record_list', headers, dataInp));\n\n            case 10:\n              _ref2 = _context2.sent;\n              data = _ref2.data;\n              status = _ref2.status;\n              nameList = [];\n              i = 0;\n\n            case 15:\n              if (!(i < records.length)) {\n                _context2.next = 27;\n                break;\n              }\n\n              _data = {\n                aadhar: records[i].aadhar\n              };\n              _headers = {\n                'Content-Type': 'application/json'\n              };\n              _context2.next = 20;\n              return _regeneratorRuntime.awrap(post('/user/login/me/name', _headers, _data));\n\n            case 20:\n              _ref3 = _context2.sent;\n              text = _ref3.text;\n              _status = _ref3.status;\n              nameList[i] = text;\n\n            case 24:\n              i++;\n              _context2.next = 15;\n              break;\n\n            case 27:\n              return _context2.abrupt(\"return\", {\n                headerToken: headerToken,\n                loggedIn: loggedIn,\n                address: address\n              });\n\n            case 28:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return PreviousRecord;\n}(Component);\n\nexport { PreviousRecord as default };","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/pages/shops/record.js"],"names":["React","Component","Layout","validate","Header","Table","Button","post","getWithData","Shop","PreviousRecord","aadhar","data","headers","text","status","tableRows","props","records","map","item","index","rice","Number","recordLength","wheat","arhad","kerosene","nameList","time","orderId","loggedIn","headerToken","color","renderTable","query","address","shop","methods","fpdName","call","fpdNameValue","dataInp","i","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../../components/layout';\nimport validate from '../../localmodules/token_validate';\nimport { Header, Table, Button } from 'semantic-ui-react';\nimport post from '../../localmodules/express_post';\nimport getWithData from '../../localmodules/express_get_data';\nimport Shop from '../../ethereum/shop';\n\n\nexport default class PreviousRecord extends Component {\n\n    static async getInitialProps(props) {\n        const { headerToken, loggedIn } = validate(props.query.headerToken);\n        const address = props.query.address;\n        const shop = Shop(address);\n        // const recordLength = await shop.methods.recordCount().call();\n        // const rice = await shop.methods.rice().call();\n        // const wheat = await shop.methods.wheat().call();\n        // const arhad = await shop.methods.arhad().call();\n        // const kerosene = await shop.methods.kerosene().call();\n        // console.log(rice, wheat, arhad, kerosene);\n        // const records = await Promise.all(\n        //     Array(parseInt(recordLength))\n        //       .fill()\n        //       .map((element, index) => {\n        //         return shop.methods.recordList(index).call();\n        //       })\n        //   );\n        const fpdNameValue = await shop.methods.fpdName().call();\n        const dataInp = {\n            fpdName : fpdNameValue\n        }\n        const headers = { 'Content-Type':'application/json'};\n        const {data, status} = await getWithData('/record/record_list', headers, dataInp)\n        let nameList = [];\n        for(let i=0;i<records.length;i++){\n            const data = {\n                aadhar : records[i].aadhar\n            }\n            const headers = {\n                'Content-Type':'application/json'\n            };\n            \n            const { text, status } = await post('/user/login/me/name', headers, data);\n            nameList[i] = text;\n        }\n        return { headerToken , loggedIn, address }; //records, recordLength, nameList, rice, wheat, arhad, kerosene };\n    }\n\n    getHolderName = async (aadhar) => {\n        const data = {\n            aadhar : aadhar\n        }\n        const headers = {\n            'Content-Type':'application/json'\n        };\n        \n        const { text, status } = await post('/user/login/me/name', headers, data);\n        return \"Name\";\n    }\n\n    renderTable() {\n        const tableRows = this.props.records.map((item, index) => {\n            // const name = await this.getHolderName(item.aadhar);\n            const rice = Number(this.props.rice) + ((Number(this.props.recordLength)-Number(index))*5);\n            const wheat = Number(this.props.wheat) + ((Number(this.props.recordLength)-Number(index))*5);\n            const arhad = Number(this.props.arhad) + ((Number(this.props.recordLength)-Number(index))*5);\n            const kerosene = Number(this.props.kerosene) + ((Number(this.props.recordLength)-Number(index))*5);\n            return (\n                <Table.Row key={index}>\n                    <Table.Cell>{index+1}</Table.Cell>\n                    <Table.Cell>{this.props.nameList[index]}</Table.Cell>\n                    <Table.Cell>{rice}</Table.Cell>\n                    <Table.Cell>{wheat}</Table.Cell>\n                    <Table.Cell>{arhad}</Table.Cell>\n                    <Table.Cell>{kerosene}</Table.Cell>\n                    <Table.Cell>{item.time}</Table.Cell>\n                    <Table.Cell>{item.orderId}</Table.Cell>\n                </Table.Row>\n            );\n        });\n        return (\n            <div>\n                <Table>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>SLNO.</Table.HeaderCell>\n                            <Table.HeaderCell>Holder Name</Table.HeaderCell>\n                            <Table.HeaderCell>Rice</Table.HeaderCell>\n                            <Table.HeaderCell>Wheat</Table.HeaderCell>\n                            <Table.HeaderCell>Arhad</Table.HeaderCell>\n                            <Table.HeaderCell>Kerosene</Table.HeaderCell>\n                            <Table.HeaderCell>Date(Time)</Table.HeaderCell>\n                            <Table.HeaderCell>Order Id</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {tableRows}\n                    </Table.Body>\n                </Table>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <Layout loggedIn={this.props.loggedIn} headerToken={this.props.headerToken}>\n                <Header as='h2' textAlign='center' style={{color:'#2185d0'}}>RECORD TIMESTAMP</Header>\n                {this.renderTable()}\n            </Layout>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}