{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../../components/layout';\nimport Shop from '../../ethereum/shop';\nimport { Card, Table, Grid, Button, Input, Message } from 'semantic-ui-react';\nimport { Link, Router } from '../../routes';\nimport validate from '../../localmodules/token_validate';\nimport get from '../../localmodules/express_get';\nimport web3 from '../../ethereum/web3';\nimport CustomError from '../../localmodules/custom_error';\nimport post from '../../localmodules/express_post';\n\nvar ShopShow = /*#__PURE__*/function (_Component) {\n  _inherits(ShopShow, _Component);\n\n  function ShopShow() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShopShow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShopShow)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      rice: '',\n      wheat: '',\n      arhad: '',\n      kerosene: '',\n      tableError: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getAadhar\", function _callee() {\n      var headers, _ref, data, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              headers = {\n                'Content-Type': 'application/json',\n                'x-auth-token': _this.props.headerToken\n              };\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(get('/user/login/me', headers));\n\n            case 3:\n              _ref = _context.sent;\n              data = _ref.data;\n              status = _ref.status;\n              return _context.abrupt(\"return\", data.aadhar);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"verify\", function _callee2() {\n      var qty, msg, count;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              qty = _this.state;\n              msg = '';\n              count = 0;\n\n              if (qty.rice > 5) {\n                msg = msg + \"Rice\";\n                count++;\n              }\n\n              if (qty.wheat > 5) {\n                msg = msg + \", Wheat\";\n                if (count === 0) msg = 'Wheat';\n                count++;\n              }\n\n              if (qty.arhad > 5) {\n                msg = msg + \", Arhad\";\n                if (count === 0) msg = 'Arhad';\n                count++;\n              }\n\n              if (qty.kerosene > 5) {\n                msg = msg + \", Kerosene\";\n                if (count === 0) msg = 'Kerosene';\n                count++;\n              }\n\n              if (!(count > 0)) {\n                _context2.next = 9;\n                break;\n              }\n\n              throw new CustomError(\"Quantity of \".concat(msg, \" exceeds the maximum quantity allowed per month.\"));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function _callee3() {\n      var dateIns, date, threeDigit, aadhar, accounts, s;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n\n              _this.setState({\n                tableError: ''\n              });\n\n              _this.verify();\n\n              dateIns = new Date();\n              date = dateIns.toLocaleDateString() + '(' + dateIns.getHours() + ':' + dateIns.getMinutes() + ')';\n              threeDigit = 'OD20M05' + _this.props.blockName.substring(0, 3) + Math.floor(Math.random() * Math.floor(1000));\n              _context3.next = 8;\n              return _regeneratorRuntime.awrap(_this.getAadhar());\n\n            case 8:\n              aadhar = _context3.sent;\n              _context3.next = 11;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 11:\n              accounts = _context3.sent;\n              s = Shop(_this.props.address);\n              _context3.next = 15;\n              return _regeneratorRuntime.awrap(s.methods.purchase(aadhar, threeDigit, date, _this.state.rice, _this.state.wheat, _this.state.arhad, _this.state.kerosene).send({\n                from: accounts[0]\n              }));\n\n            case 15:\n              _context3.next = 20;\n              break;\n\n            case 17:\n              _context3.prev = 17;\n              _context3.t0 = _context3[\"catch\"](0);\n\n              _this.setState({\n                tableError: _context3.t0.message\n              });\n\n            case 20:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 17]]);\n    });\n\n    return _this;\n  }\n\n  _createClass(ShopShow, [{\n    key: \"renderTable\",\n    value: function renderTable() {\n      var _this2 = this;\n\n      var items = this.props.items;\n\n      var tableRows = __jsx(Table.Body, null, __jsx(Table.Row, null, __jsx(Table.Cell, null, items[0].name), __jsx(Table.Cell, null, items[0].quantity), __jsx(Table.Cell, null, items[0].price), __jsx(Table.Cell, null, \"5 Kg\"), __jsx(Table.Cell, null, __jsx(Input, {\n        type: \"number\",\n        placeholder: \"Quantity\",\n        value: this.state.rice,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            rice: event.target.value\n          });\n        }\n      }))), __jsx(Table.Row, null, __jsx(Table.Cell, null, items[1].name), __jsx(Table.Cell, null, items[1].quantity), __jsx(Table.Cell, null, items[1].price), __jsx(Table.Cell, null, \"5 Kg\"), __jsx(Table.Cell, null, __jsx(Input, {\n        type: \"number\",\n        placeholder: \"Quantity\",\n        value: this.state.wheat,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            wheat: event.target.value\n          });\n        }\n      }))), __jsx(Table.Row, null, __jsx(Table.Cell, null, items[2].name), __jsx(Table.Cell, null, items[2].quantity), __jsx(Table.Cell, null, items[2].price), __jsx(Table.Cell, null, \"5 Kg\"), __jsx(Table.Cell, null, __jsx(Input, {\n        type: \"number\",\n        placeholder: \"Quantity\",\n        value: this.state.arhad,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            arhad: event.target.value\n          });\n        }\n      }))), __jsx(Table.Row, null, __jsx(Table.Cell, null, items[3].name), __jsx(Table.Cell, null, items[3].quantity), __jsx(Table.Cell, null, items[3].price), __jsx(Table.Cell, null, \"5 ltr\"), __jsx(Table.Cell, null, __jsx(Input, {\n        type: \"number\",\n        placeholder: \"Quantity\",\n        value: this.state.kerosene,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            kerosene: event.target.value\n          });\n        }\n      }))));\n\n      return __jsx(\"div\", null, __jsx(\"h3\", null, __jsx(\"strong\", null, \"STOCK STATEMENT\")), __jsx(Table, null, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, null, \"Item Name\"), __jsx(Table.HeaderCell, null, \"Stock\"), __jsx(Table.HeaderCell, null, \"Price(per KG)\"), __jsx(Table.HeaderCell, null, \"Maximum Quantity Per Month\"), __jsx(Table.HeaderCell, null, \"Buying Quantity\"))), tableRows), this.renderTableError());\n    }\n  }, {\n    key: \"renderCard\",\n    value: function renderCard() {\n      var items = [{\n        header: this.props.shopName,\n        description: 'SHOP NAME',\n        meta: 'This is the name of the shop.'\n      }, {\n        header: this.props.fpdName,\n        description: 'FDP NUMBER',\n        meta: 'This is the name of the shop.'\n      }, {\n        header: this.props.managerName,\n        description: 'MANAGER NAME',\n        meta: 'This is the name of the shop.'\n      }];\n      return __jsx(\"div\", null, __jsx(Card.Group, {\n        items: items,\n        itemsPerRow: 3\n      }), __jsx(Card.Group, {\n        itemsPerRow: 2\n      }, __jsx(Card, null, __jsx(Card.Content, null, __jsx(Card.Header, null, this.props.addr), __jsx(Card.Meta, null, \"This is the name of the shop.\"), __jsx(Card.Description, null, \"SHOP ADDRESS\"))), __jsx(Card, null, __jsx(Card.Content, null, __jsx(Card.Header, null, this.props.blockName), __jsx(Card.Meta, null, \"This is the name of the block.\"), __jsx(Card.Description, null, \"BLOCK NAME\")))));\n    }\n  }, {\n    key: \"renderRecordButton\",\n    value: function renderRecordButton() {\n      return __jsx(Link, {\n        route: \"/\".concat(this.props.headerToken, \"/shops/record/\").concat(this.props.currentAddress)\n      }, __jsx(\"a\", null, __jsx(Button, {\n        color: \"blue\"\n      }, \"View Previous Record Details\")));\n    }\n  }, {\n    key: \"renderTableError\",\n    value: function renderTableError() {\n      if (this.state.tableError === '') return null;else if (this.state.tableError === 'Success') return __jsx(Message, {\n        color: \"green\"\n      }, 'Payment Successful.');\n      return __jsx(Message, {\n        color: \"yellow\"\n      }, this.state.tableError);\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton() {\n      return __jsx(Button, {\n        color: \"blue\",\n        onClick: this.onClick\n      }, \"Make Payment\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        headerToken: this.props.headerToken,\n        loggedIn: this.props.loggedIn\n      }, __jsx(Grid, {\n        style: {\n          color: '#2185D0'\n        },\n        columns: 1\n      }, __jsx(Grid.Row, {\n        textAlign: \"center\"\n      }, __jsx(Grid.Column, null, this.renderTable())), __jsx(Grid.Row, {\n        textAlign: \"center\"\n      }, __jsx(Grid.Column, null, this.renderButton())), __jsx(Grid.Row, null, __jsx(Grid.Column, null, this.renderCard())), __jsx(Grid.Row, {\n        textAlign: \"center\"\n      }, __jsx(Grid.Column, null, this.renderRecordButton()))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      var _validate, headerToken, loggedIn, headers, _ref2, data, status, address, s, details, blockName;\n\n      return _regeneratorRuntime.async(function getInitialProps$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _validate = validate(props.query.headerToken), headerToken = _validate.headerToken, loggedIn = _validate.loggedIn;\n              headers = {\n                'Content-Type': 'application/json',\n                'x-auth-token': headerToken\n              };\n              _context4.next = 4;\n              return _regeneratorRuntime.awrap(get('/user/login/me/blockName', headers));\n\n            case 4:\n              _ref2 = _context4.sent;\n              data = _ref2.data;\n              status = _ref2.status;\n              address = props.query.address;\n              s = Shop(address);\n              _context4.next = 11;\n              return _regeneratorRuntime.awrap(s.methods.getDetails().call());\n\n            case 11:\n              details = _context4.sent;\n              _context4.next = 14;\n              return _regeneratorRuntime.awrap(s.methods.blockName().call());\n\n            case 14:\n              blockName = _context4.sent;\n              return _context4.abrupt(\"return\", {\n                managerName: details[0],\n                items: [{\n                  quantity: details[1],\n                  name: 'Rice',\n                  price: '2'\n                }, {\n                  quantity: details[2],\n                  name: 'Wheat',\n                  price: '4'\n                }, {\n                  quantity: details[3],\n                  name: 'Arhad',\n                  price: '3'\n                }, {\n                  quantity: details[4],\n                  name: 'Kerosene',\n                  price: '5'\n                }],\n                fpdName: details[5],\n                shopName: details[6],\n                manager: details[7],\n                addr: details[8],\n                currentAddress: address,\n                headerToken: headerToken,\n                loggedIn: loggedIn,\n                blockName: data.area,\n                address: address\n              });\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return ShopShow;\n}(Component);\n\nexport default ShopShow;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/pages/shops/show.js"],"names":["React","Component","Layout","Shop","Card","Table","Grid","Button","Input","Message","Link","Router","validate","get","web3","CustomError","post","ShopShow","rice","wheat","arhad","kerosene","tableError","headers","props","headerToken","data","status","aadhar","qty","state","msg","count","setState","verify","dateIns","Date","date","toLocaleDateString","getHours","getMinutes","threeDigit","blockName","substring","Math","floor","random","getAadhar","eth","getAccounts","accounts","s","address","methods","purchase","send","from","message","items","tableRows","name","quantity","price","event","target","value","renderTableError","header","shopName","description","meta","fpdName","managerName","addr","currentAddress","onClick","loggedIn","color","renderTable","renderButton","renderCard","renderRecordButton","query","getDetails","call","details","manager","area"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../../components/layout';\nimport Shop from '../../ethereum/shop';\nimport { Card, Table, Grid, Button, Input, Message } from 'semantic-ui-react';\nimport {  Link, Router } from '../../routes';\nimport validate from '../../localmodules/token_validate';\nimport get from '../../localmodules/express_get';\nimport web3 from '../../ethereum/web3';\nimport CustomError from '../../localmodules/custom_error';\nimport post from '../../localmodules/express_post';\n\n\nclass ShopShow extends Component {\n\n    state = { \n        rice : '',\n        wheat : '',\n        arhad : '',\n        kerosene : '',\n        tableError : ''\n    };\n\n    static async getInitialProps(props) {\n        const { headerToken, loggedIn } = validate(props.query.headerToken);\n        const headers = { 'Content-Type':'application/json', 'x-auth-token' : headerToken};\n        const {data, status} = await get('/user/login/me/blockName', headers);\n        const address = props.query.address;\n\n        const s = Shop(address);\n        const details = await s.methods.getDetails().call();\n        const blockName = await s.methods.blockName().call();\n        return { \n            managerName : details[0],\n            items : [{quantity : details[1], name : 'Rice', price : '2'},\n                    {quantity: details[2], name : 'Wheat', price : '4'},\n                    {quantity : details[3], name : 'Arhad', price : '3'},\n                    {quantity : details[4], name : 'Kerosene', price : '5'}],\n            fpdName : details[5],\n            shopName : details[6],\n            manager : details[7],\n            addr : details[8],\n            currentAddress : address,\n            headerToken,\n            loggedIn,\n            blockName : data.area,\n            address\n        };\n    }\n\n    renderTable() {\n        const items = this.props.items;\n        const tableRows = (\n            <Table.Body>\n                <Table.Row>\n                    <Table.Cell>{items[0].name}</Table.Cell>\n                    <Table.Cell>{items[0].quantity}</Table.Cell>\n                    <Table.Cell>{items[0].price}</Table.Cell>\n                    <Table.Cell>5 Kg</Table.Cell>\n                    <Table.Cell>\n                        <Input\n                            type='number'\n                            placeholder = 'Quantity'\n                            value={this.state.rice}\n                            onChange={event => this.setState({ rice : event.target.value })}\n                        />\n                    </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                <Table.Cell>{items[1].name}</Table.Cell>\n                    <Table.Cell>{items[1].quantity}</Table.Cell>\n                    <Table.Cell>{items[1].price}</Table.Cell>\n                    <Table.Cell>5 Kg</Table.Cell>\n                    <Table.Cell>\n                        <Input\n                            type='number'\n                            placeholder = 'Quantity'\n                            value={this.state.wheat}\n                            onChange={event => this.setState({ wheat : event.target.value })}\n                        />\n                    </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                <Table.Cell>{items[2].name}</Table.Cell>\n                    <Table.Cell>{items[2].quantity}</Table.Cell>\n                    <Table.Cell>{items[2].price}</Table.Cell>\n                    <Table.Cell>5 Kg</Table.Cell>\n                    <Table.Cell>\n                        <Input\n                            type='number'\n                            placeholder = 'Quantity'\n                            value={this.state.arhad}\n                            onChange={event => this.setState({ arhad : event.target.value })}\n                        />\n                    </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                <Table.Cell>{items[3].name}</Table.Cell>\n                    <Table.Cell>{items[3].quantity}</Table.Cell>\n                    <Table.Cell>{items[3].price}</Table.Cell>\n                    <Table.Cell>5 ltr</Table.Cell>\n                    <Table.Cell>\n                        <Input\n                            type='number'\n                            placeholder = 'Quantity'\n                            value={this.state.kerosene}\n                            onChange={event => this.setState({ kerosene : event.target.value })}\n                        />\n                    </Table.Cell>\n                </Table.Row>\n            </Table.Body>\n        );\n        \n        return (\n            <div>\n                <h3><strong>STOCK STATEMENT</strong></h3>\n                <Table>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Item Name</Table.HeaderCell>\n                            <Table.HeaderCell>Stock</Table.HeaderCell>\n                            <Table.HeaderCell>Price(per KG)</Table.HeaderCell>\n                            <Table.HeaderCell>Maximum Quantity Per Month</Table.HeaderCell>\n                            <Table.HeaderCell>Buying Quantity</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    {tableRows}\n                \n                </Table>\n                {this.renderTableError()}\n            </div>\n        );\n    }\n\n    renderCard() {\n        const items = [\n            {\n                header : this.props.shopName,\n                description : 'SHOP NAME',\n                meta : 'This is the name of the shop.'\n            },\n            {\n                header : this.props.fpdName,\n                description : 'FDP NUMBER',\n                meta : 'This is the name of the shop.'\n            },\n            {\n                header : this.props.managerName,\n                description : 'MANAGER NAME',\n                meta : 'This is the name of the shop.'\n            },\n        ];\n\n        return (\n            <div>\n                <Card.Group items = {items} itemsPerRow = {3}/>\n                    \n                <Card.Group itemsPerRow={2}>\n                    <Card>\n                        <Card.Content>\n                            <Card.Header>{this.props.addr}</Card.Header>\n                            <Card.Meta>This is the name of the shop.</Card.Meta>\n                            <Card.Description>SHOP ADDRESS</Card.Description>\n                        </Card.Content>\n                    </Card>\n                    <Card>\n                        <Card.Content>\n                            <Card.Header>{this.props.blockName}</Card.Header>\n                            <Card.Meta>This is the name of the block.</Card.Meta>\n                            <Card.Description>BLOCK NAME</Card.Description>\n                        </Card.Content>\n                    </Card>\n                </Card.Group>\n            </div>\n        );\n    }\n\n    renderRecordButton() {\n        return (\n\n            <Link route={`/${this.props.headerToken}/shops/record/${this.props.currentAddress}`}>\n                <a>\n                    <Button color='blue'>\n                    View Previous Record Details\n                    </Button>\n                </a>\n            </Link>\n\n        );\n    }\n\n    getAadhar = async () => {\n        const headers = { 'Content-Type':'application/json', 'x-auth-token' : this.props.headerToken};\n        const {data, status} = await get('/user/login/me', headers);\n        return data.aadhar;\n    }\n\n    verify = async () => {\n        const qty = this.state;\n        let msg = '';\n        let count = 0;\n        if(qty.rice > 5){\n            msg = msg+\"Rice\";\n            count++;\n        }\n        if(qty.wheat > 5){\n            msg = msg+\", Wheat\";\n            if(count ===0)\n                msg = 'Wheat'\n            count++;\n        }\n        if(qty.arhad > 5){\n            msg = msg+\", Arhad\";\n            if(count === 0)\n                msg = 'Arhad'\n            count++;\n        }\n        if(qty.kerosene > 5){\n            msg = msg+\", Kerosene\";\n            if(count === 0)\n                msg = 'Kerosene'\n            count++;\n        }\n        if( count > 0){\n            throw new CustomError(`Quantity of ${msg} exceeds the maximum quantity allowed per month.`);\n        }\n\n        // const dateIns = new Date;\n        // const date = dateIns.toLocaleDateString() + '(' +dateIns.getHours() +':'+ dateIns.getMinutes() + ')';\n        // const threeDigit = 'OD20M05' + this.props.blockName.substring(0,3) + Math.floor(Math.random() * Math.floor(1000));\n        // const aadhar = await this.getAadhar();\n        // const data = {\n        //     rice : this.state.rice,\n        //     wheat : this.state.wheat,\n        //     arhad : this.state.arhad,\n        //     kerosene : this.state.kerosene,\n        //     ration : aadhar,\n        //     date : date,\n        //     orderid : threeDigit,\n        //     fpdName : this.props.fpdName\n        // };\n\n        // // const headers = { 'Content-Type':'application/json' };\n        // // const {text, status} = await post('/record', headers, data);\n        // console.log(data);\n\n        // // if(status === 400){\n        // //     throw new CustomError(text);\n        // // }\n        // this.setState({tableError : \"Success\"})\n\n    }\n    renderTableError(){\n        if(this.state.tableError === '')\n            return null;\n        else if(this.state.tableError === 'Success')\n            return <Message color='green'>{'Payment Successful.'}</Message>;\n        return <Message color='yellow'>{this.state.tableError}</Message>;\n    }\n    onClick = async () => {\n        try {\n            this.setState({tableError : ''});\n            this.verify();\n            const dateIns = new Date;\n            const date = dateIns.toLocaleDateString() + '(' +dateIns.getHours() +':'+ dateIns.getMinutes() + ')';\n            const threeDigit = 'OD20M05' + this.props.blockName.substring(0,3) + Math.floor(Math.random() * Math.floor(1000));\n            const aadhar = await this.getAadhar();\n            const accounts = await web3.eth.getAccounts();\n            const s = Shop(this.props.address);\n            await s.methods\n            .purchase(aadhar, threeDigit, date, this.state.rice, this.state.wheat, this.state.arhad, this.state.kerosene)\n            .send({\n                from : accounts[0]\n            });\n        } catch(e) {\n            this.setState({tableError : e.message});\n        }\n    }\n\n    renderButton(){\n        return (\n            <Button color='blue' onClick={this.onClick}>\n            Make Payment\n            </Button>\n    \n        );\n    }\n\n\n    render() {\n        return (\n            <Layout headerToken={this.props.headerToken} loggedIn={this.props.loggedIn}>\n                <Grid style={{color:'#2185D0'}} columns={1}>\n                    <Grid.Row textAlign='center'>\n                        <Grid.Column>\n                            {this.renderTable()}\n                        </Grid.Column>  \n                    </Grid.Row>\n                    <Grid.Row textAlign='center'>\n                        <Grid.Column>\n                            {this.renderButton()}\n                        </Grid.Column>  \n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            {this.renderCard()}\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row textAlign='center'>\n                        <Grid.Column>\n                            {this.renderRecordButton()}\n                        </Grid.Column>  \n                    </Grid.Row>\n                    \n                </Grid>\n            </Layout>\n        );\n    }\n}\n\n\nexport default ShopShow;"]},"metadata":{},"sourceType":"module"}