{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime-corejs2/regenerator\");\n\nvar Web3 = require('web3');\n\nvar web3;\n\nvar func = function func() {\n  return _regeneratorRuntime.async(function func$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!window.ethereum) {\n            _context.next = 12;\n            break;\n          }\n\n          web3 = new Web3(window.ethereum);\n          _context.prev = 2;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(window.ethereum.enable());\n\n        case 5:\n          _context.next = 9;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](2);\n\n        case 9:\n          return _context.abrupt(\"return\", web3);\n\n        case 12:\n          if (!window.web3) {\n            _context.next = 16;\n            break;\n          }\n\n          return _context.abrupt(\"return\", new Web3(window.web3.currentProvider));\n\n        case 16:\n          console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[2, 7]]);\n};\n\nweb3 = func();\nmodule.exports = web3;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/ethereum/web3.js"],"names":["Web3","require","web3","func","window","ethereum","enable","currentProvider","console","log","module","exports"],"mappings":";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAIC,IAAJ;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA;AAAA;AAAA;AAAA;AAAA,eACPC,MAAM,CAACC,QADA;AAAA;AAAA;AAAA;;AAETH,UAAAA,IAAI,GAAG,IAAIF,IAAJ,CAASI,MAAM,CAACC,QAAhB,CAAP;AAFS;AAAA;AAAA,2CAKCD,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EALD;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAUFJ,IAVE;;AAAA;AAAA,eAaFE,MAAM,CAACF,IAbL;AAAA;AAAA;AAAA;;AAAA,2CAcF,IAAIF,IAAJ,CAASI,MAAM,CAACF,IAAP,CAAYK,eAArB,CAdE;;AAAA;AAmBTC,UAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;;AAnBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAb;;AAwBAP,IAAI,GAAGC,IAAI,EAAX;AACAO,MAAM,CAACC,OAAP,GAAiBT,IAAjB","sourcesContent":["const Web3 = require('web3');\n\nlet web3;\nconst func = async () => {\n  if (window.ethereum) {\n    web3 = new Web3(window.ethereum);\n    try {\n        // Request account access if needed\n        await window.ethereum.enable();\n        // Acccounts now exposed\n    } catch (error) {\n        // User denied account access...\n    }\n    return web3;\n  }\n  // Legacy dapp browsers...\n  else if (window.web3) {\n    return new Web3(window.web3.currentProvider);\n    // Acccounts always exposed\n  }\n  // Non-dapp browsers...\n  else {\n    console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n  }\n}\n\n\nweb3 = func();\nmodule.exports = web3;"]},"metadata":{},"sourceType":"script"}