{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime-corejs2/regenerator\");\n\nvar Web3 = require('web3');\n\nvar func = function func() {\n  var web3, provider, _web;\n\n  return _regeneratorRuntime.async(function func$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(true && typeof window.web3 !== 'undefined')) {\n            _context.next = 13;\n            break;\n          }\n\n          // We are in the browser and metamask is running.\n          console.log(' We are in the browser and metamask is running.');\n          web3 = new Web3(window.web3.currentProvider);\n          _context.prev = 3;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(ethereum.enable());\n\n        case 6:\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](3);\n          console.log(_context.t0);\n\n        case 11:\n          _context.next = 17;\n          break;\n\n        case 13:\n          // We are on the server *OR* the user is not running metamask\n          console.log('We are on the server *OR* the user is not running metamask');\n          provider = new Web3.providers.HttpProvider('https://rinkeby.infura.io/v3/42d235c7d6304509a63bec8b043c9bc2');\n          _web = new Web3(provider);\n          console.log(_web);\n\n        case 17:\n          return _context.abrupt(\"return\", web3);\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[3, 8]]);\n};\n\nvar web3 = func();\nmodule.exports = web3;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/ethereum/web3.js"],"names":["Web3","require","func","window","web3","console","log","currentProvider","ethereum","enable","provider","providers","HttpProvider","module","exports"],"mappings":";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEP,QAAiC,OAAOC,MAAM,CAACC,IAAd,KAAuB,WAFjD;AAAA;AAAA;AAAA;;AAGT;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ;AACAF,UAAAA,IAAI,GAAG,IAAIJ,IAAJ,CAASG,MAAM,CAACC,IAAP,CAAYG,eAArB,CAAP;AALS;AAAA;AAAA,2CAODC,QAAQ,CAACC,MAAT,EAPC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AASPJ,UAAAA,OAAO,CAACC,GAAR;;AATO;AAAA;AAAA;;AAAA;AAYT;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAY,4DAAZ;AACMI,UAAAA,QAdG,GAcQ,IAAIV,IAAI,CAACW,SAAL,CAAeC,YAAnB,CACf,+DADe,CAdR;AAiBHR,UAAAA,IAjBG,GAiBI,IAAIJ,IAAJ,CAASU,QAAT,CAjBJ;AAkBTL,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAlBS;AAAA,2CAoBJA,IApBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAb;;AAwBA,IAAIA,IAAI,GAAGF,IAAI,EAAf;AACAW,MAAM,CAACC,OAAP,GAAiBV,IAAjB","sourcesContent":["const Web3 = require('web3');\n\nconst func = async () => {\n  let web3;\n  if (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n    // We are in the browser and metamask is running.\n    console.log(' We are in the browser and metamask is running.');\n    web3 = new Web3(window.web3.currentProvider);\n    try {\n      await ethereum.enable();\n    } catch(e) {\n      console.log(e);\n    }\n  } else {\n    // We are on the server *OR* the user is not running metamask\n    console.log('We are on the server *OR* the user is not running metamask')\n    const provider = new Web3.providers.HttpProvider(\n      'https://rinkeby.infura.io/v3/42d235c7d6304509a63bec8b043c9bc2'\n    );\n    const web3 = new Web3(provider);\n    console.log(web3);\n  }\n  return web3;\n}\n\n\nlet web3 = func();\nmodule.exports = web3;"]},"metadata":{},"sourceType":"script"}