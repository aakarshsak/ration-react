{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../../components/layout';\nimport validate from '../../localmodules/token_validate';\nimport { Header, Table, Button } from 'semantic-ui-react';\nimport post from '../../localmodules/express_post';\nimport postWithData from '../../localmodules/express_post_data';\nimport Shop from '../../ethereum/shop';\nexport default class PreviousRecord extends Component {\n  static async getInitialProps(props) {\n    const {\n      headerToken,\n      loggedIn\n    } = validate(props.query.headerToken);\n    const address = props.query.address;\n    console.log(address);\n    const shop = Shop(address);\n    const fpdNameValue = await shop.methods.fpdName().call();\n    const dataInp = {\n      fpdName: fpdNameValue\n    };\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    const {\n      data,\n      status\n    } = await postWithData('/record/record_list', headers, dataInp);\n    const records = data['result'];\n    console.log(records);\n    let nameList = [];\n\n    for (let i = 0; i < records.length; i++) {\n      const data = {\n        ration: records[i].ration\n      };\n      const headers = {\n        'Content-Type': 'application/json'\n      };\n      const {\n        text,\n        status\n      } = await post('/user/login/me/name', headers, data);\n      nameList[i] = text;\n    }\n\n    console.log(nameList);\n    return {\n      headerToken,\n      loggedIn,\n      address,\n      records,\n      nameList\n    }; //, recordLength, rice, wheat, arhad, kerosene };\n  } // renderTable() {\n  //     console.log(this.props.records);\n  //     const tableRows = this.props.records.map((item, index) => {\n  //         return (\n  //             <Table.Row key={index}>\n  //                 <Table.Cell>{this.props.records.length - index}</Table.Cell>\n  //                 <Table.Cell>{this.props.nameList[index]}</Table.Cell>\n  //                 <Table.Cell>{item.rice}</Table.Cell>\n  //                 <Table.Cell>{item.wheat}</Table.Cell>\n  //                 <Table.Cell>{item.arhad}</Table.Cell>\n  //                 <Table.Cell>{item.kerosene}</Table.Cell>\n  //                 <Table.Cell>{item.date}</Table.Cell>\n  //                 <Table.Cell>{item.orderid}</Table.Cell>\n  //             </Table.Row>\n  //         );\n  //     });\n  //     return (\n  //         <div>\n  //             <Table>\n  //                 <Table.Header>\n  //                     <Table.Row>\n  //                         <Table.HeaderCell>SLNO.</Table.HeaderCell>\n  //                         <Table.HeaderCell>Holder Name</Table.HeaderCell>\n  //                         <Table.HeaderCell>Rice</Table.HeaderCell>\n  //                         <Table.HeaderCell>Wheat</Table.HeaderCell>\n  //                         <Table.HeaderCell>Arhad</Table.HeaderCell>\n  //                         <Table.HeaderCell>Kerosene</Table.HeaderCell>\n  //                         <Table.HeaderCell>Date(Time)</Table.HeaderCell>\n  //                         <Table.HeaderCell>Order Id</Table.HeaderCell>\n  //                     </Table.Row>\n  //                 </Table.Header>\n  //                 <Table.Body>\n  //                     {tableRows.reverse()}\n  //                 </Table.Body>\n  //             </Table>\n  //         </div>\n  //     );\n  // }\n\n\n  render() {\n    return __jsx(Layout, {\n      loggedIn: this.props.loggedIn,\n      headerToken: this.props.headerToken\n    }, __jsx(Header, {\n      as: \"h2\",\n      textAlign: \"center\",\n      style: {\n        color: '#2185d0'\n      }\n    }, \"RECORD TIMESTAMP\"), \"tjos s;fs;fs;\");\n  }\n\n} // const recordLength = await shop.methods.recordCount().call();\n// const rice = await shop.methods.rice().call();\n// const wheat = await shop.methods.wheat().call();\n// const arhad = await shop.methods.arhad().call();\n// const kerosene = await shop.methods.kerosene().call();\n// console.log(rice, wheat, arhad, kerosene);\n// const records = await Promise.all(\n//     Array(parseInt(recordLength))\n//       .fill()\n//       .map((element, index) => {\n//         return shop.methods.recordList(index).call();\n//       })\n//   );","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/pages/shops/record.js"],"names":["React","Component","Layout","validate","Header","Table","Button","post","postWithData","Shop","PreviousRecord","getInitialProps","props","headerToken","loggedIn","query","address","console","log","shop","fpdNameValue","methods","fpdName","call","dataInp","headers","data","status","records","nameList","i","length","ration","text","render","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../../components/layout';\nimport validate from '../../localmodules/token_validate';\nimport { Header, Table, Button } from 'semantic-ui-react';\nimport post from '../../localmodules/express_post';\nimport postWithData from '../../localmodules/express_post_data';\nimport Shop from '../../ethereum/shop';\n\n\nexport default class PreviousRecord extends Component {\n\n    static async getInitialProps(props) {\n        const { headerToken, loggedIn } = validate(props.query.headerToken);\n        const address = props.query.address;\n        console.log(address);\n        const shop = Shop(address);\n        \n        const fpdNameValue = await shop.methods.fpdName().call();\n        const dataInp = {\n            fpdName : fpdNameValue\n        }\n        const headers = { 'Content-Type':'application/json'};\n        const {data, status} = await postWithData('/record/record_list', headers, dataInp)\n        const records = data['result'];\n        console.log(records);\n        let nameList = [];\n        for(let i=0;i<records.length;i++){\n            const data = {\n                ration : records[i].ration\n            }\n            const headers = {\n                'Content-Type':'application/json'\n            };\n            \n            const { text, status } = await post('/user/login/me/name', headers, data);\n            nameList[i] = text;\n        }\n        console.log(nameList);\n        return { headerToken , loggedIn, address, records, nameList } //, recordLength, rice, wheat, arhad, kerosene };\n    }\n\n    // renderTable() {\n\n    //     console.log(this.props.records);\n    //     const tableRows = this.props.records.map((item, index) => {\n    //         return (\n    //             <Table.Row key={index}>\n    //                 <Table.Cell>{this.props.records.length - index}</Table.Cell>\n    //                 <Table.Cell>{this.props.nameList[index]}</Table.Cell>\n    //                 <Table.Cell>{item.rice}</Table.Cell>\n    //                 <Table.Cell>{item.wheat}</Table.Cell>\n    //                 <Table.Cell>{item.arhad}</Table.Cell>\n    //                 <Table.Cell>{item.kerosene}</Table.Cell>\n    //                 <Table.Cell>{item.date}</Table.Cell>\n    //                 <Table.Cell>{item.orderid}</Table.Cell>\n    //             </Table.Row>\n    //         );\n    //     });\n    //     return (\n    //         <div>\n    //             <Table>\n    //                 <Table.Header>\n    //                     <Table.Row>\n    //                         <Table.HeaderCell>SLNO.</Table.HeaderCell>\n    //                         <Table.HeaderCell>Holder Name</Table.HeaderCell>\n    //                         <Table.HeaderCell>Rice</Table.HeaderCell>\n    //                         <Table.HeaderCell>Wheat</Table.HeaderCell>\n    //                         <Table.HeaderCell>Arhad</Table.HeaderCell>\n    //                         <Table.HeaderCell>Kerosene</Table.HeaderCell>\n    //                         <Table.HeaderCell>Date(Time)</Table.HeaderCell>\n    //                         <Table.HeaderCell>Order Id</Table.HeaderCell>\n    //                     </Table.Row>\n    //                 </Table.Header>\n    //                 <Table.Body>\n    //                     {tableRows.reverse()}\n    //                 </Table.Body>\n    //             </Table>\n    //         </div>\n    //     );\n    // }\n\n    render() {\n        return (\n            <Layout loggedIn={this.props.loggedIn} headerToken={this.props.headerToken}>\n                <Header as='h2' textAlign='center' style={{color:'#2185d0'}}>RECORD TIMESTAMP</Header>\n                tjos s;fs;fs;\n            </Layout>\n        );\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const recordLength = await shop.methods.recordCount().call();\n        // const rice = await shop.methods.rice().call();\n        // const wheat = await shop.methods.wheat().call();\n        // const arhad = await shop.methods.arhad().call();\n        // const kerosene = await shop.methods.kerosene().call();\n        // console.log(rice, wheat, arhad, kerosene);\n        // const records = await Promise.all(\n        //     Array(parseInt(recordLength))\n        //       .fill()\n        //       .map((element, index) => {\n        //         return shop.methods.recordList(index).call();\n        //       })\n        //   );"]},"metadata":{},"sourceType":"module"}