{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport validate from '../../localmodules/token_validate';\nimport get from '../../localmodules/express_get';\nimport { Card } from 'semantic-ui-react';\nimport Layout from '../../components/layout';\nexport default class UserDetails extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"renderEachCard\", () => {\n      __jsx(Card.Content, null, __jsx(Card.Header, null, \"Details\"), __jsx(Card.Description, null, \"This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.\"), __jsx(Card.Meta, null, \"Description\"));\n    });\n\n    _defineProperty(this, \"renderCard\", () => {\n      return __jsx(Card, {\n        fluid: true\n      }, this.renderEachCard(), this.renderEachCard(), this.renderEachCard());\n    });\n  }\n\n  static getInitialProps(props) {\n    return validate(props.query.headerToken);\n  }\n\n  async componentDidMount() {\n    const headers = {\n      'Content-Type': 'application/json',\n      'x-auth-token': this.props.headerToken\n    };\n    let res;\n\n    if (this.props.loggedIn) {\n      res = await get('/user/login/me', headers);\n      console.log(res);\n    }\n\n    return {\n      res\n    };\n  }\n\n  render() {\n    return __jsx(Layout, null, this.renderCard());\n  }\n\n}","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/pages/user/details.js"],"names":["React","Component","validate","get","Card","Layout","UserDetails","renderEachCard","getInitialProps","props","query","headerToken","componentDidMount","headers","res","loggedIn","console","log","render","renderCard"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,OAAOC,GAAP,MAAgB,gCAAhB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,eAAe,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;;AAAA,4CAe9B,MAAM;AACnB,YAAC,IAAD,CAAM,OAAN,QACI,MAAC,IAAD,CAAM,MAAN,kBADJ,EAEI,MAAC,IAAD,CAAM,WAAN,wmBAFJ,EAGI,MAAC,IAAD,CAAM,IAAN,sBAHJ;AAKH,KArB8C;;AAAA,wCAuBlC,MAAM;AACf,aACI,MAAC,IAAD;AAAM,QAAA,KAAK;AAAX,SACK,KAAKM,cAAL,EADL,EAEK,KAAKA,cAAL,EAFL,EAGK,KAAKA,cAAL,EAHL,CADJ;AAOH,KA/B8C;AAAA;;AAE/C,SAAOC,eAAP,CAAuBC,KAAvB,EAA8B;AAC1B,WAAOP,QAAQ,CAACO,KAAK,CAACC,KAAN,CAAYC,WAAb,CAAf;AACH;;AACD,QAAMC,iBAAN,GAAyB;AACrB,UAAMC,OAAO,GAAG;AAAE,sBAAe,kBAAjB;AAAqC,sBAAiB,KAAKJ,KAAL,CAAWE;AAAjE,KAAhB;AACA,QAAIG,GAAJ;;AACA,QAAG,KAAKL,KAAL,CAAWM,QAAd,EAAuB;AACnBD,MAAAA,GAAG,GAAG,MAAMX,GAAG,CAAC,gBAAD,EAAmBU,OAAnB,CAAf;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACH;;AACD,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACH;;AAoBDI,EAAAA,MAAM,GAAE;AACJ,WAAO,MAAC,MAAD,QAAS,KAAKC,UAAL,EAAT,CAAP;AACH;;AAnC8C","sourcesContent":["import React, {Component} from 'react';\nimport validate from '../../localmodules/token_validate';\nimport get from '../../localmodules/express_get';\nimport { Card } from 'semantic-ui-react';\nimport Layout from '../../components/layout';\n\nexport default class UserDetails extends Component {\n\n    static getInitialProps(props) {\n        return validate(props.query.headerToken);\n    }\n    async componentDidMount(){\n        const headers = { 'Content-Type':'application/json', 'x-auth-token' : this.props.headerToken};\n        let res;\n        if(this.props.loggedIn){\n            res = await get('/user/login/me', headers);\n            console.log(res);\n        }\n        return { res };\n    }\n\n    renderEachCard = () => {\n        <Card.Content>\n            <Card.Header>Details</Card.Header>\n            <Card.Description>This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.This is a descriptive information that is a must watch.</Card.Description>\n            <Card.Meta>Description</Card.Meta>\n        </Card.Content>\n    }\n\n    renderCard = () => {\n        return (\n            <Card fluid>\n                {this.renderEachCard()}\n                {this.renderEachCard()}\n                {this.renderEachCard()}\n            </Card>\n        );\n    }\n\n    render(){\n        return <Layout>{this.renderCard()}</Layout> \n    }\n\n\n\n}"]},"metadata":{},"sourceType":"module"}