{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime-corejs2/regenerator\");\n\nvar factory = require('../ethereum/factory');\n\nvar web3 = require('../ethereum/web3');\n\nvar saveToEthereum = function saveToEthereum(obj) {\n  var accounts;\n  return _regeneratorRuntime.async(function saveToEthereum$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n        case 2:\n          accounts = _context.sent;\n          console.log(accounts, obj);\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(factory.methods.createShop(obj.managerName, obj.rice, obj.wheat, obj.arhad, obj.kerosene, obj.fpdName, obj.shopName, obj.addr).send({\n            from: accounts[0]\n          }));\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nvar manualSaveToEthereum = function manualSaveToEthereum() {\n  return _regeneratorRuntime.async(function manualSaveToEthereum$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log('This is saving multiples...');\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\nmodule.exports = {\n  saveToEthereum: saveToEthereum,\n  manualSaveToEthereum: manualSaveToEthereum\n};","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/localmodules/data_initialization.js"],"names":["factory","require","web3","saveToEthereum","obj","eth","getAccounts","accounts","console","log","methods","createShop","managerName","rice","wheat","arhad","kerosene","fpdName","shopName","addr","send","from","manualSaveToEthereum","module","exports"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,kBAAD,CAApB;;AAEA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACEF,IAAI,CAACG,GAAL,CAASC,WAAT,EADF;;AAAA;AACfC,UAAAA,QADe;AAErBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAAsBH,GAAtB;AAFqB;AAAA,2CAGfJ,OAAO,CAACU,OAAR,CACHC,UADG,CACQP,GAAG,CAACQ,WADZ,EACyBR,GAAG,CAACS,IAD7B,EACmCT,GAAG,CAACU,KADvC,EAC8CV,GAAG,CAACW,KADlD,EACyDX,GAAG,CAACY,QAD7D,EACuEZ,GAAG,CAACa,OAD3E,EACoFb,GAAG,CAACc,QADxF,EACkGd,GAAG,CAACe,IADtG,EAEHC,IAFG,CAEE;AACJC,YAAAA,IAAI,EAAEd,QAAQ,CAAC,CAAD;AADV,WAFF,CAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAYA,IAAMe,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA;AAAA;AAAA;AAAA;AAC3Bd,UAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;;AAD2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;;AAaAc,MAAM,CAACC,OAAP,GAAiB;AAAErB,EAAAA,cAAc,EAAdA,cAAF;AAAkBmB,EAAAA,oBAAoB,EAApBA;AAAlB,CAAjB","sourcesContent":["const factory = require('../ethereum/factory');\nconst web3 = require('../ethereum/web3');\n\nconst saveToEthereum = async (obj) => {\n  const accounts = await web3.eth.getAccounts();\n  console.log(accounts, obj);\n  await factory.methods\n    .createShop(obj.managerName, obj.rice, obj.wheat, obj.arhad, obj.kerosene, obj.fpdName, obj.shopName, obj.addr)\n    .send({\n      from: accounts[0],\n    });\n}\n\n\n\nconst manualSaveToEthereum = async () => {\n  console.log('This is saving multiples...');\n  \n}\n\n\n\n\n\n\n\n\n\nmodule.exports = { saveToEthereum, manualSaveToEthereum };"]},"metadata":{},"sourceType":"script"}