{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Comment, Header, Form, Button } from 'semantic-ui-react';\nimport postWithData from '../localmodules/express_post_data';\nexport default class CommentExampleComment extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      currentComment: '',\n      data: null,\n      status: null\n    });\n\n    _defineProperty(this, \"getInit\", async () => {\n      console.log(this.props.fpdName);\n      const dataInp = {\n        fpdName: this.props.fpdName\n      };\n      const headers = {\n        'Content-Type': 'application/json'\n      };\n      const {\n        data,\n        status\n      } = await postWithData('/complaints/list', headers, dataInp); //console.log(data.record, 'insidemethods')\n\n      return {\n        data: data['record'],\n        status\n      };\n    });\n\n    _defineProperty(this, \"postComplaint\", event => {\n      event.preventDefault();\n    });\n  }\n\n  async componentDidMount(props) {\n    console.log('name');\n    const {\n      data,\n      status\n    } = await this.getInit();\n    console.log(data);\n    this.setState({\n      data,\n      status\n    });\n  } // constructor(props){\n  //     super(props);\n  //     const { data, status } = this.getInit();\n  //     console.log(data, 'insideconstructor');\n  //     this.state = {\n  //         currentComment : '',\n  //         data,\n  //         status\n  //     }\n  // }\n\n\n  render() {\n    const d = ['a', 'b', 'c'];\n    const {\n      data\n    } = this.state;\n    console.log(data, d, 'inrender');\n    const comments = data.map((item, index) => {\n      return __jsx(Comment, null, __jsx(Comment.Content, null, __jsx(Comment.Author, {\n        as: \"a\"\n      }, \"Matt\"), __jsx(Comment.Metadata, null, __jsx(\"div\", null, \"Today at 5:42PM\")), __jsx(Comment.Text, null, \"How artistic!\"), __jsx(Comment.Actions, null, __jsx(Comment.Action, null, \"Reply\"))));\n    });\n    return __jsx(Comment.Group, null, __jsx(Header, {\n      as: \"h3\",\n      dividing: true\n    }, \"Complaints\"), comments, __jsx(Form, {\n      reply: true,\n      onSubmit: this.postComplaint\n    }, __jsx(Form.TextArea, {\n      value: this.state.currentComment,\n      onChange: e => this.setState({\n        currentComment: e.target.value\n      })\n    }), __jsx(Button, {\n      content: \"Add Reply\",\n      labelPosition: \"left\",\n      icon: \"edit\",\n      primary: true\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/components/complaint.js"],"names":["React","Component","Comment","Header","Form","Button","postWithData","CommentExampleComment","currentComment","data","status","console","log","props","fpdName","dataInp","headers","event","preventDefault","componentDidMount","getInit","setState","render","d","state","comments","map","item","index","postComplaint","e","target","value"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Comment,Header, Form, Button} from 'semantic-ui-react';\nimport postWithData from '../localmodules/express_post_data';\n\nexport default class CommentExampleComment extends Component {\n\n    state = {\n        currentComment : '',\n        data : null,\n        status : null\n    }\n\n    getInit = async () =>{\n        console.log( this.props.fpdName );\n        const dataInp = {\n            fpdName : this.props.fpdName\n        }\n        const headers = { 'Content-Type':'application/json'};\n        const {data, status} = await postWithData('/complaints/list', headers, dataInp)\n        //console.log(data.record, 'insidemethods')\n        return { data : data['record'] , status };\n    }\n\n    async componentDidMount(props){\n        console.log('name');\n        const { data, status } = await this.getInit();\n        console.log(data);\n        this.setState({ data, status });\n     }\n\n    // constructor(props){\n    //     super(props);\n    //     const { data, status } = this.getInit();\n    //     console.log(data, 'insideconstructor');\n    //     this.state = {\n    //         currentComment : '',\n    //         data,\n    //         status\n    //     }\n    // }\n\n    postComplaint = (event) =>{\n        event.preventDefault();\n    }\n\n    render() {\n        const d = ['a', 'b', 'c'];\n        const { data } = this.state;\n        console.log(data,d, 'inrender');\n        const comments = data.map((item, index) => {\n            return (\n                <Comment>\n                    <Comment.Content>\n                    <Comment.Author as='a'>Matt</Comment.Author>\n                    <Comment.Metadata>\n                        <div>Today at 5:42PM</div>\n                    </Comment.Metadata>\n                    <Comment.Text>How artistic!</Comment.Text>\n                    <Comment.Actions>\n                        <Comment.Action>Reply</Comment.Action>\n                    </Comment.Actions>\n                    </Comment.Content>\n                </Comment>\n            );\n        });\n        \n        return (\n            <Comment.Group>\n            <Header as='h3' dividing>\n                Complaints\n            </Header>\n        \n            {comments}\n        \n            <Form reply onSubmit={this.postComplaint}>\n                <Form.TextArea \n                    value={this.state.currentComment}\n                    onChange = {(e) => this.setState({currentComment : e.target.value})}\n                />\n                <Button content='Add Reply' labelPosition='left' icon='edit' primary />\n            </Form>\n            </Comment.Group>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}