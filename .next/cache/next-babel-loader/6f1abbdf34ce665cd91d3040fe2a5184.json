{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime-corejs2/regenerator\");\n\nvar Web3 = require('web3');\n\nvar web;\n\nvar func = function func() {\n  var web3, provider, _web;\n\n  return _regeneratorRuntime.async(function func$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(true && typeof window.web3 !== 'undefined')) {\n            _context.next = 7;\n            break;\n          }\n\n          // We are in the browser and metamask is running.\n          console.log(' We are in the browser and metamask is running.');\n          web3 = new Web3(window.web3.currentProvider);\n          console.log(ethereum);\n          return _context.abrupt(\"return\", web3);\n\n        case 7:\n          // We are on the server *OR* the user is not running metamask\n          console.log('We are on the server *OR* the user is not running metamask');\n          provider = new Web3.providers.HttpProvider('https://rinkeby.infura.io/v3/42d235c7d6304509a63bec8b043c9bc2');\n          _web = new Web3(provider);\n          console.log(_web);\n          return _context.abrupt(\"return\", _web);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nmodule.exports = web;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/ethereum/web3.js"],"names":["Web3","require","web","func","window","web3","console","log","currentProvider","ethereum","provider","providers","HttpProvider","module","exports"],"mappings":";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAIC,GAAJ;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gBACP,QAAiC,OAAOC,MAAM,CAACC,IAAd,KAAuB,WADjD;AAAA;AAAA;AAAA;;AAET;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ;AACMF,UAAAA,IAJG,GAII,IAAIL,IAAJ,CAASI,MAAM,CAACC,IAAP,CAAYG,eAArB,CAJJ;AAKTF,UAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AALS,2CAMFJ,IANE;;AAAA;AAQT;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,4DAAZ;AACMG,UAAAA,QAVG,GAUQ,IAAIV,IAAI,CAACW,SAAL,CAAeC,YAAnB,CACf,+DADe,CAVR;AAaHP,UAAAA,IAbG,GAaI,IAAIL,IAAJ,CAASU,QAAT,CAbJ;AAcTJ,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAdS,2CAeFA,IAfE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAb;;AAkBAQ,MAAM,CAACC,OAAP,GAAiBZ,GAAjB","sourcesContent":["const Web3 = require('web3');\n\nlet web;\nconst func = async () => {\n  if (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n    // We are in the browser and metamask is running.\n    console.log(' We are in the browser and metamask is running.');\n    const web3 = new Web3(window.web3.currentProvider);\n    console.log(ethereum);\n    return web3;\n  } else {\n    // We are on the server *OR* the user is not running metamask\n    console.log('We are on the server *OR* the user is not running metamask')\n    const provider = new Web3.providers.HttpProvider(\n      'https://rinkeby.infura.io/v3/42d235c7d6304509a63bec8b043c9bc2'\n    );\n    const web3 = new Web3(provider);\n    console.log(web3);\n    return web3;\n  }\n}\nmodule.exports = web;"]},"metadata":{},"sourceType":"script"}