{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs2/regenerator\"));\n\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/json/stringify\"));\n\nvar _crossFetch = _interopRequireDefault(require(\"cross-fetch\"));\n\nvar getWithData = function getWithData(url, headers, dataInp) {\n  var options, newUrl, res, data, status;\n  return _regenerator[\"default\"].async(function getWithData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          options = {\n            method: 'get',\n            headers: headers,\n            body: (0, _stringify[\"default\"])(dataInp)\n          };\n          newUrl = 'http://localhost:7800' + url;\n          _context.next = 4;\n          return _regenerator[\"default\"].awrap((0, _crossFetch[\"default\"])(newUrl, options));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return _regenerator[\"default\"].awrap(res.json());\n\n        case 7:\n          data = _context.sent;\n          _context.next = 10;\n          return _regenerator[\"default\"].awrap(res.status);\n\n        case 10:\n          status = _context.sent;\n          return _context.abrupt(\"return\", {\n            data: data,\n            status: status\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nmodule.exports = getWithData;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/localmodules/express_get_data.js"],"names":["getWithData","url","headers","dataInp","options","method","body","newUrl","res","json","data","status","module","exports"],"mappings":";;;;;;;;AAAA;;AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAAOC,GAAP,EAAYC,OAAZ,EAAqBC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEVC,UAAAA,OAFU,GAEA;AACZC,YAAAA,MAAM,EAAG,KADG;AAEZH,YAAAA,OAAO,EAAPA,OAFY;AAGZI,YAAAA,IAAI,EAAG,2BAAeH,OAAf;AAHK,WAFA;AAQVI,UAAAA,MARU,GAQD,0BAA0BN,GARzB;AAAA;AAAA,+CASE,4BAAMM,MAAN,EAAcH,OAAd,CATF;;AAAA;AASVI,UAAAA,GATU;AAAA;AAAA,+CAUGA,GAAG,CAACC,IAAJ,EAVH;;AAAA;AAUVC,UAAAA,IAVU;AAAA;AAAA,+CAWKF,GAAG,CAACG,MAXT;;AAAA;AAWVA,UAAAA,MAXU;AAAA,2CAaT;AACHD,YAAAA,IAAI,EAAJA,IADG;AAEHC,YAAAA,MAAM,EAANA;AAFG,WAbS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAmBAC,MAAM,CAACC,OAAP,GAAiBb,WAAjB","sourcesContent":["import fetch from 'cross-fetch';\n\nconst getWithData = async (url, headers, dataInp) => {\n\n    const options = {\n        method : 'get',\n        headers,\n        body : JSON.stringify(dataInp)\n    }\n\n    const newUrl = 'http://localhost:7800' + url; \n    const res = await fetch(newUrl, options);\n    const data = await res.json();\n    const status = await res.status;\n\n    return {\n        data,\n        status\n    }\n}\n\nmodule.exports = getWithData;"]},"metadata":{},"sourceType":"script"}