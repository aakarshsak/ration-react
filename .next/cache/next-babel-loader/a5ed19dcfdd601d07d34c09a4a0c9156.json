{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Card, Button } from 'semantic-ui-react';\nimport factory from '../ethereum/factory';\nimport Layout from '../components/layout';\nimport { Link } from '../routes';\nimport get from '../localmodules/express_get';\nimport validate from '../localmodules/token_validate';\nimport Shop from '../ethereum/shop';\nimport web3 from '../ethereum/web3'; // import jsonArray from '../localmodules/data_initialization';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"renderShops\", () => {\n      const items = this.props.shopList.map(item => {\n        return {\n          header: item.name,\n          description: __jsx(Link, {\n            route: `/${validate(this.props.headerToken).headerToken}/shops/${item.address}`\n          }, __jsx(\"a\", null, \"View Shops\")),\n          fluid: true\n        };\n      });\n      return __jsx(Card.Group, {\n        items: items\n      });\n    });\n\n    _defineProperty(this, \"onClick\", async event => {\n      event.preventDefault();\n      const headers = {\n        'Content-Type': 'application/json',\n        'x-auth-token': this.props.headerToken\n      };\n      const {\n        data,\n        status\n      } = await get('/user/login/me', headers);\n      console.log(data);\n      console.log(status);\n    });\n  }\n\n  static async getInitialProps(props) {\n    const accounts = await web3.eth.getAccounts();\n    console.log('Accounts', accounts);\n    const shops = await factory.methods.getDeployedShops().call();\n    let shopList = [];\n\n    for (let i = 0; i < shops.length; i++) {\n      const s = Shop(shops[i]);\n      const name = await s.methods.shopName().call();\n      const obj = {\n        name,\n        address: shops[i]\n      };\n      shopList.push(obj);\n    } //console.log(shopList);\n\n\n    const {\n      loggedIn,\n      headerToken\n    } = validate(props.query.headerToken);\n    return {\n      shops,\n      headerToken,\n      loggedIn,\n      shopList\n    };\n  }\n\n  render() {\n    return __jsx(Layout, {\n      loggedIn: this.props.loggedIn,\n      headerToken: this.props.headerToken\n    }, __jsx(\"div\", null, this.renderShops(), __jsx(Button, {\n      onClick: this.onClick,\n      content: \"Create Shops\",\n      icon: \"add circle\",\n      primary: true\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/pages/index.js"],"names":["React","Component","Card","Button","factory","Layout","Link","get","validate","Shop","web3","App","items","props","shopList","map","item","header","name","description","headerToken","address","fluid","event","preventDefault","headers","data","status","console","log","getInitialProps","accounts","eth","getAccounts","shops","methods","getDeployedShops","call","i","length","s","shopName","obj","push","loggedIn","query","render","renderShops","onClick"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Card, Button } from 'semantic-ui-react';\nimport factory from '../ethereum/factory';\nimport Layout from '../components/layout';\nimport { Link } from '../routes';\nimport get from '../localmodules/express_get';\nimport validate from '../localmodules/token_validate';\nimport Shop from '../ethereum/shop';\nimport web3 from '../ethereum/web3';\n// import jsonArray from '../localmodules/data_initialization';\n\nclass App extends Component {\n    \n    static async getInitialProps(props) {\n        const accounts = await web3.eth.getAccounts();\n        console.log('Accounts', accounts);\n        const shops = await factory.methods.getDeployedShops().call();\n        let shopList = [];\n        for(let i=0;i<shops.length;i++){\n            const s = Shop(shops[i]);\n            const name = await s.methods.shopName().call();\n            const obj = {\n                name,\n                address : shops[i]\n            };\n            shopList.push(obj);\n        }\n        //console.log(shopList);\n        const { loggedIn, headerToken } = validate(props.query.headerToken);\n        return { shops, headerToken, loggedIn, shopList };\n    }\n\n\n    renderShops = () => {\n        const items = this.props.shopList.map((item) => {\n            return{\n                header : item.name,\n                description : <Link route={`/${validate(this.props.headerToken).headerToken}/shops/${item.address}`}><a>View Shops</a></Link>,\n                fluid : true\n            };\n        });\n\n        return <Card.Group items={items}/>;\n    }\n\n    onClick = async (event) => {\n        event.preventDefault();\n        const headers = { \n                'Content-Type':'application/json',\n                'x-auth-token' : this.props.headerToken\n        };\n\n        const {data, status} = await get('/user/login/me', headers);\n        console.log(data);\n        console.log(status);\n    }\n\n    render() {\n        return (\n            <Layout loggedIn={this.props.loggedIn} headerToken={this.props.headerToken}>\n                <div>\n                    {this.renderShops()}\n                    <Button\n                        onClick={this.onClick}\n                        content=\"Create Shops\"\n                        icon=\"add circle\"\n                        primary\n                    />\n                </div>\n            </Layout>\n        );\n\n    }\n\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}