{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Input, GridColumn } from 'semantic-ui-react';\nimport Layout from '../../components/layout.js';\nimport { Link } from '../../routes';\n\nclass RegisterForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      address: {\n        pin: '',\n        house: '',\n        area: '',\n        district: '',\n        state: ''\n      },\n      name: {\n        firstName: '',\n        middleName: '',\n        lastName: ''\n      },\n      email: '',\n      aadhar: ''\n    });\n\n    _defineProperty(this, \"onSubmit\", event => {\n      event.preventDefault();\n      console.log(this.state);\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Grid, {\n      verticalAlign: \"middle\"\n    }, __jsx(Grid.Column, {\n      width: 2\n    }), __jsx(Grid.Column, {\n      width: 12\n    }, __jsx(Header, {\n      as: \"h2\",\n      color: \"blue\",\n      textAlign: \"center\",\n      style: {\n        margin: '35px 35px'\n      }\n    }, \"Register a new account\"), __jsx(Form, {\n      onSubmit: this.onSubmit\n    }, __jsx(Form.Group, {\n      widths: \"equal\"\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"First Name\"), __jsx(Input, {\n      placeholder: \"First Name\",\n      value: this.state.firstName,\n      onChange: event => this.setState({\n        firstName: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Middle Name\"), __jsx(Input, {\n      placeholder: \"Middle Name\",\n      value: this.state.middleName,\n      onChange: event => this.setState({\n        middleName: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Last Name\"), __jsx(Input, {\n      placeholder: \"Last Name\",\n      value: this.state.lastName,\n      onChange: event => this.setState({\n        lastName: event.target.value\n      })\n    }))), __jsx(Form.Group, null, __jsx(Form.Field, {\n      width: 8\n    }, __jsx(\"label\", null, \"House\"), __jsx(Input, {\n      placeholder: \"House\",\n      value: this.state.address.house,\n      onChange: event => this.setState({\n        address: {\n          house: event.target.value\n        }\n      })\n    })), __jsx(Form.Field, {\n      width: 8\n    }, __jsx(\"label\", null, \"Area\"), __jsx(Input, {\n      placeholder: \"Area\",\n      value: this.state.address.area,\n      onChange: event => this.setState({\n        address: {\n          area: event.target.value\n        }\n      })\n    }))), __jsx(Form.Group, null, __jsx(Form.Field, {\n      width: 6\n    }, __jsx(\"label\", null, \"District\"), __jsx(Input, {\n      placeholder: \"District\",\n      value: this.state.address.district,\n      onChange: event => this.setState({\n        address: {\n          district: event.target.value\n        }\n      })\n    })), __jsx(Form.Field, {\n      width: 6\n    }, __jsx(\"label\", null, \"State\"), __jsx(Input, {\n      placeholder: \"State\",\n      value: this.state.address.state,\n      onChange: event => this.setState({\n        address: {\n          state: event.target.value\n        }\n      })\n    })), __jsx(Form.Field, {\n      width: 4\n    }, __jsx(\"label\", null, \"Pin\"), __jsx(Input, {\n      placeholder: \"Pin\",\n      value: this.state.address.pin,\n      onChange: event => this.setState({\n        address: {\n          pin: event.target.value\n        }\n      })\n    }))), __jsx(Form.Group, null, __jsx(Form.Field, {\n      width: 8\n    }, __jsx(\"label\", null, \"House\"), __jsx(Input, {\n      placeholder: \"House\",\n      value: this.state.address.house,\n      onChange: event => this.setState({\n        address: {\n          house: event.target.value\n        }\n      })\n    })), __jsx(Form.Field, {\n      width: 8\n    }, __jsx(\"label\", null, \"Area\"), __jsx(Input, {\n      placeholder: \"Area\",\n      value: this.state.address.area,\n      onChange: event => this.setState({\n        address: {\n          area: event.target.value\n        }\n      })\n    }))), __jsx(Form.Group, {\n      widths: \"equal\"\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Email\"), __jsx(Input, {\n      placeholder: \"Email\",\n      value: this.state.address.email,\n      onChange: event => this.setState({\n        email: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"State\"), __jsx(Input, {\n      placeholder: \"aadhar\",\n      value: this.state.address.aadhar,\n      onChange: event => this.setState({\n        aadhar: event.target.value\n      })\n    }))), __jsx(Button, {\n      primary: true\n    }, \"Submit\"))), __jsx(Grid.Column, {\n      width: 2\n    })));\n  }\n\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/pages/user/register.js"],"names":["React","Component","Button","Form","Grid","Header","Image","Message","Segment","Input","GridColumn","Layout","Link","RegisterForm","address","pin","house","area","district","state","name","firstName","middleName","lastName","email","aadhar","event","preventDefault","console","log","render","margin","onSubmit","setState","target","value"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Input, GridColumn } from 'semantic-ui-react';\nimport Layout from '../../components/layout.js'\nimport { Link } from '../../routes';\n\n\nclass RegisterForm extends Component {\n\n    state = {\n        address : {\n            pin :'',\n            house:'',\n            area:'',\n            district:'',\n            state:'',\n        },\n        name : {\n            firstName : '',\n            middleName : '',\n            lastName : ''\n        },\n        email : '',\n        aadhar : ''\n    };\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        console.log(this.state);\n    }\n\n\n    render() {\n        return (\n            <Layout>\n                <Grid verticalAlign='middle' >\n                    <Grid.Column width={2}></Grid.Column>\n                    <Grid.Column width={12}>\n                        <Header as='h2' color='blue' textAlign='center' style={{margin : '35px 35px'}}>\n                            Register a new account\n                        </Header>\n                        <Form onSubmit={this.onSubmit}>\n                            <Form.Group widths='equal'>\n                                <Form.Field>\n                                    <label>First Name</label>\n                                    <Input\n                                        placeholder = 'First Name'\n                                        value={this.state.firstName}\n                                        onChange={event => this.setState({ firstName: event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Middle Name</label>\n                                    <Input\n                                        placeholder = 'Middle Name'\n                                        value={this.state.middleName}\n                                        onChange={event => this.setState({ middleName: event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Last Name</label>\n                                    <Input\n                                        placeholder = 'Last Name'\n                                        value={this.state.lastName}\n                                        onChange={event => this.setState({ lastName: event.target.value })}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Field width={8}>\n                                    <label>House</label>\n                                    <Input\n                                        placeholder = 'House'\n                                        value={this.state.address.house}\n                                        onChange={event => this.setState({ address : { house : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                <Form.Field width={8}>\n                                    <label>Area</label>\n                                    <Input\n                                        placeholder = 'Area'\n                                        value={this.state.address.area}\n                                        onChange={event => this.setState({ address : { area : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                \n                            </Form.Group>\n\n                            <Form.Group>\n                                <Form.Field width={6}>\n                                    <label>District</label>\n                                    <Input\n                                        placeholder = 'District'\n                                        value={this.state.address.district}\n                                        onChange={event => this.setState({ address : { district : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                <Form.Field width={6}>\n                                    <label>State</label>\n                                    <Input\n                                        placeholder = 'State'\n                                        value={this.state.address.state}\n                                        onChange={event => this.setState({ address : { state : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                <Form.Field width={4}>\n                                    <label>Pin</label>\n                                    <Input\n                                        placeholder = 'Pin'\n                                        value={this.state.address.pin}\n                                        onChange={event => this.setState({ address : { pin : event.target.value }})}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n\n                            <Form.Group>\n                                <Form.Field width={8}>\n                                    <label>House</label>\n                                    <Input\n                                        placeholder = 'House'\n                                        value={this.state.address.house}\n                                        onChange={event => this.setState({ address : { house : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                <Form.Field width={8}>\n                                    <label>Area</label>\n                                    <Input\n                                        placeholder = 'Area'\n                                        value={this.state.address.area}\n                                        onChange={event => this.setState({ address : { area : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                \n                            </Form.Group>\n\n                            <Form.Group widths='equal'>\n                                <Form.Field >\n                                    <label>Email</label>\n                                    <Input\n                                        placeholder = 'Email'\n                                        value={this.state.address.email}\n                                        onChange={event => this.setState({ email : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>State</label>\n                                    <Input\n                                        placeholder = 'aadhar'\n                                        value={this.state.address.aadhar}\n                                        onChange={event => this.setState({ aadhar : event.target.value })}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n                            <Button primary>Submit</Button>\n                            \n                        </Form>\n                    </Grid.Column>\n                    <Grid.Column width={2}></Grid.Column>\n                </Grid>\n            </Layout>\n        );\n    }\n}\n\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}