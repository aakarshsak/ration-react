{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react';\nimport Layout from '../../components/layout.js';\nimport { Link } from '../../routes';\nimport fetch from 'cross-fetch';\n\nvar LoginForm = /*#__PURE__*/function (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      email: '',\n      password: '',\n      res: ''\n    });\n\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"callAPI\",\n    value: function callAPI() {\n      var _this2 = this;\n\n      fetch('http://localhost:7800/registration_page', {\n        method: 'POST',\n        body: _JSON$stringify({\n          email: this.state.email,\n          password: this.state.password\n        })\n      }).then(function (res) {\n        return res.text();\n      }).then(function (res) {\n        return _this2.setState({\n          res: res\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.callAPI();\n      console.log(this.state.res);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(Layout, null, __jsx(Grid, {\n        textAlign: \"center\",\n        style: {\n          height: '100vh'\n        },\n        verticalAlign: \"middle\"\n      }, __jsx(Grid.Column, {\n        style: {\n          maxWidth: 450\n        }\n      }, __jsx(Header, {\n        as: \"h2\",\n        color: \"blue\",\n        textAlign: \"center\"\n      }, \"Log-in to your account\"), __jsx(Form, {\n        size: \"large\"\n      }, __jsx(Segment, {\n        stacked: true\n      }, __jsx(Form.Input, {\n        val: this.state.email,\n        onChange: function onChange(event) {\n          _this3.setState({\n            email: event.target.value\n          });\n        },\n        type: \"email\",\n        fluid: true,\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"E-mail address\"\n      }), __jsx(Form.Input, {\n        val: this.state.password,\n        onChange: function onChange(event) {\n          _this3.setState({\n            password: event.target.value\n          });\n        },\n        fluid: true,\n        icon: \"lock\",\n        iconPosition: \"left\",\n        placeholder: \"Password\",\n        type: \"password\"\n      }), __jsx(Button, {\n        color: \"blue\",\n        fluid: true,\n        size: \"large\"\n      }, \"Login\"))), __jsx(Message, null, \"New to us? \", __jsx(Link, {\n        route: \"/user/register\"\n      }, __jsx(\"a\", null, \"Sign Up\"))))));\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nexport default LoginForm;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/pages/user/login.js"],"names":["React","Component","Button","Form","Grid","Header","Image","Message","Segment","Layout","Link","fetch","LoginForm","email","password","res","method","body","state","then","text","setState","callAPI","console","log","height","maxWidth","event","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react';\nimport Layout from '../../components/layout.js'\nimport { Link } from '../../routes';\nimport fetch from 'cross-fetch';\n\nclass LoginForm extends Component {\n\n    state = {\n        email : '',\n        password : '',\n        res : ''\n    }\n\n\n    callAPI() {\n        fetch('http://localhost:7800/registration_page',\n        {\n            method : 'POST',\n            body : JSON.stringify({\n                email : this.state.email,\n                password : this.state.password\n            })\n\n        })\n        .then(( res ) => res.text())\n        .then((res) => this.setState({ res }));\n    }\n\n\n    componentDidMount() {\n        this.callAPI();\n        console.log(this.state.res);\n    }\n\n\n\n    render(){\n        return (\n            <Layout>\n                <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n                    <Grid.Column style={{ maxWidth: 450 }}>\n                    <Header as='h2' color='blue' textAlign='center'>\n                         Log-in to your account\n                    </Header>\n                    <Form size='large'>\n                        <Segment stacked>\n                        <Form.Input \n                            val = {this.state.email}\n                            onChange = { event => {this.setState({email : event.target.value})}} \n                            type = 'email'\n                            fluid \n                            icon='user' \n                            iconPosition='left' \n                            placeholder='E-mail address' />\n                        <Form.Input\n                            val = {this.state.password}\n                            onChange = { event => {this.setState({password : event.target.value})}} \n                            fluid\n                            icon='lock'\n                            iconPosition='left'\n                            placeholder='Password'\n                            type='password'\n                        />\n\n                        <Button color='blue' fluid size='large'>\n                            Login\n                        </Button>\n                        </Segment>\n                    </Form>\n                    <Message>\n                        New to us? <Link route='/user/register'><a>Sign Up</a></Link>\n                    </Message>\n                    </Grid.Column>\n                </Grid>\n            </Layout>\n        );\n    }\n\n}\n\nexport default LoginForm"]},"metadata":{},"sourceType":"module"}