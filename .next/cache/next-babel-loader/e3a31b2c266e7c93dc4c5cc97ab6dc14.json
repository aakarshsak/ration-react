{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime-corejs2/regenerator\");\n\nvar factory = require('../ethereum/factory');\n\nvar web3 = require('../ethereum/web3');\n\nvar Shop = require('../ethereum/shop');\n\nvar saveToEthereum = function saveToEthereum(obj) {\n  var accounts, addresses, s;\n  return _regeneratorRuntime.async(function saveToEthereum$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n        case 2:\n          accounts = _context.sent;\n          console.log(accounts, obj); // await factory.methods\n          //   .createShop(obj.managerName, obj.rice, obj.wheat, obj.arhad, obj.kerosene, obj.fpdName, obj.shopName, obj.addr)\n          //   .send({\n          //     from: accounts[0],\n          //   });\n\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(factory.methods.getDeployedShops().call());\n\n        case 6:\n          addresses = _context.sent;\n          console.log(addresses);\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(Shop(addresses[addresses.length - 1]));\n\n        case 10:\n          s = _context.sent;\n          _context.next = 13;\n          return _regeneratorRuntime.awrap(s.methods.createRequest(obj.blockName).send({\n            from: accounts[0]\n          }));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nmodule.exports = saveToEthereum;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/localmodules/data_initialization.js"],"names":["factory","require","web3","Shop","saveToEthereum","obj","eth","getAccounts","accounts","console","log","methods","getDeployedShops","call","addresses","length","s","createRequest","blockName","send","from","module","exports"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,kBAAD,CAApB;;AAEA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACEH,IAAI,CAACI,GAAL,CAASC,WAAT,EADF;;AAAA;AACfC,UAAAA,QADe;AAErBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAAsBH,GAAtB,EAFqB,CAGrB;AACA;AACA;AACA;AACA;;AAPqB;AAAA,2CASGL,OAAO,CAACW,OAAR,CAAgBC,gBAAhB,GAAmCC,IAAnC,EATH;;AAAA;AASfC,UAAAA,SATe;AAUrBL,UAAAA,OAAO,CAACC,GAAR,CAAYI,SAAZ;AAVqB;AAAA,2CAWLX,IAAI,CAACW,SAAS,CAACA,SAAS,CAACC,MAAV,GAAiB,CAAlB,CAAV,CAXC;;AAAA;AAWfC,UAAAA,CAXe;AAAA;AAAA,2CAYfA,CAAC,CAACL,OAAF,CAAUM,aAAV,CAAwBZ,GAAG,CAACa,SAA5B,EAAuCC,IAAvC,CAA4C;AAAEC,YAAAA,IAAI,EAAGZ,QAAQ,CAAC,CAAD;AAAjB,WAA5C,CAZe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAcAa,MAAM,CAACC,OAAP,GAAiBlB,cAAjB","sourcesContent":["const factory = require('../ethereum/factory');\nconst web3 = require('../ethereum/web3');\nconst Shop = require('../ethereum/shop');\n\nconst saveToEthereum = async (obj) => {\n  const accounts = await web3.eth.getAccounts();\n  console.log(accounts, obj);\n  // await factory.methods\n  //   .createShop(obj.managerName, obj.rice, obj.wheat, obj.arhad, obj.kerosene, obj.fpdName, obj.shopName, obj.addr)\n  //   .send({\n  //     from: accounts[0],\n  //   });\n\n  const addresses = await factory.methods.getDeployedShops().call();\n  console.log(addresses);\n  const s = await Shop(addresses[addresses.length-1]);\n  await s.methods.createRequest(obj.blockName).send({ from : accounts[0]});\n}\nmodule.exports = saveToEthereum;"]},"metadata":{},"sourceType":"script"}