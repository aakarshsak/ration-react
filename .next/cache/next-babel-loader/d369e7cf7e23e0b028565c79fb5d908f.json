{"ast":null,"code":"const Web3 = require('web3');\n\nlet web;\n\nconst func = async () => {\n  if (false && typeof window.web3 !== 'undefined') {\n    // We are in the browser and metamask is running.\n    console.log(' We are in the browser and metamask is running.');\n    const web3 = new Web3(window.ethereum);\n\n    try {\n      await window.ethereum.enable();\n    } catch (e) {\n      console.log(e);\n    }\n\n    return web3;\n  } else {\n    // We are on the server *OR* the user is not running metamask\n    console.log('We are on the server *OR* the user is not running metamask');\n    const provider = new Web3.providers.HttpProvider('https://rinkeby.infura.io/v3/42d235c7d6304509a63bec8b043c9bc2');\n    const web3 = new Web3(provider);\n    return web3;\n  }\n};\n\nmodule.exports = web;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/ethereum/web3.js"],"names":["Web3","require","web","func","window","web3","console","log","ethereum","enable","e","provider","providers","HttpProvider","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAIC,GAAJ;;AACA,MAAMC,IAAI,GAAG,YAAY;AACvB,MAAI,SAAiC,OAAOC,MAAM,CAACC,IAAd,KAAuB,WAA5D,EAAyE;AACvE;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ;AACA,UAAMF,IAAI,GAAG,IAAIL,IAAJ,CAASI,MAAM,CAACI,QAAhB,CAAb;;AACA,QAAI;AACF,YAAMJ,MAAM,CAACI,QAAP,CAAgBC,MAAhB,EAAN;AACD,KAFD,CAEE,OAAMC,CAAN,EAAS;AACTJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AACD;;AACD,WAAOL,IAAP;AACD,GAVD,MAUO;AACL;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,4DAAZ;AACA,UAAMI,QAAQ,GAAG,IAAIX,IAAI,CAACY,SAAL,CAAeC,YAAnB,CACf,+DADe,CAAjB;AAGA,UAAMR,IAAI,GAAG,IAAIL,IAAJ,CAASW,QAAT,CAAb;AACA,WAAON,IAAP;AACD;AACF,CApBD;;AAqBAS,MAAM,CAACC,OAAP,GAAiBb,GAAjB","sourcesContent":["const Web3 = require('web3');\n\nlet web;\nconst func = async () => {\n  if (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n    // We are in the browser and metamask is running.\n    console.log(' We are in the browser and metamask is running.');\n    const web3 = new Web3(window.ethereum);\n    try {\n      await window.ethereum.enable();\n    } catch(e) {\n      console.log(e);\n    }\n    return web3;\n  } else {\n    // We are on the server *OR* the user is not running metamask\n    console.log('We are on the server *OR* the user is not running metamask')\n    const provider = new Web3.providers.HttpProvider(\n      'https://rinkeby.infura.io/v3/42d235c7d6304509a63bec8b043c9bc2'\n    );\n    const web3 = new Web3(provider);\n    return web3;\n  }\n}\nmodule.exports = web;"]},"metadata":{},"sourceType":"script"}