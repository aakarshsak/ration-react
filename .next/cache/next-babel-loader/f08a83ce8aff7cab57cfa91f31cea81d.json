{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\nimport Layout from '../../components/layout.js';\nimport { Router, Link } from '../../routes';\nimport validate from '../../localmodules/token_validate';\nimport post from '../../localmodules/express_post';\n\nvar LoginForm = /*#__PURE__*/function (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      email: '',\n      password: '',\n      res: '',\n      errorMessage: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"callAPI\", function _callee() {\n      var data, headers, res, text, status;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                errorMessage: '',\n                res: ''\n              });\n\n              data = {\n                email: _this.state.email,\n                password: _this.state.password\n              };\n              headers = {\n                'Content-Type': 'application/json'\n              };\n              _context.prev = 3;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:7800/user/login', options));\n\n            case 6:\n              res = _context.sent;\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(res.text());\n\n            case 9:\n              text = _context.sent;\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(res.status);\n\n            case 12:\n              status = _context.sent;\n\n              if (status === 400) {\n                _this.setState({\n                  errorMessage: text,\n                  email: '',\n                  password: ''\n                });\n              } else if (status === 200) {\n                _this.setState({\n                  res: text\n                });\n\n                Router.pushRoute(\"/\".concat(validate(_this.state.res).headerToken));\n              }\n\n              _context.next = 19;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](3);\n              console.log(_context.t0);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[3, 16]]);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee2(event) {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              event.preventDefault();\n\n              _this.callAPI(); // console.log (\"In Submit : \", this.state.res);\n              // const options = {\n              //     method : 'get',\n              //     headers: { 'Content-Type':'application/json', 'x-auth-token' : this.state.res },\n              // };\n              // const res = await fetch('http://localhost:7800/user/login/me', options);\n              // const text = await JSON.stringify(res.text());\n              // const status = await res.status;\n              // console.log(text);\n              // console.log(status);\n\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showError\", function () {\n      if (_this.state.errorMessage === '') {\n        return null;\n      }\n\n      return __jsx(Message, {\n        error: true,\n        header: _this.state.errorMessage\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(Grid, {\n        textAlign: \"center\",\n        style: {\n          height: '100vh'\n        },\n        verticalAlign: \"middle\"\n      }, __jsx(Grid.Column, {\n        style: {\n          maxWidth: 450\n        }\n      }, __jsx(Header, {\n        as: \"h2\",\n        color: \"blue\",\n        textAlign: \"center\"\n      }, \"Log-in to your account\"), __jsx(Form, {\n        size: \"large\",\n        onSubmit: this.onSubmit\n      }, __jsx(Segment, {\n        stacked: true\n      }, __jsx(Form.Input, {\n        val: this.state.email,\n        onChange: function onChange(event) {\n          _this2.setState({\n            email: event.target.value\n          });\n        },\n        type: \"email\",\n        fluid: true,\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"E-mail address\"\n      }), __jsx(Form.Input, {\n        val: this.state.password,\n        onChange: function onChange(event) {\n          _this2.setState({\n            password: event.target.value\n          });\n        },\n        fluid: true,\n        icon: \"lock\",\n        iconPosition: \"left\",\n        placeholder: \"Password\",\n        type: \"password\"\n      }), __jsx(Button, {\n        color: \"blue\",\n        fluid: true,\n        size: \"large\"\n      }, \"Login\"))), __jsx(Message, null, \"New to us? \", __jsx(Link, {\n        route: \"/user/register\"\n      }, __jsx(\"a\", null, \"Sign Up\"))), this.showError())));\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nexport default LoginForm;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/pages/user/login.js"],"names":["React","Component","Button","Form","Grid","Header","Message","Segment","Layout","Router","Link","validate","post","LoginForm","email","password","res","errorMessage","setState","data","state","headers","fetch","options","text","status","pushRoute","headerToken","console","log","event","preventDefault","callAPI","height","maxWidth","onSubmit","target","value","showError"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\nimport Layout from '../../components/layout.js'\nimport { Router, Link } from '../../routes';\nimport validate from '../../localmodules/token_validate';\nimport post from '../../localmodules/express_post';\n\nclass LoginForm extends Component {\n\n    state = {\n        email : '',\n        password : '',\n        res : '',\n        errorMessage : ''\n    }\n\n    callAPI = async () => {\n        this.setState({errorMessage : '', res : ''});\n        const data = {\n            email : this.state.email,\n            password : this.state.password\n        };\n\n        const headers = { 'Content-Type':'application/json' };\n\n        try {\n            const res = await fetch('http://localhost:7800/user/login', options);\n            const text = await res.text();\n            const status = await res.status;\n\n            if(status === 400){\n                this.setState({ errorMessage : text, email : '', password : '' });\n            }\n            else if(status === 200) {\n                this.setState({ res : text });\n                Router.pushRoute(`/${validate(this.state.res).headerToken}`);\n            }\n\n        } catch (e) {\n            console.log(e);\n        }\n\n    }\n\n    onSubmit = async (event) => {\n        event.preventDefault();\n        this.callAPI();\n        // console.log (\"In Submit : \", this.state.res);\n        // const options = {\n        //     method : 'get',\n        //     headers: { 'Content-Type':'application/json', 'x-auth-token' : this.state.res },\n        // };\n        // const res = await fetch('http://localhost:7800/user/login/me', options);\n        // const text = await JSON.stringify(res.text());\n        // const status = await res.status;\n        // console.log(text);\n        // console.log(status);\n    }\n\n\n    showError = () => {\n        if(this.state.errorMessage === ''){\n            return null;\n        }\n        return <Message error header={this.state.errorMessage}></Message>;\n    }\n\n    render(){\n        return (\n            <Layout>\n                <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n                    <Grid.Column style={{ maxWidth: 450 }}>\n                    <Header as='h2' color='blue' textAlign='center'>\n                         Log-in to your account\n                    </Header>\n                    <Form size='large' onSubmit={this.onSubmit}>\n                        <Segment stacked>\n                        <Form.Input \n                            val = {this.state.email}\n                            onChange = { event => {this.setState({email : event.target.value})}} \n                            type = 'email'\n                            fluid \n                            icon='user' \n                            iconPosition='left' \n                            placeholder='E-mail address' />\n                        <Form.Input\n                            val = {this.state.password}\n                            onChange = { event => {this.setState({password : event.target.value})}} \n                            fluid\n                            icon='lock'\n                            iconPosition='left'\n                            placeholder='Password'\n                            type='password'\n                        />\n                        <Button color='blue' fluid size='large'>\n                            Login\n                        </Button>\n                        </Segment>\n                    </Form>\n                    <Message>\n                        New to us? <Link route='/user/register'><a>Sign Up</a></Link>\n                    </Message>   \n                    {this.showError()}\n                    </Grid.Column>\n                </Grid>\n            </Layout>\n        );\n    }\n\n}\n\nexport default LoginForm"]},"metadata":{},"sourceType":"module"}