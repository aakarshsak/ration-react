{"ast":null,"code":"var _JSON$stringify = require(\"@babel/runtime-corejs2/core-js/json/stringify\");\n\nvar fs = require('fs');\n\nvar parse = require('csv-parse');\n\nvar inputFile = 'tmk2.csv';\nconsole.log(\"Processing Countries file\");\nvar parser = parse({\n  delimiter: ';'\n}, function (err, data) {\n  // when all countries are available,then process them\n  // note: array element at index 0 contains the row of headers that we should skip\n  data.forEach(function (line) {\n    // create country object out of parsed fields\n    var country = {\n      \"Shop Number\": line[0],\n      \"Shop Name\": line[1],\n      \"Location\": line[2],\n      \"Manager Name\": line[4],\n      \"Rice\": line[5],\n      \"Wheat\": line[5],\n      \"Kerosene\": line[5],\n      \"Dal\": line[5],\n      \"Rice Price\": line[5],\n      \"Wheat Price\": line[5],\n      \"Kerosene Price\": line[5],\n      \"Dal Price\": line[5]\n    };\n    console.log(_JSON$stringify(country));\n  });\n}); // read the inputFile, feed the contents to the parser\n\nfs.createReadStream(inputFile).pipe(parser);","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/localModules/data_initialization.js"],"names":["fs","require","parse","inputFile","console","log","parser","delimiter","err","data","forEach","line","country","createReadStream","pipe"],"mappings":";;AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,WAAD,CAAnB;;AAEA,IAAIE,SAAS,GAAC,UAAd;AACAC,OAAO,CAACC,GAAR,CAAY,2BAAZ;AAEA,IAAIC,MAAM,GAAGJ,KAAK,CAAC;AAACK,EAAAA,SAAS,EAAE;AAAZ,CAAD,EAAmB,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AACtD;AACA;AACAA,EAAAA,IAAI,CAACC,OAAL,CAAa,UAASC,IAAT,EAAe;AAC1B;AACA,QAAIC,OAAO,GAAG;AAAE,qBAAgBD,IAAI,CAAC,CAAD,CAAtB;AACE,mBAAcA,IAAI,CAAC,CAAD,CADpB;AAEE,kBAAaA,IAAI,CAAC,CAAD,CAFnB;AAGE,sBAAiBA,IAAI,CAAC,CAAD,CAHvB;AAIE,cAASA,IAAI,CAAC,CAAD,CAJf;AAKE,eAAUA,IAAI,CAAC,CAAD,CALhB;AAME,kBAAaA,IAAI,CAAC,CAAD,CANnB;AAOE,aAAQA,IAAI,CAAC,CAAD,CAPd;AAQE,oBAAeA,IAAI,CAAC,CAAD,CARrB;AASE,qBAAgBA,IAAI,CAAC,CAAD,CATtB;AAUE,wBAAmBA,IAAI,CAAC,CAAD,CAVzB;AAWE,mBAAcA,IAAI,CAAC,CAAD;AAXpB,KAAd;AAaDP,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAeO,OAAf,CAAZ;AACA,GAhBD;AAiBH,CApBiB,CAAlB,C,CAsBA;;AACAZ,EAAE,CAACa,gBAAH,CAAoBV,SAApB,EAA+BW,IAA/B,CAAoCR,MAApC","sourcesContent":["var fs = require('fs');\nvar parse = require('csv-parse');\n \nvar inputFile='tmk2.csv';\nconsole.log(\"Processing Countries file\");\n \nvar parser = parse({delimiter: ';'}, function (err, data) {\n    // when all countries are available,then process them\n    // note: array element at index 0 contains the row of headers that we should skip\n    data.forEach(function(line) {\n      // create country object out of parsed fields\n      var country = { \"Shop Number\" : line[0]\n                    , \"Shop Name\" : line[1]\n                    , \"Location\" : line[2]\n                    , \"Manager Name\" : line[4]\n                    , \"Rice\" : line[5]\n                    , \"Wheat\" : line[5]\n                    , \"Kerosene\" : line[5]\n                    , \"Dal\" : line[5]\n                    , \"Rice Price\" : line[5]\n                    , \"Wheat Price\" : line[5]\n                    , \"Kerosene Price\" : line[5]\n                    , \"Dal Price\" : line[5]\n                    };\n     console.log(JSON.stringify(country));\n    });    \n});\n \n// read the inputFile, feed the contents to the parser\nfs.createReadStream(inputFile).pipe(parser);"]},"metadata":{},"sourceType":"script"}