{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime-corejs2/regenerator\");\n\nvar _JSON$stringify = require(\"@babel/runtime-corejs2/core-js/json/stringify\");\n\nvar fetch = require('cross-fetch');\n\nvar get = require('./fetch-states');\n\nvar post = function post(url, headers, data) {\n  var options, newUrl, res, text, status;\n  return _regeneratorRuntime.async(function post$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          options = {\n            method: 'post',\n            headers: headers,\n            body: _JSON$stringify(data)\n          };\n          newUrl = 'http://localhost:7800' + url;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(newUrl, options));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.text());\n\n        case 7:\n          text = _context.sent;\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(res.status);\n\n        case 10:\n          status = _context.sent;\n          return _context.abrupt(\"return\", {\n            text: text,\n            status: status\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nconsole.log(get);\nmodule.exports = post;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/localmodules/express_post.js"],"names":["fetch","require","get","post","url","headers","data","options","method","body","newUrl","res","text","status","console","log","module","exports"],"mappings":";;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,aAAD,CAArB;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAME,IAAI,GAAG,SAAPA,IAAO,CAAOC,GAAP,EAAYC,OAAZ,EAAqBC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHC,UAAAA,OAFG,GAEO;AACZC,YAAAA,MAAM,EAAG,MADG;AAEZH,YAAAA,OAAO,EAAPA,OAFY;AAGZI,YAAAA,IAAI,EAAG,gBAAeH,IAAf;AAHK,WAFP;AAQHI,UAAAA,MARG,GAQM,0BAA0BN,GARhC;AAAA;AAAA,2CASSJ,KAAK,CAACU,MAAD,EAASH,OAAT,CATd;;AAAA;AASHI,UAAAA,GATG;AAAA;AAAA,2CAUUA,GAAG,CAACC,IAAJ,EAVV;;AAAA;AAUHA,UAAAA,IAVG;AAAA;AAAA,2CAWYD,GAAG,CAACE,MAXhB;;AAAA;AAWHA,UAAAA,MAXG;AAAA,2CAaF;AACHD,YAAAA,IAAI,EAAJA,IADG;AAEHC,YAAAA,MAAM,EAANA;AAFG,WAbE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAb;;AAmBAC,OAAO,CAACC,GAAR,CAAYb,GAAZ;AAEAc,MAAM,CAACC,OAAP,GAAiBd,IAAjB","sourcesContent":["const fetch = require('cross-fetch');\nconst get = require('./fetch-states');\n\nconst post = async (url, headers, data) => {\n\n    const options = {\n        method : 'post',\n        headers,\n        body : JSON.stringify(data)\n    }\n\n    const newUrl = 'http://localhost:7800' + url; \n    const res = await fetch(newUrl, options);\n    const text = await res.text();\n    const status = await res.status;\n\n    return {\n        text,\n        status\n    }\n}\n\nconsole.log(get);\n\nmodule.exports = post;"]},"metadata":{},"sourceType":"script"}