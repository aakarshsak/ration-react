{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Input, GridColumn } from 'semantic-ui-react';\nimport Layout from '../../components/layout.js';\nimport { Link } from '../../routes';\nimport post from '../../localmodules/express_post';\n\nclass RegisterForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      pin: '',\n      house: '',\n      area: '',\n      district: '',\n      state: '',\n      phone: '',\n      first: '',\n      middle: '',\n      last: '',\n      password: '',\n      confirm_pass: '',\n      email: '',\n      aadhar: ''\n    });\n\n    _defineProperty(this, \"onSubmit\", event => {\n      event.preventDefault();\n      const {\n        password,\n        confirm_pass,\n        email,\n        pin,\n        house,\n        area,\n        district,\n        state,\n        phone,\n        first,\n        middle,\n        last,\n        aadhar\n      } = this.state;\n      const data = {\n        name: {\n          first,\n          middle,\n          last\n        },\n        password,\n        confirm_pass,\n        email,\n        address: {\n          house,\n          area,\n          district,\n          state,\n          pin,\n          phone\n        },\n        aadhar\n      };\n      const headers = {\n        'Content-Type': 'application/json'\n      };\n      const {\n        text,\n        status\n      } = post('/user/register', headers, data);\n\n      if (status === 200) {\n        console.log(text);\n        console.log(status);\n        console.log('Successfully posted...');\n      }\n    });\n  }\n\n  render() {\n    console.log(this.state.res);\n    return __jsx(Layout, null, __jsx(Grid, {\n      verticalAlign: \"middle\"\n    }, __jsx(Grid.Column, {\n      width: 2\n    }), __jsx(Grid.Column, {\n      width: 12\n    }, __jsx(Header, {\n      as: \"h2\",\n      color: \"blue\",\n      textAlign: \"center\",\n      style: {\n        margin: '35px 35px'\n      }\n    }, this.state.res), __jsx(Form, {\n      onSubmit: this.onSubmit\n    }, __jsx(Form.Group, {\n      widths: \"equal\"\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"First Name\"), __jsx(Input, {\n      placeholder: \"First Name\",\n      value: this.state.first,\n      onChange: event => this.setState({\n        first: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Middle Name\"), __jsx(Input, {\n      placeholder: \"Middle Name\",\n      value: this.state.middle,\n      onChange: event => this.setState({\n        middle: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Last Name\"), __jsx(Input, {\n      placeholder: \"Last Name\",\n      value: this.state.last,\n      onChange: event => this.setState({\n        last: event.target.value\n      })\n    }))), __jsx(Form.Group, null, __jsx(Form.Field, {\n      width: 8\n    }, __jsx(\"label\", null, \"House\"), __jsx(Input, {\n      placeholder: \"House\",\n      value: this.state.house,\n      onChange: event => this.setState({\n        house: event.target.value\n      })\n    })), __jsx(Form.Field, {\n      width: 8\n    }, __jsx(\"label\", null, \"Area\"), __jsx(Input, {\n      placeholder: \"Area\",\n      value: this.state.area,\n      onChange: event => this.setState({\n        area: event.target.value\n      })\n    }))), __jsx(Form.Group, null, __jsx(Form.Field, {\n      width: 6\n    }, __jsx(\"label\", null, \"District\"), __jsx(Input, {\n      placeholder: \"District\",\n      value: this.state.district,\n      onChange: event => this.setState({\n        district: event.target.value\n      })\n    })), __jsx(Form.Field, {\n      width: 6\n    }, __jsx(\"label\", null, \"State\"), __jsx(Input, {\n      placeholder: \"State\",\n      value: this.state.state,\n      onChange: event => this.setState({\n        state: event.target.value\n      })\n    })), __jsx(Form.Field, {\n      width: 4\n    }, __jsx(\"label\", null, \"Pin\"), __jsx(Input, {\n      placeholder: \"Pin\",\n      value: this.state.pin,\n      onChange: event => this.setState({\n        pin: event.target.value\n      })\n    }))), __jsx(Form.Group, {\n      widths: \"equal\"\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Email\"), __jsx(Input, {\n      placeholder: \"Email\",\n      type: \"email\",\n      value: this.state.email,\n      onChange: event => this.setState({\n        email: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Aadhar\"), __jsx(Input, {\n      placeholder: \"Aadhar\",\n      value: this.state.aadhar,\n      onChange: event => this.setState({\n        aadhar: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Phone\"), __jsx(Input, {\n      placeholder: \"Phone\",\n      value: this.state.phone,\n      onChange: event => this.setState({\n        phone: event.target.value\n      })\n    }))), __jsx(Form.Group, {\n      widths: \"equal\"\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Password\"), __jsx(Input, {\n      placeholder: \"Password\",\n      type: \"password\",\n      value: this.state.password,\n      onChange: event => this.setState({\n        password: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Confirm Password\"), __jsx(Input, {\n      placeholder: \"Confirm Password\",\n      type: \"password\",\n      value: this.state.confirm_pass,\n      onChange: event => this.setState({\n        confirm_pass: event.target.value\n      })\n    }))), __jsx(Button, {\n      primary: true\n    }, \"Submit\"))), __jsx(Grid.Column, {\n      width: 2\n    })));\n  }\n\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/pages/user/register.js"],"names":["React","Component","Button","Form","Grid","Header","Image","Message","Segment","Input","GridColumn","Layout","Link","post","RegisterForm","pin","house","area","district","state","phone","first","middle","last","password","confirm_pass","email","aadhar","event","preventDefault","data","name","address","headers","text","status","console","log","render","res","margin","onSubmit","setState","target","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqCC,KAArC,EAA4CC,OAA5C,EAAqDC,OAArD,EAA8DC,KAA9D,EAAqEC,UAArE,QAAuF,mBAAvF;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;;AAGA,MAAMC,YAAN,SAA2Bb,SAA3B,CAAqC;AAAA;AAAA;;AAAA,mCAEzB;AACAc,MAAAA,GAAG,EAAE,EADL;AAEAC,MAAAA,KAAK,EAAC,EAFN;AAGAC,MAAAA,IAAI,EAAC,EAHL;AAIAC,MAAAA,QAAQ,EAAC,EAJT;AAKAC,MAAAA,KAAK,EAAC,EALN;AAMAC,MAAAA,KAAK,EAAC,EANN;AAQAC,MAAAA,KAAK,EAAG,EARR;AASAC,MAAAA,MAAM,EAAG,EATT;AAUAC,MAAAA,IAAI,EAAG,EAVP;AAaJC,MAAAA,QAAQ,EAAG,EAbP;AAcJC,MAAAA,YAAY,EAAC,EAdT;AAeJC,MAAAA,KAAK,EAAG,EAfJ;AAgBJC,MAAAA,MAAM,EAAG;AAhBL,KAFyB;;AAAA,sCAqBrBC,KAAD,IAAW;AAClBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAACL,QAAAA,QAAD;AAAWC,QAAAA,YAAX;AAAyBC,QAAAA,KAAzB;AAAgCX,QAAAA,GAAhC;AAAqCC,QAAAA,KAArC;AAA4CC,QAAAA,IAA5C;AAAkDC,QAAAA,QAAlD;AAA4DC,QAAAA,KAA5D;AAAmEC,QAAAA,KAAnE;AAA0EC,QAAAA,KAA1E;AAAiFC,QAAAA,MAAjF;AAAyFC,QAAAA,IAAzF;AAA+FI,QAAAA;AAA/F,UAAyG,KAAKR,KAApH;AACA,YAAMW,IAAI,GAAG;AACTC,QAAAA,IAAI,EAAG;AAAEV,UAAAA,KAAF;AAASC,UAAAA,MAAT;AAAiBC,UAAAA;AAAjB,SADE;AAETC,QAAAA,QAFS;AAGTC,QAAAA,YAHS;AAITC,QAAAA,KAJS;AAKTM,QAAAA,OAAO,EAAG;AAAEhB,UAAAA,KAAF;AAASC,UAAAA,IAAT;AAAeC,UAAAA,QAAf;AAAyBC,UAAAA,KAAzB;AAAgCJ,UAAAA,GAAhC;AAAqCK,UAAAA;AAArC,SALD;AAMTO,QAAAA;AANS,OAAb;AAQA,YAAMM,OAAO,GAAG;AAAE,wBAAe;AAAjB,OAAhB;AACA,YAAM;AAACC,QAAAA,IAAD;AAAOC,QAAAA;AAAP,UAAiBtB,IAAI,CAAC,gBAAD,EAAmBoB,OAAnB,EAA4BH,IAA5B,CAA3B;;AACA,UAAGK,MAAM,KAAK,GAAd,EAAkB;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH;AACJ,KAvCgC;AAAA;;AA0CjCC,EAAAA,MAAM,GAAG;AACLF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWoB,GAAvB;AACA,WACI,MAAC,MAAD,QACI,MAAC,IAAD;AAAM,MAAA,aAAa,EAAC;AAApB,OACI,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAApB,MADJ,EAEI,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAApB,OACI,MAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAgB,MAAA,KAAK,EAAC,MAAtB;AAA6B,MAAA,SAAS,EAAC,QAAvC;AAAgD,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAG;AAAV;AAAvD,OACK,KAAKrB,KAAL,CAAWoB,GADhB,CADJ,EAII,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKE;AAArB,OACI,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,EAAC;AAAnB,OACI,MAAC,IAAD,CAAM,KAAN,QACI,kCADJ,EAEI,MAAC,KAAD;AACI,MAAA,WAAW,EAAG,YADlB;AAEI,MAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWE,KAFtB;AAGI,MAAA,QAAQ,EAAEO,KAAK,IAAI,KAAKc,QAAL,CAAc;AAAErB,QAAAA,KAAK,EAAGO,KAAK,CAACe,MAAN,CAAaC;AAAvB,OAAd;AAHvB,MAFJ,CADJ,EASI,MAAC,IAAD,CAAM,KAAN,QACI,mCADJ,EAEI,MAAC,KAAD;AACI,MAAA,WAAW,EAAG,aADlB;AAEI,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWG,MAFtB;AAGI,MAAA,QAAQ,EAAEM,KAAK,IAAI,KAAKc,QAAL,CAAc;AAACpB,QAAAA,MAAM,EAAEM,KAAK,CAACe,MAAN,CAAaC;AAAtB,OAAd;AAHvB,MAFJ,CATJ,EAiBI,MAAC,IAAD,CAAM,KAAN,QACI,iCADJ,EAEI,MAAC,KAAD;AACI,MAAA,WAAW,EAAG,WADlB;AAEI,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWI,IAFtB;AAGI,MAAA,QAAQ,EAAEK,KAAK,IAAI,KAAKc,QAAL,CAAc;AAACnB,QAAAA,IAAI,EAAEK,KAAK,CAACe,MAAN,CAAaC;AAApB,OAAd;AAHvB,MAFJ,CAjBJ,CADJ,EA2BI,MAAC,IAAD,CAAM,KAAN,QACI,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAnB,OACI,6BADJ,EAEI,MAAC,KAAD;AACI,MAAA,WAAW,EAAG,OADlB;AAEI,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWH,KAFtB;AAGI,MAAA,QAAQ,EAAEY,KAAK,IAAI,KAAKc,QAAL,CAAc;AAAC1B,QAAAA,KAAK,EAAGY,KAAK,CAACe,MAAN,CAAaC;AAAtB,OAAd;AAHvB,MAFJ,CADJ,EASI,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAnB,OACI,4BADJ,EAEI,MAAC,KAAD;AACI,MAAA,WAAW,EAAG,MADlB;AAEI,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWF,IAFtB;AAGI,MAAA,QAAQ,EAAEW,KAAK,IAAI,KAAKc,QAAL,CAAc;AAAEzB,QAAAA,IAAI,EAAGW,KAAK,CAACe,MAAN,CAAaC;AAAtB,OAAd;AAHvB,MAFJ,CATJ,CA3BJ,EA+CI,MAAC,IAAD,CAAM,KAAN,QACI,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAnB,OACI,gCADJ,EAEI,MAAC,KAAD;AACI,MAAA,WAAW,EAAG,UADlB;AAEI,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWD,QAFtB;AAGI,MAAA,QAAQ,EAAEU,KAAK,IAAI,KAAKc,QAAL,CAAc;AAACxB,QAAAA,QAAQ,EAAGU,KAAK,CAACe,MAAN,CAAaC;AAAzB,OAAd;AAHvB,MAFJ,CADJ,EASI,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAnB,OACI,6BADJ,EAEI,MAAC,KAAD;AACI,MAAA,WAAW,EAAG,OADlB;AAEI,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWA,KAFtB;AAGI,MAAA,QAAQ,EAAES,KAAK,IAAI,KAAKc,QAAL,CAAc;AAACvB,QAAAA,KAAK,EAAGS,KAAK,CAACe,MAAN,CAAaC;AAAtB,OAAd;AAHvB,MAFJ,CATJ,EAiBI,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAnB,OACI,2BADJ,EAEI,MAAC,KAAD;AACI,MAAA,WAAW,EAAG,KADlB;AAEI,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWJ,GAFtB;AAGI,MAAA,QAAQ,EAAEa,KAAK,IAAI,KAAKc,QAAL,CAAc;AAAE3B,QAAAA,GAAG,EAAGa,KAAK,CAACe,MAAN,CAAaC;AAArB,OAAd;AAHvB,MAFJ,CAjBJ,CA/CJ,EA8FI,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,EAAC;AAAnB,OACI,MAAC,IAAD,CAAM,KAAN,QACI,6BADJ,EAEI,MAAC,KAAD;AACI,MAAA,WAAW,EAAG,OADlB;AAEI,MAAA,IAAI,EAAG,OAFX;AAGI,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWO,KAHtB;AAII,MAAA,QAAQ,EAAEE,KAAK,IAAI,KAAKc,QAAL,CAAc;AAAEhB,QAAAA,KAAK,EAAGE,KAAK,CAACe,MAAN,CAAaC;AAAvB,OAAd;AAJvB,MAFJ,CADJ,EAUI,MAAC,IAAD,CAAM,KAAN,QACI,8BADJ,EAEI,MAAC,KAAD;AACI,MAAA,WAAW,EAAG,QADlB;AAEI,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWQ,MAFtB;AAGI,MAAA,QAAQ,EAAEC,KAAK,IAAI,KAAKc,QAAL,CAAc;AAAEf,QAAAA,MAAM,EAAGC,KAAK,CAACe,MAAN,CAAaC;AAAxB,OAAd;AAHvB,MAFJ,CAVJ,EAkBI,MAAC,IAAD,CAAM,KAAN,QACI,6BADJ,EAEI,MAAC,KAAD;AACI,MAAA,WAAW,EAAG,OADlB;AAEI,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWC,KAFtB;AAGI,MAAA,QAAQ,EAAEQ,KAAK,IAAI,KAAKc,QAAL,CAAc;AAACtB,QAAAA,KAAK,EAAGQ,KAAK,CAACe,MAAN,CAAaC;AAAtB,OAAd;AAHvB,MAFJ,CAlBJ,CA9FJ,EAyHI,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,EAAC;AAAnB,OACI,MAAC,IAAD,CAAM,KAAN,QACI,gCADJ,EAEI,MAAC,KAAD;AACI,MAAA,WAAW,EAAG,UADlB;AAEI,MAAA,IAAI,EAAG,UAFX;AAGI,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWK,QAHtB;AAII,MAAA,QAAQ,EAAEI,KAAK,IAAI,KAAKc,QAAL,CAAc;AAAElB,QAAAA,QAAQ,EAAGI,KAAK,CAACe,MAAN,CAAaC;AAA1B,OAAd;AAJvB,MAFJ,CADJ,EAUI,MAAC,IAAD,CAAM,KAAN,QACI,wCADJ,EAEI,MAAC,KAAD;AACI,MAAA,WAAW,EAAG,kBADlB;AAEI,MAAA,IAAI,EAAG,UAFX;AAGI,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWM,YAHtB;AAII,MAAA,QAAQ,EAAEG,KAAK,IAAI,KAAKc,QAAL,CAAc;AAAEjB,QAAAA,YAAY,EAAGG,KAAK,CAACe,MAAN,CAAaC;AAA9B,OAAd;AAJvB,MAFJ,CAVJ,CAzHJ,EA6II,MAAC,MAAD;AAAQ,MAAA,OAAO;AAAf,gBA7IJ,CAJJ,CAFJ,EAuJI,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAApB,MAvJJ,CADJ,CADJ;AA6JH;;AAzMgC;;AA4MrC,eAAe9B,YAAf","sourcesContent":["import React, {Component} from 'react';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Input, GridColumn } from 'semantic-ui-react';\nimport Layout from '../../components/layout.js'\nimport { Link } from '../../routes';\nimport post from '../../localmodules/express_post'; \n\n\nclass RegisterForm extends Component {\n\n    state = {\n            pin :'',\n            house:'',\n            area:'',\n            district:'',\n            state:'',\n            phone:'',\n\n            first : '',\n            middle : '',\n            last : '',\n\n\n        password : '',\n        confirm_pass:'',\n        email : '',\n        aadhar : '',\n    };\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        const {password, confirm_pass, email, pin, house, area, district, state, phone, first, middle, last, aadhar} = this.state;\n        const data = {\n            name : { first, middle, last }, \n            password, \n            confirm_pass, \n            email, \n            address : { house, area, district, state, pin, phone }, \n            aadhar\n        };\n        const headers = { 'Content-Type':'application/json' };\n        const {text, status} = post('/user/register', headers, data);\n        if(status === 200){\n            console.log(text);\n            console.log(status);\n            console.log('Successfully posted...');\n        }\n    }\n\n\n    render() {\n        console.log(this.state.res);\n        return (\n            <Layout>\n                <Grid verticalAlign='middle' >\n                    <Grid.Column width={2}></Grid.Column>\n                    <Grid.Column width={12}>\n                        <Header as='h2' color='blue' textAlign='center' style={{margin : '35px 35px'}}>\n                            {this.state.res}\n                        </Header>\n                        <Form onSubmit={this.onSubmit}>\n                            <Form.Group widths='equal'>\n                                <Form.Field>\n                                    <label>First Name</label>\n                                    <Input\n                                        placeholder = 'First Name'\n                                        value={this.state.first}\n                                        onChange={event => this.setState({ first : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Middle Name</label>\n                                    <Input\n                                        placeholder = 'Middle Name'\n                                        value={this.state.middle}\n                                        onChange={event => this.setState({middle: event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Last Name</label>\n                                    <Input\n                                        placeholder = 'Last Name'\n                                        value={this.state.last}\n                                        onChange={event => this.setState({last: event.target.value })}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Field width={8}>\n                                    <label>House</label>\n                                    <Input\n                                        placeholder = 'House'\n                                        value={this.state.house}\n                                        onChange={event => this.setState({house : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field width={8}>\n                                    <label>Area</label>\n                                    <Input\n                                        placeholder = 'Area'\n                                        value={this.state.area}\n                                        onChange={event => this.setState({ area : event.target.value })}\n                                    />\n                                </Form.Field>\n                                \n                            </Form.Group>\n\n                            <Form.Group>\n                                <Form.Field width={6}>\n                                    <label>District</label>\n                                    <Input\n                                        placeholder = 'District'\n                                        value={this.state.district}\n                                        onChange={event => this.setState({district : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field width={6}>\n                                    <label>State</label>\n                                    <Input\n                                        placeholder = 'State'\n                                        value={this.state.state}\n                                        onChange={event => this.setState({state : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field width={4}>\n                                    <label>Pin</label>\n                                    <Input\n                                        placeholder = 'Pin'\n                                        value={this.state.pin}\n                                        onChange={event => this.setState({ pin : event.target.value })}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n\n                            {/* <Form.Group>\n                                <Form.Field width={8}>\n                                    <label>House</label>\n                                    <Input\n                                        placeholder = 'House'\n                                        value={this.state.address.house}\n                                        onChange={event => this.setState({ address : { house : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                <Form.Field width={8}>\n                                    <label>Area</label>\n                                    <Input\n                                        placeholder = 'Area'\n                                        value={this.state.address.area}\n                                        onChange={event => this.setState({ address : { area : event.target.value }})}\n                                    />\n                                </Form.Field>\n                                \n                            </Form.Group> */}\n\n                            <Form.Group widths='equal'>\n                                <Form.Field >\n                                    <label>Email</label>\n                                    <Input\n                                        placeholder = 'Email'\n                                        type = 'email'\n                                        value={this.state.email}\n                                        onChange={event => this.setState({ email : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Aadhar</label>\n                                    <Input\n                                        placeholder = 'Aadhar'\n                                        value={this.state.aadhar}\n                                        onChange={event => this.setState({ aadhar : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Phone</label>\n                                    <Input\n                                        placeholder = 'Phone'\n                                        value={this.state.phone}\n                                        onChange={event => this.setState({phone : event.target.value })}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n                            <Form.Group widths='equal'>\n                                <Form.Field >\n                                    <label>Password</label>\n                                    <Input\n                                        placeholder = 'Password'\n                                        type = 'password'\n                                        value={this.state.password}\n                                        onChange={event => this.setState({ password : event.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Confirm Password</label>\n                                    <Input\n                                        placeholder = 'Confirm Password'\n                                        type = 'password'\n                                        value={this.state.confirm_pass}\n                                        onChange={event => this.setState({ confirm_pass : event.target.value })}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n                            <Button primary>Submit</Button>\n                            \n                        </Form>\n                    </Grid.Column>\n                    <Grid.Column width={2}></Grid.Column>\n                </Grid>\n            </Layout>\n        );\n    }\n}\n\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}