{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../../components/layout';\nimport validate from '../../localmodules/token_validate';\nimport { Header, Table, Button } from 'semantic-ui-react';\nimport post from '../../localmodules/express_post';\nimport postWithData from '../../localmodules/express_post_data';\nimport Shop from '../../ethereum/shop';\nimport Receipt from '../../components/receipt';\nexport default class PreviousRecord extends Component {\n  static async getInitialProps(props) {\n    const {\n      headerToken,\n      loggedIn\n    } = validate(props.query.headerToken);\n    const address = props.query.address;\n    console.log(address);\n    const shop = Shop(address);\n    const fpdNameValue = await shop.methods.fpdName().call();\n    const dataInp = {\n      fpdName: fpdNameValue\n    };\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    const {\n      data,\n      status\n    } = await postWithData('/record/record_list', headers, dataInp);\n    const records = data['result'];\n    let nameList = [];\n\n    for (let i = 0; i < records.length; i++) {\n      const data = {\n        ration: records[i].ration\n      };\n      const headers = {\n        'Content-Type': 'application/json'\n      };\n      const {\n        text,\n        status\n      } = await post('/user/login/me/name', headers, data);\n      nameList[i] = text;\n    }\n\n    console.log(nameList);\n    return {\n      headerToken,\n      loggedIn,\n      address,\n      records,\n      nameList\n    }; //, recordLength, rice, wheat, arhad, kerosene };\n  }\n\n  renderTable() {\n    const tableRows = this.props.records.map((item, index) => {\n      return __jsx(Table.Row, {\n        key: index\n      }, __jsx(Table.Cell, null, this.props.records.length - index), __jsx(Table.Cell, null, this.props.nameList[index]), __jsx(Table.Cell, null, item.rice), __jsx(Table.Cell, null, item.wheat), __jsx(Table.Cell, null, item.arhad), __jsx(Table.Cell, null, item.kerosene), __jsx(Table.Cell, null, item.date.substring(0, item.date.indexOf('('))));\n    });\n    return __jsx(\"div\", null, __jsx(Table, null, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, null, \"SLNO.\"), __jsx(Table.HeaderCell, null, \"Holder Name\"), __jsx(Table.HeaderCell, null, \"Rice\"), __jsx(Table.HeaderCell, null, \"Wheat\"), __jsx(Table.HeaderCell, null, \"Arhad\"), __jsx(Table.HeaderCell, null, \"Kerosene\"), __jsx(Table.HeaderCell, null, \"Date\"))), __jsx(Table.Body, null, tableRows.reverse())));\n  }\n\n  render() {\n    return __jsx(Layout, {\n      loggedIn: this.props.loggedIn,\n      headerToken: this.props.headerToken\n    }, __jsx(Receipt, null));\n  }\n\n} // const recordLength = await shop.methods.recordCount().call();\n// const rice = await shop.methods.rice().call();\n// const wheat = await shop.methods.wheat().call();\n// const arhad = await shop.methods.arhad().call();\n// const kerosene = await shop.methods.kerosene().call();\n// console.log(rice, wheat, arhad, kerosene);\n// const records = await Promise.all(\n//     Array(parseInt(recordLength))\n//       .fill()\n//       .map((element, index) => {\n//         return shop.methods.recordList(index).call();\n//       })\n//   );","map":{"version":3,"sources":["/home/zoro/Documents/Programming/JS/ration/ration-react/pages/shops/record.js"],"names":["React","Component","Layout","validate","Header","Table","Button","post","postWithData","Shop","Receipt","PreviousRecord","getInitialProps","props","headerToken","loggedIn","query","address","console","log","shop","fpdNameValue","methods","fpdName","call","dataInp","headers","data","status","records","nameList","i","length","ration","text","renderTable","tableRows","map","item","index","rice","wheat","arhad","kerosene","date","substring","indexOf","reverse","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../../components/layout';\nimport validate from '../../localmodules/token_validate';\nimport { Header, Table, Button } from 'semantic-ui-react';\nimport post from '../../localmodules/express_post';\nimport postWithData from '../../localmodules/express_post_data';\nimport Shop from '../../ethereum/shop';\nimport Receipt from '../../components/receipt';\n\n\nexport default class PreviousRecord extends Component {\n\n    static async getInitialProps(props) {\n        const { headerToken, loggedIn } = validate(props.query.headerToken);\n        const address = props.query.address;\n        console.log(address);\n        const shop = Shop(address);\n        \n        const fpdNameValue = await shop.methods.fpdName().call();\n        const dataInp = {\n            fpdName : fpdNameValue\n        }\n        const headers = { 'Content-Type':'application/json'};\n        const { data, status } = await postWithData('/record/record_list', headers, dataInp)\n        const records = data['result'];\n        let nameList = [];\n        for(let i=0;i<records.length;i++){\n            const data = {\n                ration : records[i].ration\n            }\n            const headers = {\n                'Content-Type':'application/json'\n            };\n            \n            const { text, status } = await post('/user/login/me/name', headers, data);\n            nameList[i] = text;\n        }\n        console.log(nameList);\n        return { headerToken , loggedIn, address, records, nameList } //, recordLength, rice, wheat, arhad, kerosene };\n    }\n\n    renderTable() {\n\n        const tableRows = this.props.records.map((item, index) => {\n            return (\n                <Table.Row key={index}>\n                    <Table.Cell>{this.props.records.length - index}</Table.Cell>\n                    <Table.Cell>{this.props.nameList[index]}</Table.Cell>\n                    <Table.Cell>{item.rice}</Table.Cell>\n                    <Table.Cell>{item.wheat}</Table.Cell>\n                    <Table.Cell>{item.arhad}</Table.Cell>\n                    <Table.Cell>{item.kerosene}</Table.Cell>\n                    <Table.Cell>{item.date.substring(0, item.date.indexOf('('))}</Table.Cell>\n                    {/* <Table.Cell>{item.orderid}</Table.Cell> */}\n                </Table.Row>\n            );\n        });\n        return (\n            <div>\n                <Table>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>SLNO.</Table.HeaderCell>\n                            <Table.HeaderCell>Holder Name</Table.HeaderCell>\n                            <Table.HeaderCell>Rice</Table.HeaderCell>\n                            <Table.HeaderCell>Wheat</Table.HeaderCell>\n                            <Table.HeaderCell>Arhad</Table.HeaderCell>\n                            <Table.HeaderCell>Kerosene</Table.HeaderCell>\n                            <Table.HeaderCell>Date</Table.HeaderCell>\n                            {/* <Table.HeaderCell>Order Id</Table.HeaderCell> */}\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {tableRows.reverse()}\n                    </Table.Body>\n                </Table>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <Layout loggedIn={this.props.loggedIn} headerToken={this.props.headerToken}>\n                 {/* <Header as='h2' textAlign='center' style={{color:'#2185d0'}}>RECORD TIMESTAMP</Header>\n                 {this.renderTable()} */}\n                <Receipt />\n            </Layout>\n                \n        );\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const recordLength = await shop.methods.recordCount().call();\n        // const rice = await shop.methods.rice().call();\n        // const wheat = await shop.methods.wheat().call();\n        // const arhad = await shop.methods.arhad().call();\n        // const kerosene = await shop.methods.kerosene().call();\n        // console.log(rice, wheat, arhad, kerosene);\n        // const records = await Promise.all(\n        //     Array(parseInt(recordLength))\n        //       .fill()\n        //       .map((element, index) => {\n        //         return shop.methods.recordList(index).call();\n        //       })\n        //   );"]},"metadata":{},"sourceType":"module"}